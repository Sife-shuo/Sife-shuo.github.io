(function() {
    var Oe = (Se,de,Y)=>new Promise((le,j)=>{
        var F = K=>{
            try {
                ae(Y.next(K))
            } catch (J) {
                j(J)
            }
        }
          , te = K=>{
            try {
                ae(Y.throw(K))
            } catch (J) {
                j(J)
            }
        }
          , ae = K=>K.done ? le(K.value) : Promise.resolve(K.value).then(F, te);
        ae((Y = Y.apply(Se, de)).next())
    }
    );
    (self.webpackChunkvirtuallab = self.webpackChunkvirtuallab || []).push([[285], {
        21127: function(Se, de, Y) {
            "use strict";
            Y.d(de, {
                L: function() {
                    return le
                }
            });
            class le {
                static setOnloadTime() {
                    this.onloadTime || (this.onloadTime = new Date().getTime())
                }
                static appiumData() {
                    return Oe(this, null, function*() {
                        if (this.posted)
                            return;
                        this.posted = !0;
                        const F = _.get(window, "nbWebChannel");
                        if (F) {
                            const ae = yield this.getSObjStr();
                            F.postMessage(ae);
                            return
                        }
                        const te = _.get(window, "webkit.messageHandlers.jsToOcWithPrams");
                        if (te) {
                            const ae = yield this.getSObjStr(!0);
                            te.postMessage({
                                params: ae
                            })
                        }
                    })
                }
                static getSObjStr(F=!1) {
                    return Oe(this, null, function*() {
                        const {domainLookupStart: te} = window.performance.timing
                          , ae = this.onloadTime
                          , K = new Date().getTime()
                          , J = {
                            emptyTime: ae - te,
                            emTocomTime: K - ae,
                            totalTime: K - te
                        }
                          , he = NBLog.getMobileInfo();
                        let fe = yield this.calcuFPS();
                        if (J.fps = fe,
                        J.browser = he.browser,
                        F) {
                            let Pe = navigator.userAgent.split(" ");
                            for (let re = 0; re < Pe.length; re++)
                                Pe[re].includes("AppleWebKit") && (J.browser = Pe[re].replace("/", " "))
                        }
                        return console.log(`~~~~~ nbWebChannel:${fe}`, J),
                        JSON.stringify(J)
                    })
                }
                static calcuFPS() {
                    let F = 0
                      , te = 0;
                    return new Promise(ae=>{
                        let K = new Date().getTime()
                          , J = function() {
                            let fe = new Date().getTime()
                              , Ee = 1e3 / (fe - K);
                            F > 60 ? ae(Math.round(te / F)) : (Ee < 80 && (F++,
                            te += Ee,
                            K = fe),
                            requestAnimationFrame(J))
                        };
                        requestAnimationFrame(J)
                    }
                    )
                }
            }
            le.onloadTime = 0,
            le.posted = !1
        },
        161: function(Se, de, Y) {
            "use strict";
            Y.d(de, {
                N: function() {
                    return le
                },
                a: function() {
                    return j
                }
            });
            const le = {
                del: {
                    PREPARE_DELETE: "del.prepareDelete",
                    DELETE: "del.delete",
                    ADDED: "del.added"
                },
                change: {
                    ZOOM: "change.zoom",
                    BGC: "change.bgc",
                    STAGE_MOVE: "change.stage.move"
                },
                communicate: {
                    angular: {
                        CHANGE_PANEL_STATUS: "communicate.angular.changePanelStatus",
                        SHOW_EQ_ATTRIBUTE: "communicate.angular.showEqAttribute",
                        RIGHT_MOUSE_DOWN: "communicate.angular.rightMouseDown",
                        EQ_DRAG_MOVE: "communicate.angular.eqDragMove",
                        SHOW_EQ_LIST: "communicate.angular.showEqList",
                        LOADED_RESTORE_DATA: "communicate.angular.loadedRestoreData",
                        CLOSE_SETTINGPOP: "communicate.angular.closeSettingPop",
                        SHOW_ALL_EQU: "communicate.angular.showAllEqu",
                        SAVE_DATA_COMPLETE: "communicate.angular.saveDataComplete",
                        USER_AGENT_MESSAGE: "communicate.angular.userAgentMessage",
                        HAPPEN_BOOM: "communicate.angular.happenBoom",
                        CHANGE_SELECTED: "communicate.angular.changeSelected",
                        OPEN_EQUAATION_PANEL: "communicate.angular.openEquationPanel",
                        CHANGE_EQ_INFO: "communicate.angular.changeEqInfo",
                        DOWNLOAD_EMPTY_IMG: "communicate.angular.downloadEmptyImg"
                    }
                },
                burn: {
                    MELTING: "burn.melting"
                },
                medicine: {
                    PUT_BLOCK_MEDICINE: "meidcine.putBlockMeidcine"
                },
                ADDED: "added",
                ADDED_TO_STAGE: "addedToStage",
                REMOVED: "removed",
                REMOEVD_FROM_STAGE: "removedFromStage",
                SELECTED: "selected",
                CANCEL_SELECTED: "cancelSelected",
                SHOW_WHOLE_BUTTON: "showWholeButton",
                HITTED_DRAGINLIMITAREA: "hittedDragInLImitArea",
                HITTED_TWOCONTAINER: "hittedTwoContainer",
                SELECT_ATOM: "selectAtom",
                TOGGLE_COORD: "toggleCoord"
            }
              , j = {
                ADD_EQUIPMENT: "addEquipment",
                CALCULATE_DRAG_RECT: "calculateDragRect",
                CHANGE_BACKGROUND: "changeBackGround",
                GET_BACKGROUND: "getBackgroundColor",
                CHANGE_SYSTEM_SETTING: "changeSystemSetting",
                DELETE_EQUIPMENT: "deleteEquipment",
                HAS_SELECT_EQ: "hasSelectEq",
                ZOOM_IN_OUT: "zoomInOut",
                GET_EQ_CLIENT_POS: "getEqClientPos",
                SET_STAGE_RENDER_ENABLED: "setStageRenderEnabled",
                SCREEN_SHOT: "screenShot",
                communicate: {
                    angular: {
                        CHANGE_EQUIPMENT_STATUS: "changeEquipmentStatus",
                        CHANGE_PANEL_STATUS: "changePanelStatus",
                        HAPPEN_BOOM: "happenBoom",
                        SHOW_EQ_ATTRIBUTE: "showEqAttribute",
                        COPY_EQ: "copyEq",
                        CREATE_EQUIPMENT: "createEquipment",
                        CREATE_EXPERIMENT: "createExperiment",
                        CREATE_TEST_PAPER: "createTestPaper"
                    }
                },
                document: {
                    CREATE_NEW_DOCUMENT: "createNewDocument",
                    DRAG_COVER: "dragCover",
                    DRAG_SHOW_BORDER: "dragShowBorder",
                    ENABLED_RIGHT_CLICK: "enabledRightClick"
                },
                gesture: {
                    CLONE_GESTURE: "cloneGesture",
                    PUT_FIRE_GESTURE: "putFireGesture",
                    ROCK_GESTURE: "rockGesture",
                    GET_CHILDREN_JSON: "getChildrenJson",
                    GLASS_BAR_MIXER: "glassBarMixer",
                    GLASS_SHEET_DRAG: "glassSheetDrag"
                },
                interactive: {
                    MOUSE_CURSOR_ENABLED: "mouseCursorEnabled",
                    KEYBOARD: "keyDoard",
                    LISTEN_SCREEN_SHOT: "listenScreenShot",
                    LIST_SAVED_DATA: "listSavedData",
                    MEDICINE_DRAG: "medicineDrag",
                    MOUSE_WHEEL: "mouseWheel",
                    OPEN_API: "openAPI",
                    PASTE_EQ: "pasteEq",
                    PRELOAD_TEXTURE: "preloadTexture",
                    REDO_UNDO: "redoUndo",
                    REQUEST_EXPERIENCE: "requestExperience",
                    RESTORE_DATA: "restoreData",
                    SAVE_DATA: "saveData",
                    SELECT_ALL: "selectAll",
                    SHAKE_STAGE: "shakeStage",
                    SHOW_EXPERIMENT_BY_ID: "showExperimentById",
                    SHOW_TEMP: "showTemp",
                    SHOW_VERSION_NUMBER: "showVersionNumber",
                    SET_MUTE_TYPE: "setMuteType"
                },
                undo: {
                    AlcoholBurner: {
                        LIGHT_ON_OFF: "lightOnOff",
                        DRAG_COVER_UNDO: "dragCoverUndo"
                    },
                    dragInlimitArea: {
                        DRAG_INLIMIT_AREA_UNDO: "dragInlimitAreaUndo",
                        EQ_STOP_DRAG_UNDO: "eqStopDragUndo"
                    },
                    GeiserBurette: {
                        GEISER_BURETTE_STOP_DRAG: "geiserBuretteStopDrag",
                        GENERAL_HIT_UNDO: "generalHitUndo"
                    },
                    limitDrag: {
                        LIMIT_DRAG_MOUSE_UP: "limitDragMouseUp",
                        LIMIT_DRAG_UNDO: "limitDragUndo",
                        NBDRAG_UNDO: "nbDragUndo",
                        SELECT_CHILDREN: "selectChildren",
                        SELECT_MOVE: "selectMove"
                    }
                },
                SHOW_ALL_EQ: "showAllEq",
                SCALE_AND_DRAGABLE: "scaleAndDragable",
                SET_ARROW_TYPE: "setArrowType",
                GET_ARROW_TYPE: "getArrowType",
                TOGGLE_ELEANI: "toggleEleAni",
                TOGGLE_EQUATIONS: "toggleEquations",
                SET_ELECTRONS: "setElectrons",
                GET_ELECTRONS: "getElectrons",
                SET_EUQ_STATUS: "setEquDefaultStatus",
                GET_EUQ_STATUS: "getEquDefaultStatus",
                SET_NUMBER_TYPE: "setNumberType",
                GET_NUMBER_TYPE: "getNumberType",
                SET_ROAM_ABLE: "setRoamAble",
                GET_ROAM_ABLE: "getRoamAble",
                GET_SCALE: "getScale",
                GET_VIEW_PORT: "getViewPort",
                GET_PRINT_DESIGN_RATIO: "getPrintDesignRatio",
                SELECT_EQ: "selectEq",
                STAGE_HAS_EQ: "stageHasEq"
            }
        },
        68807: function(Se, de, Y) {
            "use strict";
            Y.d(de, {
                a: function() {
                    return le
                },
                b: function() {
                    return te
                },
                c: function() {
                    return F
                },
                g: function() {
                    return j
                }
            });
            var le = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof Y.g != "undefined" ? Y.g : typeof self != "undefined" ? self : {};
            function j(K) {
                return K && K.__esModule && Object.prototype.hasOwnProperty.call(K, "default") ? K.default : K
            }
            function F(K, J, he) {
                return he = {
                    path: J,
                    exports: {},
                    require: function(fe, Ee) {
                        return ae()
                    }
                },
                K(he, he.exports),
                he.exports
            }
            function te(K) {
                if (K.__esModule)
                    return K;
                var J = Object.defineProperty({}, "__esModule", {
                    value: !0
                });
                return Object.keys(K).forEach(function(he) {
                    var fe = Object.getOwnPropertyDescriptor(K, he);
                    Object.defineProperty(J, he, fe.get ? fe : {
                        enumerable: !0,
                        get: function() {
                            return K[he]
                        }
                    })
                }),
                J
            }
            function ae() {
                throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")
            }
        },
        80285: function(Se, de, Y) {
            "use strict";
            Y.r(de),
            Y.d(de, {
                ele_canvas: function() {
                    return We
                }
            });
            var le = Y(48249)
              , j = Y(161)
              , F = Y(70145)
              , te = Y(28648)
              , ae = Y(21127)
              , K = Y(68807);
            function J(h) {
                return J = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(m) {
                    return typeof m
                }
                : function(m) {
                    return m && typeof Symbol == "function" && m.constructor === Symbol && m !== Symbol.prototype ? "symbol" : typeof m
                }
                ,
                J(h)
            }
            function he(h, m) {
                return Pe(h) || Ee(h, m) || ze(h, m) || fe()
            }
            function fe() {
                throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
            }
            function Ee(h, m) {
                var f = h == null ? null : typeof Symbol != "undefined" && h[Symbol.iterator] || h["@@iterator"];
                if (f != null) {
                    var p = [], c = !0, l = !1, i, e;
                    try {
                        for (f = f.call(h); !(c = (i = f.next()).done) && (p.push(i.value),
                        !(m && p.length === m)); c = !0)
                            ;
                    } catch (t) {
                        l = !0,
                        e = t
                    } finally {
                        try {
                            c || f.return == null || f.return()
                        } finally {
                            if (l)
                                throw e
                        }
                    }
                    return p
                }
            }
            function Pe(h) {
                if (Array.isArray(h))
                    return h
            }
            function re(h) {
                return tt(h) || et(h) || ze(h) || $e()
            }
            function $e() {
                throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
            }
            function ze(h, m) {
                if (h) {
                    if (typeof h == "string")
                        return Me(h, m);
                    var f = Object.prototype.toString.call(h).slice(8, -1);
                    return f === "Object" && h.constructor && (f = h.constructor.name),
                    f === "Map" || f === "Set" ? Array.from(h) : f === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(f) ? Me(h, m) : void 0
                }
            }
            function et(h) {
                if (typeof Symbol != "undefined" && h[Symbol.iterator] != null || h["@@iterator"] != null)
                    return Array.from(h)
            }
            function tt(h) {
                if (Array.isArray(h))
                    return Me(h)
            }
            function Me(h, m) {
                (m == null || m > h.length) && (m = h.length);
                for (var f = 0, p = Array(m); f < m; f++)
                    p[f] = h[f];
                return p
            }
            function k() {
                return k = typeof Reflect != "undefined" && Reflect.get ? Reflect.get.bind() : function(h, m, f) {
                    var p = it(h, m);
                    if (p) {
                        var c = Object.getOwnPropertyDescriptor(p, m);
                        return c.get ? c.get.call(3 > arguments.length ? h : f) : c.value
                    }
                }
                ,
                k.apply(this, arguments)
            }
            function it(h, m) {
                for (; !Object.prototype.hasOwnProperty.call(h, m) && (h = E(h),
                h !== null); )
                    ;
                return h
            }
            function H(h, m) {
                if (typeof m != "function" && m !== null)
                    throw new TypeError("Super expression must either be null or a function");
                h.prototype = Object.create(m && m.prototype, {
                    constructor: {
                        value: h,
                        writable: !0,
                        configurable: !0
                    }
                }),
                Object.defineProperty(h, "prototype", {
                    writable: !1
                }),
                m && we(h, m)
            }
            function we(h, m) {
                return we = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(f, p) {
                    return f.__proto__ = p,
                    f
                }
                ,
                we(h, m)
            }
            function M(h) {
                var m = nt();
                return function() {
                    var f = E(h), p;
                    if (m) {
                        var c = E(this).constructor;
                        p = Reflect.construct(f, arguments, c)
                    } else
                        p = f.apply(this, arguments);
                    return at(this, p)
                }
            }
            function at(h, m) {
                if (m && (J(m) === "object" || typeof m == "function"))
                    return m;
                if (m !== void 0)
                    throw new TypeError("Derived constructors may only return object or undefined");
                return oe(h)
            }
            function oe(h) {
                if (h === void 0)
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return h
            }
            function nt() {
                if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
                    return !1;
                if (typeof Proxy == "function")
                    return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})),
                    !0
                } catch (h) {
                    return !1
                }
            }
            function E(h) {
                return E = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(m) {
                    return m.__proto__ || Object.getPrototypeOf(m)
                }
                ,
                E(h)
            }
            function q(h, m) {
                if (!(h instanceof m))
                    throw new TypeError("Cannot call a class as a function")
            }
            function Ke(h, m) {
                for (var f = 0, p; f < m.length; f++)
                    p = m[f],
                    p.enumerable = p.enumerable || !1,
                    p.configurable = !0,
                    "value"in p && (p.writable = !0),
                    Object.defineProperty(h, p.key, p)
            }
            function N(h, m, f) {
                return m && Ke(h.prototype, m),
                f && Ke(h, f),
                Object.defineProperty(h, "prototype", {
                    writable: !1
                }),
                h
            }
            var v;
            (function(h) {
                var m = Math.sin
                  , f = Math.cos
                  , p = Math.sqrt;
                (function(c) {
                    var l = function() {
                        function i(e, t) {
                            e === void 0 && (e = 0),
                            t === void 0 && (t = 0),
                            this.x = e,
                            this.y = t
                        }
                        return i.prototype.addXY = function(e, t) {
                            var a = new i(this.x,this.y);
                            return a.x += e,
                            a.y += t,
                            a
                        }
                        ,
                        i.prototype.add = function(e) {
                            var t = new i(this.x,this.y);
                            return t.x += (isNaN(e.x),
                            e.x),
                            t.y += (isNaN(e.y),
                            e.y),
                            t
                        }
                        ,
                        i.prototype.sub = function(e) {
                            var t = new i(this.x,this.y);
                            return (!isNaN(e.x) || e.x) && (t.x -= (isNaN(e.x),
                            e.x),
                            t.y -= (isNaN(e.y),
                            e.y)),
                            t
                        }
                        ,
                        i.prototype.dot = function(e) {
                            return this.x * e.x + this.y * e.y
                        }
                        ,
                        i.prototype.cross = function(e) {
                            return this.x * e.y - e.x * this.y
                        }
                        ,
                        i.prototype.projectTo = function(e) {
                            var t = e.x
                              , a = e.y
                              , n = e.dot(e)
                              , o = t * a / n;
                            return new i(t * t / n * this.x + o * this.y,o * this.x + a * a / n * this.y)
                        }
                        ,
                        i.prototype.length = function() {
                            var e = this.x
                              , t = this.y;
                            return p(e * e + t * t)
                        }
                        ,
                        i.prototype.toArray = function() {
                            return [this.x, this.y]
                        }
                        ,
                        i.prototype.clone = function() {
                            return new i(this.x,this.y)
                        }
                        ,
                        i.prototype.multiplyScalar = function(e) {
                            return this.x *= e,
                            this.y *= e,
                            this
                        }
                        ,
                        i.prototype.setLength = function(e) {
                            this.multiplyScalar(e / this.length())
                        }
                        ,
                        i.prototype.lerp = function(e, t) {
                            var a = this.clone();
                            return a.x += (e.x - a.x) * t,
                            a.y += (e.y - a.y) * t,
                            a
                        }
                        ,
                        i.prototype.rotate = function(e) {
                            var t = f(e)
                              , a = m(e)
                              , n = this.x
                              , o = this.y;
                            this.x = n * t - o * a,
                            this.y = n * a + o * t
                        }
                        ,
                        i
                    }();
                    c.NBVector2 = l
                }
                )(h.utils || (h.utils = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.abs;
                (function(f) {
                    var p = function() {
                        function c() {}
                        return c.intersectLineLine = function(l, i, e, t) {
                            var a = (i.y - l.y) * (t.x - e.x) - (e.y - t.y) * (l.x - i.x);
                            if (a == 0)
                                return null;
                            var n = i.x - l.x
                              , o = i.y - l.y
                              , s = t.x - e.x
                              , r = t.y - e.y
                              , u = e.x - l.x
                              , d = e.y - l.y;
                            return {
                                x: (n * s * d + o * s * l.x - r * n * e.x) / a,
                                y: -(o * r * u + n * r * l.y - s * o * e.y) / a
                            }
                        }
                        ,
                        c.intersectLineSegment = function(l, i, e, t) {
                            var a = c.intersectLineLine(l, i, e, t);
                            return a && 0 >= (a.x - e.x) * (a.x - t.x) + (a.y - e.y) * (a.y - t.y) ? a : null
                        }
                        ,
                        c.intersectSegmentSegment = function(l, i, e, t) {
                            var a = c.intersectLineLine(l, i, e, t);
                            return a && 0 >= (a.x - l.x) * (a.x - i.x) + (a.y - l.y) * (a.y - i.y) && 0 >= (a.x - e.x) * (a.x - t.x) + (a.y - e.y) * (a.y - t.y) ? a : null
                        }
                        ,
                        c.lineIntersect = function(l, i, e, t) {
                            var a = {
                                x: 0,
                                y: 0
                            }, n = l.x, o = l.y, s = i.x, r = i.y, u = e.x, d = e.y, y = t.x, g = t.y, C = 1e-7, T;
                            T = s === n ? (r - o) / (s - n + C) : (r - o) / (s - n);
                            var A;
                            return A = y === u ? (g - d) / (y - u + C) : (g - d) / (y - u),
                            a.x = T === A ? (T * n - A * u + d - o) / (T - A + C) : (T * n - A * u + d - o) / (T - A),
                            a.y = T * a.x - T * n + o,
                            a
                        }
                        ,
                        c.isParallel = function(l, i, e, t) {
                            return 1e-10 > m((i.x - l.x) * (t.y - e.y) - (i.y - l.y) * (t.x - e.x))
                        }
                        ,
                        c.containsPoint = function(l, i, e) {
                            return !!c.isParallel(l, i, l, e) && 0 >= (l.x - i.x) * (l.x - e.x) + (l.y - i.y) * (l.y - e.y)
                        }
                        ,
                        c.distancePointToSegment = function(l, i, e) {
                            var t = c.pointToSegmentDisPoint(l, i, e);
                            return f.NBPointUtils.distance(t, l)
                        }
                        ,
                        c.pointToSegmentDisPoint = function(l, i, e) {
                            var t = (e.x - i.x) * (l.x - i.x) + (e.y - i.y) * (l.y - i.y);
                            if (0 >= t)
                                return i;
                            var a = (e.x - i.x) * (e.x - i.x) + (e.y - i.y) * (e.y - i.y);
                            if (t >= a)
                                return e;
                            var n = t / a;
                            return {
                                x: i.x + (e.x - i.x) * n,
                                y: i.y + (e.y - i.y) * n
                            }
                        }
                        ,
                        c.distancePointToLine = function(l, i, e) {
                            var t = c.getFootPoint(l, i, e);
                            return f.NBPointUtils.distance(t, l)
                        }
                        ,
                        c.getFootPoint = function(l, i, e) {
                            var t = (e.x - i.x) * (l.x - i.x) + (e.y - i.y) * (l.y - i.y)
                              , a = (e.x - i.x) * (e.x - i.x) + (e.y - i.y) * (e.y - i.y)
                              , n = t / a;
                            return {
                                x: i.x + (e.x - i.x) * n,
                                y: i.y + (e.y - i.y) * n
                            }
                        }
                        ,
                        c
                    }();
                    f.NBLineUtil = p
                }
                )(h.utils || (h.utils = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {}
                        return p.remove = function(c, l) {
                            var i = c.indexOf(l);
                            i !== -1 && c.splice(i, 1)
                        }
                        ,
                        p.find = function(c, l) {
                            for (var i = 0; i < c.length; i++)
                                if (l(c[i], i, c))
                                    return c[i]
                        }
                        ,
                        p.map = function(c, l) {
                            for (var i = [], e = 0; e < c.length; e++)
                                l(c[e], e, c) && i.push(l(c[e]));
                            return i
                        }
                        ,
                        p.forEach = function(c, l, i) {
                            if (i === void 0 && (i = !1),
                            i)
                                for (var e = c.length - 1; 0 <= e; e--)
                                    l(c[e], e, c);
                            else
                                for (var e = 0; e < c.length; e++)
                                    l(c[e], e, c)
                        }
                        ,
                        p.filter = function(c, l) {
                            for (var i = [], e = 0; e < c.length; e++)
                                l(c[e], e, c) && i.push(c[e]);
                            return i
                        }
                        ,
                        p
                    }();
                    m.NBArrayUtil = f
                }
                )(h.utils || (h.utils = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.abs;
                (function(f) {
                    var p = {
                        0: "\u2080",
                        1: "\u2081",
                        2: "\u2082",
                        3: "\u2083",
                        4: "\u2084",
                        5: "\u2085",
                        6: "\u2086",
                        7: "\u2087",
                        8: "\u2088",
                        9: "\u2089",
                        ".": "\xB7"
                    }
                      , c = {
                        0: "\xBA",
                        1: "\xB9",
                        2: "\xB2",
                        3: "\xB3",
                        4: "\u2074",
                        5: "\u2075",
                        6: "\u2076",
                        7: "\u2077",
                        8: "\u2078",
                        9: "\u2079",
                        "-": "\u207B",
                        "+": "\u207A"
                    }
                      , l = function() {
                        function i() {}
                        return i.convertFormula = function(e, t) {
                            t === void 0 && (t = 0);
                            for (var a = "", n = 0; n < e.length; n++) {
                                var o = e[n]
                                  , s = /\d/.test(o);
                                a += !s || s && 0 < n && e[n - 1] === "\xB7" || e[n - 1] === "." ? o : p[o]
                            }
                            var r = m(t)
                              , u = (1 >= r ? "" : "" + r) + (0 < t ? "+" : 0 > t ? "-" : "");
                            if (/(^[\d]*)([\+|-])$/.test(u))
                                for (var n = 0, o; n < u.length; n++)
                                    o = u[n],
                                    a += c[o];
                            return a
                        }
                        ,
                        i
                    }();
                    f.NBChemStrConvert = l
                }
                )(h.utils || (h.utils = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {}
                        return p.checkColorIsLight = function(c) {
                            return 192 <= .299 * (c >> 16) + .587 * (255 & c >> 8) + .114 * (255 & c)
                        }
                        ,
                        p
                    }();
                    m.NBColor = f
                }
                )(h.utils || (h.utils = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        return function() {
                            console.log("NBComplex")
                        }
                    }();
                    m.NBComplex = f
                }
                )(h.utils || (h.utils = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.PI;
                (function(f) {
                    var p = function() {
                        function c() {}
                        return c.getUID = function() {
                            return c.COUNTING++
                        }
                        ,
                        c.ang2rad = function(l) {
                            return l * m / 180
                        }
                        ,
                        c.rad2ang = function(l) {
                            return 180 * l / m
                        }
                        ,
                        c.limitAB = function(l, i, e) {
                            if (i > e) {
                                var t = i;
                                i = e,
                                e = t
                            }
                            return l < i ? i : l > e ? e : l
                        }
                        ,
                        c.getGCD = function(l, i) {
                            for (var e; i !== 0; )
                                e = l % i,
                                l = i,
                                i = e;
                            return l
                        }
                        ,
                        c.getLCM = function(l, i) {
                            var e = c.getGCD(l, i);
                            return l * i / e
                        }
                        ,
                        c.getGCDs = function(l) {
                            if (l.length === 0)
                                return 0;
                            if (l.length === 1)
                                return l[0];
                            if (l.length === 2)
                                return c.getGCD(l[0], l[1]);
                            for (var i = l.concat(), e = i.length, t = 0, a = 0; 1 < e; ) {
                                for (t = 0,
                                a = 0; a < e - 1; a += 2)
                                    i[t] = c.getGCD(i[a], i[a + 1]),
                                    t++;
                                a == e - 1 && (i[t] = i[a],
                                t++),
                                e = t
                            }
                            return i[0]
                        }
                        ,
                        c.getLCMs = function(l) {
                            if (l.length === 0)
                                return 0;
                            if (l.length === 1)
                                return l[0];
                            if (l.length === 2)
                                return c.getLCM(l[0], l[1]);
                            for (var i = l.concat(), e = i.length, t = 0, a = 0; 1 < e; ) {
                                for (t = 0,
                                a = 0; a < e - 1; a += 2)
                                    i[t] = c.getLCM(i[a], i[a + 1]),
                                    t++;
                                a == e - 1 && (i[t] = i[a],
                                t++),
                                e = t
                            }
                            return i[0]
                        }
                        ,
                        c.GetGroupGCD = function(l) {
                            var i = l.length;
                            if (!(1 >= i)) {
                                for (var e = l[0], t = 1; t < i && (e = c.getGCD(e, l[t]),
                                e !== 1); t++)
                                    ;
                                return 1 < e && l.forEach(function(a, n) {
                                    l[n] /= e
                                }),
                                l
                            }
                        }
                        ,
                        c.COUNTING = 0,
                        c
                    }();
                    f.NBMath = p
                }
                )(h.utils || (h.utils = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        return function() {
                            console.log("NBMatrix")
                        }
                    }();
                    m.NBMatrix = f
                }
                )(h.utils || (h.utils = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {}
                        return p.tablet = function() {
                            var c = navigator.userAgent.toLowerCase();
                            return /(?:ipad|playbook)/.test(c) || /android/i.test(c) && !/(?:mobile)/.test(c) || /(?:firefox)/.test(c) && /(?:tablet)/.test(c)
                        }
                        ,
                        p.mobile = function() {
                            return this.touchDevice() && !this.tablet()
                        }
                        ,
                        p.touchDevice = function() {
                            var c = navigator.userAgent.toLowerCase();
                            return /iphone os/i.test(c) || /midp/i.test(c) || /rv:1.2.3.4/i.test(c) || /ucweb/i.test(c) || /android/i.test(c) || /windows ce/i.test(c) || /windows mobile/i.test(c)
                        }
                        ,
                        p
                    }();
                    m.DeviceTools = f
                }
                )(h.utils || (h.utils = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.abs;
                (function(f) {
                    var p = function() {
                        function c() {}
                        return c.newtonIterator = function(l, i, e, t, a) {
                            a === void 0 && (a = 0);
                            for (var n = l, o, s; 0 < t; ) {
                                if (o = i(l),
                                m(o) <= a) {
                                    n = l;
                                    break
                                }
                                if (s = e(l),
                                n = l - o / s,
                                isNaN(n) || n === 1 / 0 || n === l)
                                    break;
                                l = n,
                                t--
                            }
                            return n
                        }
                        ,
                        c.convertNumber = function(l, i, e) {
                            e === void 0 && (e = !1);
                            var t = l.toString();
                            if (t.length < i)
                                return t;
                            var a = l.toExponential(i), n = a.match(/^([^e]+)e/), o;
                            if (n)
                                o = n[1];
                            else
                                return t;
                            var s = a.match(/[\+|-]\d+$/)[0];
                            if (+s == 0)
                                return o;
                            for (var r = "", u = 0; u < s.length; u++)
                                s[u] !== "+" && (r += s[u]);
                            return e ? o + "E" + r : o + "\xD710" + c.formatNum(r)
                        }
                        ,
                        c.formatNum = function(l) {
                            if (l === "1")
                                return "";
                            for (var i = {
                                0: "\u2070",
                                1: "\xB9",
                                2: "\xB2",
                                3: "\xB3",
                                4: "\u2074",
                                5: "\u2075",
                                6: "\u2076",
                                7: "\u2077",
                                8: "\u2078",
                                9: "\u2079",
                                "+": "\u207A",
                                "-": "\u207B"
                            }, e = "", t = 0; t < l.length; t++)
                                e += i[l[t]];
                            return e
                        }
                        ,
                        c
                    }();
                    f.NBNumerical = p
                }
                )(h.utils || (h.utils = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        return function() {
                            console.log("NBGeom")
                        }
                    }();
                    m.NBGeom = f
                }
                )(h.utils || (h.utils = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.log
                  , f = Math.pow
                  , p = Math.PI
                  , c = Math.abs;
                (function(l) {
                    var i = function() {
                        function e() {}
                        return e.K2T = function(t) {
                            return t - e.K0
                        }
                        ,
                        e.T2K = function(t) {
                            return t + e.K0
                        }
                        ,
                        e.px2m = function(t) {
                            return t / e.pxPerM
                        }
                        ,
                        e.m2px = function(t) {
                            return t * e.pxPerM
                        }
                        ,
                        e.area2m3 = function(t, a) {
                            return p * t * t / (4 * a) / (e.pxPerM * e.pxPerM * e.pxPerM)
                        }
                        ,
                        e.getNbyQ = function(t, a) {
                            return c(t / (a * e.F))
                        }
                        ,
                        e.getQbyN = function(t, a) {
                            return c(t * a * e.F)
                        }
                        ,
                        e.pH2c = function(t) {
                            return f(10, -t)
                        }
                        ,
                        e.c2pH = function(t) {
                            return -m(t) / m(10)
                        }
                        ,
                        e.F = 96485,
                        e.R = 8.314,
                        e.K0 = 273.15,
                        e.AMB = e.T2K(25),
                        e.ATM = 101325,
                        e.pxPerM = 2933.511349911335,
                        e.Kw = 1e-14,
                        e
                    }();
                    l.Constant = i
                }
                )(h.utils || (h.utils = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.max
                  , p = Math.atan2
                  , c = Math.pow
                  , l = Math.PI
                  , i = Math.abs
                  , e = Math.sqrt;
                (function(t) {
                    var a = function() {
                        function n() {}
                        return n.distance = function(o, s) {
                            var r = o.x - s.x
                              , u = o.y - s.y;
                            return e(r * r + u * u)
                        }
                        ,
                        n.sqrDistance = function(o, s) {
                            var r = o.x - s.x
                              , u = o.y - s.y;
                            return r * r + u * u
                        }
                        ,
                        n.length0 = function(o) {
                            return e(o.x * o.x + o.y * o.y)
                        }
                        ,
                        n.sqrLength = function(o) {
                            return o.x * o.x + o.y * o.y
                        }
                        ,
                        n.normalize = function(o) {
                            var s = 1 / n.length0(o);
                            o.x *= s,
                            o.y *= s
                        }
                        ,
                        n.cross = function(o, s) {
                            return o.x * s.y - s.x * o.y
                        }
                        ,
                        n.cross2 = function(o, s, r, u) {
                            return n.cross(n.sub(s, o), n.sub(u, r))
                        }
                        ,
                        n.add = function(o, s) {
                            return {
                                x: o.x + s.x,
                                y: o.y + s.y
                            }
                        }
                        ,
                        n.sub = function(o, s) {
                            return {
                                x: o.x - s.x,
                                y: o.y - s.y
                            }
                        }
                        ,
                        n.sq = function(o) {
                            return c(i(o), 2)
                        }
                        ,
                        n.getXianDianByDis = function(o, s, r, u) {
                            var d;
                            if (r.x === u.x && r.y === u.y)
                                return {
                                    x: r.x,
                                    y: r.y
                                };
                            if (u.x === r.x) {
                                if (s && r.y > u.y || !s && r.y < u.y)
                                    return {
                                        x: r.x,
                                        y: r.y - o
                                    };
                                if (!s && r.y > u.y || s && r.y < u.y)
                                    return {
                                        x: r.x,
                                        y: r.y + o
                                    }
                            }
                            d = (u.y - r.y) / (u.x - r.x);
                            var y = e(o * o / (1 + d * d)) + r.x
                              , g = -e(o * o / (1 + d * d)) + r.x
                              , C = d * (y - r.x) + r.y
                              , T = d * (g - r.x) + r.y
                              , A = this.sq(y - u.x) + this.sq(C - u.y)
                              , S = this.sq(g - u.x) + this.sq(T - u.y)
                              , B = {
                                x: 0,
                                y: 0
                            };
                            return s ? A > S ? (B.x = g,
                            B.y = T) : (B.x = y,
                            B.y = C) : A > S ? (B.x = y,
                            B.y = C) : (B.x = g,
                            B.y = T),
                            B
                        }
                        ,
                        n.getAngleP = function(o, s) {
                            s || (s = {
                                x: 0,
                                y: 0
                            });
                            var r = o.x - s.x
                              , u = o.y - s.y
                              , d = p(u, r) * (180 / l);
                            return d
                        }
                        ,
                        n.toHu = function(o) {
                            return o / 180 * l
                        }
                        ,
                        n.range = function(o, s, r) {
                            return o = f(s, o),
                            o = m(r, o),
                            o
                        }
                        ,
                        n
                    }();
                    t.NBPointUtils = a
                }
                )(h.utils || (h.utils = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.max
                  , p = Math.abs
                  , c = Math.sin
                  , l = Math.cos;
                (function(i) {
                    var e = h.utils.NBLineUtil
                      , t = function() {
                        function a() {}
                        return a.getArea = function(n) {
                            for (var o = 0, s = 0, r = n.length - 1; s < n.length; r = s++)
                                o += n[s].x * n[r].y - n[r].x * n[s].y;
                            return 0 > o && (o = -o),
                            o / 2
                        }
                        ,
                        a.lineIntersect = function(n, o, s) {
                            for (var r = [], u = 0, d; u < n.length; u++) {
                                d = u + 1,
                                d === n.length && (d = 0);
                                var y = e.intersectLineSegment(o, s, n[u], n[d]);
                                y && r.push({
                                    p: y,
                                    index: u
                                })
                            }
                            return r
                        }
                        ,
                        a.containsPoint = function(n, o) {
                            for (var s = !1, r = 0, u = n.length - 1; r < n.length; u = r++) {
                                var d = n[r].x
                                  , y = n[r].y
                                  , g = n[u].x
                                  , C = n[u].y
                                  , T = y > o.y != C > o.y && o.x < (g - d) * (o.y - y) / (C - y) + d;
                                T && (s = !s)
                            }
                            return s
                        }
                        ,
                        a.getAABB = function(n) {
                            for (var o = n[0].x, s = n[0].y, r = n[0].x, u = n[0].y, d = 1, y; d < n.length; d++)
                                y = n[d],
                                o = m(o, y.x),
                                s = m(s, y.y),
                                r = f(r, y.x),
                                u = f(u, y.y);
                            return {
                                x: o,
                                y: s,
                                width: r - o,
                                height: u - s
                            }
                        }
                        ,
                        a.getMinDistance = function(n, o) {
                            return a.getMinDistanceFunc(n, o, !1)
                        }
                        ,
                        a.getMinPerpendicularDistance = function(n, o) {
                            return a.getMinDistanceFunc(n, o, !0)
                        }
                        ,
                        a.getDivideSpace = function(n, o, s) {
                            for (var r = a.lineIntersect(n, o, s), u = [], d = [], y = 0, g = 0; g < n.length; g++) {
                                var C = n[g]
                                  , T = (C.x - o.x) * (C.y - s.y) - (C.x - s.x) * (C.y - o.y);
                                T === 0 ? (u.push(C),
                                d.push(C),
                                y++) : (0 < T ? u.push(C) : d.push(C),
                                r[y] && g === r[y].index && (u.push(r[y].p),
                                d.push(r[y].p))),
                                r[y] && g === r[y].index && y++
                            }
                            if (r.length === 2) {
                                var A = u.indexOf(r[0].p);
                                A !== 0 && (u = u.splice(A).concat(u)),
                                u[1] === r[1].p && u.push(u.shift())
                            }
                            return {
                                result: r,
                                up: d,
                                down: u
                            }
                        }
                        ,
                        a.disP2S = function(n, o) {
                            return n.x * o.y - n.y * o.x
                        }
                        ,
                        a.getMinMax = function(n, o) {
                            for (var s = 1 / 0, r = -Infinity, u = 0, d, y; u < n.length; u++)
                                d = n[u],
                                y = a.disP2S(o, d),
                                y < s && (s = y),
                                y > r && (r = y);
                            return [s, r]
                        }
                        ,
                        a.getDivideByArea = function(n, o, s, r) {
                            if (o > s)
                                return null;
                            for (var u = a.getMinMax(n, r), d = {
                                x: -r.y,
                                y: r.x
                            }, y = u[0], g = u[1], C = 0, T = s, A = {
                                x: 0,
                                y: 0
                            }, S = {
                                x: 0,
                                y: 0
                            }, B; ; ) {
                                var b = (o - C) / (T - C)
                                  , P = (1 - b) * (g - y) + y;
                                A.x = P * d.x,
                                A.y = P * d.y,
                                S.x = A.x + r.x,
                                S.y = A.y + r.y,
                                B = a.getDivideSpace(n, A, S);
                                var I = a.getArea(B.down);
                                if (1 > p(I - o) || 1 > T - C || .01 > g - y || .01 > b || b > 1 - .01)
                                    break;
                                I > o ? (y = P,
                                T = I) : (g = P,
                                C = I)
                            }
                            return B
                        }
                        ,
                        a.rotatePoly = function(n, o) {
                            var s = [];
                            return n.forEach(function(r) {
                                var u = l(o)
                                  , d = c(o);
                                s.push({
                                    x: r.x * u - r.y * d,
                                    y: r.x * d + r.y * u
                                })
                            }),
                            s
                        }
                        ,
                        a.getMinDistanceFunc = function(n, o, s) {
                            for (var r = {
                                d: 1 / 0,
                                p: null,
                                index: 0
                            }, u = s ? i.NBLineUtil.getFootPoint : i.NBLineUtil.pointToSegmentDisPoint, d = 0, y; d < n.length; d++) {
                                y = d + 1,
                                y === n.length && (y = 0);
                                var g = u(o, n[d], n[y])
                                  , C = i.NBPointUtils.sqrDistance(o, g);
                                C < r.d && (r.d = C,
                                r.p = g,
                                r.index = d)
                            }
                            return r
                        }
                        ,
                        a
                    }();
                    i.NBPolygonUtil = t
                }
                )(h.utils || (h.utils = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.max
                  , f = Math.abs;
                (function(p) {
                    var c = function() {
                        function l(i, e) {
                            this.isError = !1,
                            this.m = [],
                            this.det = 0,
                            this.rows = 1,
                            this.cols = 1,
                            this.numElements = 1,
                            this.rows = i,
                            this.cols = e,
                            this.numElements = i * e;
                            for (var t = 0; t < this.numElements; t++)
                                this.m[t] = 0
                        }
                        return l.traceMatrix = function(i) {
                            var e = [], t, a;
                            for (t = 0; t < i.rows; t++) {
                                var n = [];
                                for (a = 0; a < i.cols; a++)
                                    n[a] = i.getElement(t, a);
                                e[t] = n.join("	")
                            }
                            console.log(e.join(`
`))
                        }
                        ,
                        l.GaussSolution = function(i, e) {
                            var t = i.rows, a = new l(t,1), n;
                            if (i.rows !== i.cols || i.rows !== e.rows || 1 < e.cols || e.cols === 0)
                                return a.resize(0, 0),
                                a.isError = !0,
                                a;
                            var o = i.merge(e)
                              , s = o.cols;
                            if (o.gaussElimination(),
                            o.isError)
                                return a.resize(0, 0),
                                a.isError = !0,
                                a;
                            var r, u;
                            for (r = t - 1; 0 <= r; r--) {
                                for (n = 0,
                                u = r + 1; u < t; u++)
                                    n += o.m[u + r * s] * a.m[u];
                                a.m[r] = (o.m[t + r * s] - n) / o.m[r * (1 + s)]
                            }
                            return a
                        }
                        ,
                        l.LUPDecomposition = function(i, e) {
                            if (i.rows === i.cols) {
                                var t = i.rows;
                                e.resize(t, 1);
                                var a, n, o;
                                for (a = 0; a < t; a++)
                                    e.m[a] = a;
                                for (o = 0; o < t; o++) {
                                    var s = 0
                                      , r = void 0;
                                    for (a = o; a < t; a++)
                                        f(i.m[o + a * t]) > s && (s = f(i.m[o + a * t]),
                                        r = a);
                                    if (s === 0)
                                        return void (i.isError = !0);
                                    for (e.swapRows(o, r),
                                    i.swapRows(o, r),
                                    a = o + 1; a < t; a++)
                                        for (i.m[o + a * t] /= i.m[o * (1 + t)],
                                        n = o + 1; n < t; n++)
                                            i.m[n + a * t] -= i.m[o + a * t] * i.m[n + o * t]
                                }
                            }
                        }
                        ,
                        l.LUPSolution = function(i, e, t) {
                            var a = i.rows, n = new l(a,1), o, s, r;
                            if (i.isError || a !== i.cols || a !== e.rows || e.cols !== 1 || a !== t.rows || t.cols !== 1)
                                return n.resize(0, 0),
                                n.isError = !0,
                                n;
                            for (s = 0; s < a; s++) {
                                for (o = 0,
                                r = 0; r < s; r++)
                                    o += i.m[r + s * a] * n.m[r];
                                n.m[s] = t.m[e.m[s]] - o
                            }
                            for (s = a - 1; 0 <= s; s--) {
                                for (o = 0,
                                r = s + 1; r < a; r++)
                                    o += i.m[r + s * a] * n.m[r];
                                n.m[s] = (n.m[s] - o) / i.m[s * (1 + a)]
                            }
                            return n
                        }
                        ,
                        l.CramerSolution = function(i, e) {
                            var t = i.rows, a = new l(t,1), n;
                            if (i.rows !== i.cols || i.rows !== e.rows || e.cols !== 1)
                                return a.resize(0, 0),
                                a.isError = !0,
                                a;
                            var o = i.gaussDeterminant();
                            if (o === 0)
                                return a.resize(0, 0),
                                a.isError = !0,
                                a;
                            var s;
                            for (s = 0; s < t; s++)
                                n = i.clone(),
                                n.insert(e, 0, s),
                                a.m[s] = n.gaussDeterminant() / o;
                            return a
                        }
                        ,
                        l.prototype.clone = function() {
                            for (var i = new l(this.rows,this.cols), e = i.m, t = 0; t < this.numElements; t++)
                                e[t] = this.m[t];
                            return i
                        }
                        ,
                        l.prototype.identity = function() {
                            var i, e;
                            for (i = 0; i < this.rows; i++)
                                for (e = 0; e < this.cols; e++)
                                    this.m[e + i * this.cols] = i === e ? 1 : 0
                        }
                        ,
                        l.prototype.multiply = function(i) {
                            var e = i.cols, t = new l(this.rows,e), a, n, o;
                            for (a = 0; a < this.rows; a++)
                                for (n = 0; n < e; n++)
                                    for (o = 0; o < this.cols; o++)
                                        t.m[n + a * e] += this.m[o + a * this.cols] * i.m[n + o * e];
                            return t
                        }
                        ,
                        l.prototype.scalar = function(i) {
                            for (var e = 0; e < this.numElements; e++)
                                this.m[e] *= i;
                            return this
                        }
                        ,
                        l.prototype.add = function(i) {
                            for (var e = 0; e < this.numElements; e++)
                                this.m[e] += i.m[e];
                            return this
                        }
                        ,
                        l.prototype.sub = function(i) {
                            for (var e = 0; e < this.numElements; e++)
                                this.m[e] -= i.m[e];
                            return this
                        }
                        ,
                        l.prototype.transpose = function() {
                            var i = new l(this.cols,this.rows), e, t;
                            for (e = 0; e < this.rows; e++)
                                for (t = 0; t < this.cols; t++)
                                    i.m[e + t * this.rows] = this.m[t + e * this.cols];
                            return i
                        }
                        ,
                        l.prototype.gaussElimination = function() {
                            this.isError = !1;
                            var i, e, t, a, n;
                            for (this.det = 1,
                            t = 0; t < this.rows - 1; t++) {
                                for (i = t,
                                a = t + 1; a < this.rows; a++)
                                    f(this.m[t + a * this.cols]) > f(this.m[t + i * this.cols]) && (i = a);
                                for (this.swapRows(t, i),
                                a = t + 1; a < this.rows; a++) {
                                    if (this.m[t * (1 + this.cols)] === 0)
                                        return void (this.isError = !0);
                                    for (e = this.m[t + a * this.cols] / this.m[t * (1 + this.cols)],
                                    n = t; n < this.cols; n++)
                                        this.m[n + a * this.cols] -= this.m[n + t * this.cols] * e
                                }
                            }
                            if (this.m[(this.rows - 1) * (1 + this.cols)] === 0)
                                return void (this.isError = !0)
                        }
                        ,
                        l.prototype.inverse = function() {
                            this.isError = !1;
                            var i = this.rows, e = new l(i,i), t = this.merge(e), a = t.cols, n, o;
                            for (o = 0; o < i; o++)
                                t.m[o + i + o * a] = 1;
                            if (t.gaussElimination(),
                            t.isError)
                                return e.resize(0, 0),
                                e.isError = !0,
                                e;
                            var s, r;
                            for (s = 0; s < i; s++)
                                for (o = i - 1; 0 <= o; o--) {
                                    for (n = 0,
                                    r = o + 1; r < i; r++)
                                        n += t.m[r + o * a] * e.m[s + r * i];
                                    e.m[s + o * i] = (t.m[s + i + o * a] - n) / t.m[o * (1 + a)]
                                }
                            return e
                        }
                        ,
                        l.prototype.swapRows = function(i, e) {
                            if (!(i > this.rows || e > this.rows) && i !== e) {
                                this.det = -this.det;
                                var t = void 0
                                  , a = void 0;
                                for (a = 0; a < this.cols; a++)
                                    t = this.m[a + i * this.cols],
                                    this.m[a + i * this.cols] = this.m[a + e * this.cols],
                                    this.m[a + e * this.cols] = t
                            }
                        }
                        ,
                        l.prototype.gaussDeterminant = function() {
                            this.isError = !1;
                            var i = this.rows
                              , e = this.merge(new l(i,1));
                            if (e.gaussElimination(),
                            e.isError)
                                return this.isError = !0,
                                0;
                            this.det = e.det;
                            var t = e.cols, a;
                            for (a = 0; a < i; a++)
                                this.det *= e.m[a * (1 + t)];
                            return this.det
                        }
                        ,
                        l.prototype.recursiveDeterminant = function() {
                            this.isError = !1;
                            var i = this.rows, e = 0, t, a, n, o, s, r;
                            if (1 < i)
                                for (r = 0; r < i; r++)
                                    s = this.m[r],
                                    s !== 0 && (o = r % 2 == 0 ? 1 : -1,
                                    r === 0 ? n = this.fragment(1, 1, i - 1, this.cols - 1) : r === i - 1 ? n = this.fragment(1, 0, i - 1, this.cols - 2) : (t = this.fragment(1, 0, i - 1, r - 1),
                                    a = this.fragment(1, r + 1, i - 1, this.cols - 1),
                                    n = t.merge(a)),
                                    e += o * s * n.recursiveDeterminant());
                            else
                                e = this.m[0];
                            return e
                        }
                        ,
                        l.prototype.insert = function(i, e, t) {
                            var a = this.rows
                              , n = this.cols;
                            if (!(e >= a || t >= n)) {
                                var o = e + i.rows
                                  , s = t + i.cols;
                                o = o > a ? o : a,
                                s = s > n ? s : n,
                                this.resize(o, s),
                                o = e + i.rows,
                                s = t + i.cols;
                                var r = o <= this.rows ? o : this.rows, u = s <= this.cols ? s : this.cols, d, y;
                                for (d = e; d < r; d++)
                                    for (y = t; y < u; y++)
                                        this.m[y + d * this.cols] = i.m[y - t + (d - e) * i.cols]
                            }
                        }
                        ,
                        l.prototype.merge = function(i) {
                            var e = i.rows, t = i.cols, a = this.rows, n = this.cols, o = n + t, s = new l(m(a, e),o), r, u;
                            for (r = 0; r < a; r++)
                                for (u = 0; u < n; u++)
                                    s.m[u + r * o] = this.m[u + r * n];
                            for (r = 0; r < e; r++)
                                for (u = 0; u < t; u++)
                                    s.m[u + n + r * o] = i.m[u + r * t];
                            return s
                        }
                        ,
                        l.prototype.resize = function(i, e) {
                            var t = this.rows, a = this.cols, n = new l(i,e), o, s;
                            for (o = 0; o < i; o++)
                                if (o < t)
                                    for (s = 0; s < e; s++)
                                        s < a && (n.m[s + o * e] = this.m[s + o * a]);
                            this.rows = i,
                            this.cols = e,
                            this.numElements = n.numElements,
                            this.m = n.m
                        }
                        ,
                        l.prototype.fragment = function(i, e, t, a) {
                            i > this.rows && (i = this.rows),
                            e > this.cols && (e = this.cols),
                            t > this.rows && (t = this.rows),
                            a > this.cols && (a = this.cols);
                            var n;
                            i > t && (n = i,
                            i = t,
                            t = n),
                            e > a && (n = e,
                            e = a,
                            a = n);
                            var o = a - e + 1, s = new l(t - i + 1,o), r, u;
                            for (r = i; r <= t; r++)
                                for (u = e; u <= a; u++)
                                    s.m[u - e + (r - i) * o] = this.m[u + r * this.cols];
                            return s
                        }
                        ,
                        l.prototype.setElement = function(i, e, t) {
                            i >= this.rows || e >= this.cols || (this.m[e + i * this.cols] = t)
                        }
                        ,
                        l.prototype.getElement = function(i, e) {
                            return i >= this.rows || e >= this.cols ? NaN : this.m[e + i * this.cols]
                        }
                        ,
                        l
                    }();
                    p.NBMatrixMath = c
                }
                )(h.utils || (h.utils = {}))
            }
            )(v || (v = {}));
            var U = function() {
                var h = function(m, f) {
                    return h = Object.setPrototypeOf || {
                        __proto__: []
                    }instanceof Array && function(p, c) {
                        p.__proto__ = c
                    }
                    || function(p, c) {
                        for (var l in c)
                            c.hasOwnProperty(l) && (p[l] = c[l])
                    }
                    ,
                    h(m, f)
                };
                return function(m, f) {
                    function p() {
                        this.constructor = m
                    }
                    h(m, f),
                    m.prototype = f === null ? Object.create(f) : (p.prototype = f.prototype,
                    new p)
                }
            }(), v;
            (function(h) {
                (function(m) {
                    var f = PIXI.Graphics
                      , p = function(c) {
                        function l(i, e, t) {
                            var a = c.call(this) || this;
                            return i && i.addChild(a),
                            a.x = e || 0,
                            a.y = t || 0,
                            a.interactive = !0,
                            l.DEBUG || (a.alpha = 0),
                            a
                        }
                        return U(l, c),
                        l.getBox = function(i, e, t, a, n) {
                            var o = new l(t,a,n);
                            return o.beginFill(16711680, .5),
                            o.drawRect(-i / 2, -e / 2, i, e),
                            o.endFill(),
                            o
                        }
                        ,
                        l.getCircle = function(i, e, t, a) {
                            var n = new l(e,t,a);
                            return n.beginFill(16711680, .5),
                            n.drawCircle(0, 0, i),
                            n.endFill(),
                            n
                        }
                        ,
                        l.getRect = function(i, e, t, a, n, o, s) {
                            var r = new l(n,o,s);
                            return r.beginFill(16711680, .5),
                            r.drawRect(i, e, t, a),
                            r.endFill(),
                            r
                        }
                        ,
                        l.getPolygon = function(i, e, t, a) {
                            var n = new l(e,t,a);
                            n.beginFill(16711680, .5);
                            for (var o = 0; o < i.length; o++)
                                o == 0 ? n.moveTo(i[o].x, i[o].y) : n.lineTo(i[o].x, i[o].y);
                            return n.endFill(),
                            n
                        }
                        ,
                        l.DEBUG = !1,
                        l
                    }(f);
                    m.NBHitAreaShape = p
                }
                )(h.pixiExtras || (h.pixiExtras = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.floor;
                (function(f) {
                    var p = PIXI.Container
                      , c = PIXI.ticker.Ticker
                      , l = function(t) {
                        function a() {
                            var n = t.call(this) || this;
                            return n.animationSpeed = 1,
                            n.ticker = new c,
                            n.loop = !0,
                            n.playing = !1,
                            n.reverse = !1,
                            n.frames = [],
                            n._currentFrame = 0,
                            n.ticker.add(n.update, n),
                            n.ticker.start(),
                            n
                        }
                        return U(a, t),
                        a.prototype.destroy = function(n) {
                            this.ticker.remove(this.update, this),
                            this.ticker.stop(),
                            this.ticker = null,
                            this.frames = null,
                            t.prototype.destroy.call(this, n)
                        }
                        ,
                        Object.defineProperty(a.prototype, "totalFrames", {
                            get: function() {
                                return this.frames.length
                            },
                            enumerable: !0,
                            configurable: !0
                        }),
                        Object.defineProperty(a.prototype, "currentFrame", {
                            get: function() {
                                return this.toInt(this._currentFrame)
                            },
                            set: function(n) {
                                var o = this._currentFrame;
                                this._currentFrame = n,
                                0 > this._currentFrame ? this._currentFrame += this.totalFrames : this._currentFrame >= this.totalFrames && (this._currentFrame -= this.totalFrames),
                                this.updateFrame(o)
                            },
                            enumerable: !0,
                            configurable: !0
                        }),
                        a.prototype.update = function() {
                            if (this.playing) {
                                var n = this.currentFrame;
                                this.currentFrame = this._currentFrame + this.animationSpeed * (this.reverse ? -1 : 1),
                                n !== this.currentFrame && this.checkComplete() && (!this.loop && this.stop(),
                                this.emit("complete"))
                            }
                        }
                        ,
                        a.prototype.insertDisplayObjectToFrame = function(n, o, s) {
                            var r;
                            this.frames[o] ? r = this.frames[o] : (r = new i,
                            this.frames[o] = r),
                            r.add(new e(n,s))
                        }
                        ,
                        a.prototype.gotoAndStop = function(n) {
                            this.currentFrame = n,
                            this.stop()
                        }
                        ,
                        a.prototype.gotoAndPlay = function(n) {
                            this.currentFrame = n,
                            this.play()
                        }
                        ,
                        a.prototype.play = function() {
                            this.playing = !0
                        }
                        ,
                        a.prototype.stop = function() {
                            this.playing = !1
                        }
                        ,
                        a.prototype.clone = function() {
                            var n = new a;
                            return this.frames.forEach(function(o) {
                                n.frames.push(o.clone())
                            }),
                            n.reverse = this.reverse,
                            n.playing = this.playing,
                            n.currentFrame = this._currentFrame,
                            n.loop = this.loop,
                            n
                        }
                        ,
                        a.prototype.checkComplete = function() {
                            if (this.reverse) {
                                if (this.currentFrame === 0)
                                    return !0
                            } else if (this.currentFrame === this.totalFrames)
                                return !0;
                            return !1
                        }
                        ,
                        a.prototype.updateFrame = function(n) {
                            var o = this
                              , s = this.frames[this.toInt(n)];
                            s && s.forEach(function(u) {
                                o.removeChild(u.dis)
                            });
                            var r = this.frames[this.currentFrame];
                            r && r.forEach(function(u) {
                                o.addChild(u.dis),
                                u.update()
                            })
                        }
                        ,
                        a.prototype.toInt = function(n) {
                            return m(n + 1e-6)
                        }
                        ,
                        a
                    }(p);
                    f.NBMovieClip = l;
                    var i = function() {
                        function t() {
                            this.children = []
                        }
                        return t.prototype.destroy = function() {
                            this.children = null
                        }
                        ,
                        t.prototype.add = function(a) {
                            this.has(a) || this.children.push(a)
                        }
                        ,
                        t.prototype.remove = function(a) {
                            var n = this.children.indexOf(a);
                            n !== -1 && this.children.splice(n, 1)
                        }
                        ,
                        t.prototype.has = function(a) {
                            return this.children.indexOf(a) !== -1
                        }
                        ,
                        t.prototype.forEach = function(a) {
                            for (var n = 0; n < this.children.length; n++)
                                a(this.children[n])
                        }
                        ,
                        t.prototype.clone = function() {
                            var a = new t;
                            return this.forEach(function(n) {
                                a.add(n.clone())
                            }),
                            a
                        }
                        ,
                        t
                    }();
                    f.FrameItem = i;
                    var e = function() {
                        function t(a, n) {
                            this.dis = a,
                            this.tweenTransform = n
                        }
                        return t.prototype.destroy = function() {
                            this.dis = null,
                            this.tweenTransform = null
                        }
                        ,
                        t.prototype.update = function() {
                            if (this.tweenTransform) {
                                var a = this.tweenTransform;
                                this.dis.setTransform(a.x, a.y, a.sx, a.sy, a.r)
                            }
                        }
                        ,
                        t.prototype.clone = function() {
                            return this
                        }
                        ,
                        t
                    }();
                    f.DisItem = e
                }
                )(h.pixiExtras || (h.pixiExtras = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = PIXI.Container
                      , p = PIXI.Text
                      , c = function(i) {
                        function e(t, a) {
                            var n = i.call(this) || this;
                            return n.className = "NBSimpleButton",
                            n.label = "",
                            n.clickHandler = function(o) {
                                n.tab && n.tab(o),
                                n.setType(l.UP)
                            }
                            ,
                            n.label = t.text || "",
                            n.tab = t.tab,
                            n.disabledSkin = t.disabledSkin,
                            n.downSkin = t.downSkin,
                            n.upSkin = t.upSkin,
                            a ? (n.textEq = a,
                            n.tf = n.textEq.getText(n.label, {
                                font: t.fontSize + "px \u5FAE\u8F6F\u96C5\u9ED1",
                                fill: t.fontColor,
                                align: "Center"
                            })) : n.tf = new p(n.label,{
                                font: t.fontSize + "px \u5FAE\u8F6F\u96C5\u9ED1",
                                fill: t.fontColor,
                                align: "Center"
                            }),
                            n.tf.x = n.upSkin.width / 2,
                            n.addChild(n.disabledSkin),
                            n.addChild(n.upSkin),
                            n.addChild(n.downSkin),
                            n.addChild(n.tf),
                            n.setType(l.DEFAULT),
                            n.addEventListener("pointertap", n.clickHandler),
                            n
                        }
                        return U(e, i),
                        e.prototype.removed = function() {
                            this.removeEventListener("pointertap", this.clickHandler),
                            this.textEq && this.textEq.removeText(this.tf),
                            this.tf = null,
                            this.disabledSkin = null,
                            this.downSkin = null,
                            this.upSkin = null,
                            this.tab = null
                        }
                        ,
                        e.prototype.setDisabled = function(t) {
                            t ? this.setType(l.DISABLED) : this.setType(l.DEFAULT)
                        }
                        ,
                        e.prototype.setType = function(t) {
                            switch (this.disabledSkin.visible = !1,
                            this.upSkin.visible = !1,
                            this.downSkin.visible = !1,
                            this.interactive = !0,
                            t) {
                            case l.DOWN:
                                this.downSkin.visible = !0;
                                break;
                            case l.DISABLED:
                                this.disabledSkin.visible = !0,
                                this.interactive = !1;
                                break;
                            case l.UP:
                            case l.DEFAULT:
                            default:
                                this.upSkin.visible = !0
                            }
                        }
                        ,
                        e
                    }(f);
                    m.NBSimpleButton = c;
                    var l;
                    (function(i) {
                        i[i.UP = 0] = "UP",
                        i[i.DOWN = 1] = "DOWN",
                        i[i.DISABLED = 2] = "DISABLED",
                        i[i.DEFAULT = 3] = "DEFAULT"
                    }
                    )(l || (l = {}))
                }
                )(h.pixiExtras || (h.pixiExtras = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min;
                (function(f) {
                    var p = PIXI.Container
                      , c = PIXI.Text
                      , l = function(i) {
                        function e(t, a) {
                            var n = i.call(this) || this;
                            return n.className = "NBSimpleLabel",
                            n._labelText = "",
                            n.labelBorderColor = 2328041,
                            a && (n.textEq = a),
                            n.labelWidth = t.width,
                            n.labelHeight = t.height,
                            n.initBg(),
                            n.tf0 = n.getText(t),
                            n.addChild(n.tf0),
                            n.tf0.y = -n.labelHeight / 4,
                            n.tf1 = n.getText(t),
                            n.addChild(n.tf1),
                            n.tf1.y = n.labelHeight / 4,
                            n.labelText = t.text || "",
                            n.allowGetBounds = !1,
                            n
                        }
                        return U(e, i),
                        e.prototype.removed = function() {
                            this.textEq && (this.textEq.removeText(this.tf0),
                            this.textEq.removeText(this.tf1)),
                            this.tf0 = null,
                            this.tf1 = null
                        }
                        ,
                        Object.defineProperty(e.prototype, "labelText", {
                            get: function() {
                                return this._labelText
                            },
                            set: function(t) {
                                this._labelText = t,
                                this.updateLabelText()
                            },
                            enumerable: !0,
                            configurable: !0
                        }),
                        e.prototype.updateLabelText = function() {
                            var t = this._labelText.split(`
`);
                            this.tf0.text = t[0] || "",
                            this.updateTfScale(this.tf0);
                            var a = t[1];
                            a ? (this.tf1.visible = !0,
                            this.tf0.y = -this.labelHeight / 4,
                            this.tf1.text = a || "",
                            this.updateTfScale(this.tf1)) : (this.tf1.visible = !1,
                            this.tf0.y = 0)
                        }
                        ,
                        e.prototype.updateTfScale = function(t) {
                            t.scale.x = 1,
                            t.width > this.labelWidth - 5 && (t.scale.x = (this.labelWidth - 5) / t.width)
                        }
                        ,
                        e.prototype.initBg = function() {
                            var t = m(10, .15 * this.labelWidth);
                            this.labelBg = new PIXI.Graphics,
                            this.labelBg.x = -this.labelWidth / 2,
                            this.labelBg.y = -this.labelHeight / 2;
                            var a = this.labelBg;
                            this.addChild(a),
                            a.lineStyle(4, this.labelBorderColor, 1),
                            a.beginFill(16777215, .5),
                            a.moveTo(t, 0),
                            a.lineTo(this.labelWidth - t, 0),
                            a.lineTo(this.labelWidth, t),
                            a.lineTo(this.labelWidth, this.labelHeight - t),
                            a.lineTo(this.labelWidth - t, this.labelHeight),
                            a.lineTo(t, this.labelHeight),
                            a.lineTo(0, this.labelHeight - t),
                            a.lineTo(0, t),
                            a.lineTo(t, 0),
                            a.endFill()
                        }
                        ,
                        e.prototype.getText = function(t) {
                            var a;
                            return a = this.textEq ? this.textEq.getText("", {
                                font: (t.fontSize || 20) + "px \u5FAE\u8F6F\u96C5\u9ED1",
                                fill: t.fontColor || 0,
                                align: "center"
                            }) : new c("",{
                                font: (t.fontSize || 20) + "px \u5FAE\u8F6F\u96C5\u9ED1",
                                fill: t.fontColor || 0,
                                align: "center"
                            }),
                            a.anchor.set(.5, .5),
                            a
                        }
                        ,
                        e
                    }(p);
                    f.NBSimpleLabel = l
                }
                )(h.pixiExtras || (h.pixiExtras = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function c() {}
                        return c.draw = function(l, i) {
                            for (var e = i.length - 1; 0 <= e; )
                                switch (i[e--]) {
                                case p.MOVE_TO:
                                    l.moveTo(i[e--], i[e--]);
                                    break;
                                case p.LINE_TO:
                                    l.lineTo(i[e--], i[e--]);
                                    break;
                                case p.CURVO_TO:
                                    l.moveTo(i[e--], i[e--]),
                                    l.quadraticCurveTo(i[e--], i[e--], i[e--], i[e--]);
                                    break;
                                case p.LINE_STYLE:
                                    l.lineStyle(i[e--], i[e--], i[e--]);
                                    break;
                                case p.BEGIN_FILL:
                                    l.beginFill(i[e--], i[e--]);
                                    break;
                                case p.END_FILL:
                                    l.endFill();
                                    break;
                                default:
                                    console.log("\u672A\u77E5\u7684\u547D\u4EE4\uFF0C\u53EF\u80FD\u51FA\u9519\u4E86")
                                }
                        }
                        ,
                        c
                    }();
                    m.GraphicsUtil = f;
                    var p;
                    (function(c) {
                        c[c.MOVE_TO = 1] = "MOVE_TO",
                        c[c.LINE_TO = 2] = "LINE_TO",
                        c[c.CURVO_TO = 3] = "CURVO_TO",
                        c[c.LINE_STYLE = 32] = "LINE_STYLE",
                        c[c.BEGIN_FILL = 33] = "BEGIN_FILL",
                        c[c.END_FILL = 255] = "END_FILL"
                    }
                    )(p = m.NBGraphicsCommand || (m.NBGraphicsCommand = {}))
                }
                )(h.pixiExtras || (h.pixiExtras = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.atan2;
                (function(f) {
                    var p = function() {
                        function c() {}
                        return c.retrieveRotation = function(l) {
                            return -m(l.c, l.d)
                        }
                        ,
                        c
                    }();
                    f.MatrixUtil = p
                }
                )(h.pixiExtras || (h.pixiExtras = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function c() {}
                        return c.addDrag = function(l, i, e) {
                            var t = new p(l,i,e)
                              , a = m.NBTouchUtil.addTouch(l, t);
                            return c.map[a] = t,
                            a
                        }
                        ,
                        c.removeDrag = function(l) {
                            c.map[l] && (m.NBTouchUtil.removeTouch(l),
                            c.map[l].destroy(),
                            delete c.map[l])
                        }
                        ,
                        c.map = {},
                        c
                    }();
                    m.NBDragUtil = f;
                    var p = function() {
                        function c(l, i, e) {
                            this.dis = l,
                            this.dragArea = i,
                            this.callBackItem = e
                        }
                        return c.prototype.touchStart = function(l, i) {
                            this.callBackItem.dragStart && this.callBackItem.dragStart(l, i)
                        }
                        ,
                        c.prototype.touchMove = function(l, i, e) {
                            (!this.dragArea || this.dragArea.contains(this.dis.x + i, this.dis.y + e)) && (this.dis.x += i,
                            this.dis.y += e,
                            this.callBackItem.dragMove && this.callBackItem.dragMove(l, i, e))
                        }
                        ,
                        c.prototype.touchEnd = function(l) {
                            this.callBackItem.dragEnd && this.callBackItem.dragEnd(l)
                        }
                        ,
                        c.prototype.destroy = function() {
                            this.dis = null,
                            this.dragArea = null,
                            this.callBackItem = null
                        }
                        ,
                        c
                    }()
                }
                )(h.pixiExtras || (h.pixiExtras = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.pow
                  , f = Math.abs
                  , p = Math.cos
                  , c = Math.sqrt;
                (function(l) {
                    var i = PIXI.Point
                      , e = h.utils.NBPointUtils
                      , t = function() {
                        function a() {}
                        return a.drawPolygon = function(n, o) {
                            for (var s = 0, r; s < o.length; s++)
                                r = o[s],
                                s == 0 ? n.moveTo(r.x, r.y) : n.lineTo(r.x, r.y)
                        }
                        ,
                        a.drawLiquidPolygon = function(n, o, s) {
                            var r = Math.ceil;
                            s === void 0 && (s = 10);
                            var u = 0;
                            if (n.parent && n.parent.parent && (u = 4 * p(n.parent.parent.rotation)),
                            1 > u)
                                return void this.drawPolygon(n, o);
                            var d = n.toGlobal(o[0])
                              , y = n.toGlobal(o[1]);
                            if (1 > f(d.y - y.y)) {
                                var g = o.shift();
                                o.push(g)
                            }
                            var C = o.length
                              , T = o[0]
                              , A = o[C - 1]
                              , S = T.y > A.y ? T.y : A.y
                              , B = T.x - A.x
                              , b = T.y - A.y
                              , P = c(B * B + b * b)
                              , I = P / 10;
                            s = s > I ? I : s;
                            for (var O = B / P, D = b / P, w = 0 > B ? 1 : -1, R = -Infinity, L = 0, G; L < C; L++)
                                G = o[L],
                                G.y > R && (R = G.y);
                            var V = R - S;
                            V < 5 * u && (u = 0),
                            n.moveTo(T.x, T.y - u);
                            for (var L = 0, G; L < C; L++)
                                G = o[L],
                                n.lineTo(G.x, G.y);
                            if (n.lineTo(A.x, A.y - u),
                            s === 0) {
                                var W = w * u
                                  , ie = f(O * W)
                                  , ne = f(D * W);
                                n.bezierCurveTo(A.x + ie, A.y + ne, T.x - ie, T.y + ne, T.x, T.y - u)
                            } else {
                                var ee = r(f(P) / 100);
                                ee = 2 > ee ? 2 : ee;
                                for (var Ie = B / ee / 2, ye = b / ee / 2, x = A.x - w * u, se = A.y, X = A.x, Q = A.y, Z = 1, L = 0; L < ee - 1; L++) {
                                    var z = X + Ie
                                      , pe = Q + ye
                                      , ge = z + Ie
                                      , me = pe + ye
                                      , ce = z + s * D * Z
                                      , ue = pe - s * O * Z;
                                    Z *= -1,
                                    n.bezierCurveTo(x, se, ce, ue, ge, me),
                                    x = ce + 2 * (ge - ce),
                                    se = ue + 2 * (me - ue),
                                    X = ge,
                                    Q = me
                                }
                                n.bezierCurveTo(x, se, T.x + w * u, T.y, T.x, T.y - u),
                                n.endFill()
                            }
                        }
                        ,
                        a.drawDash = function(n, o, s, r, u) {
                            var d = r + u
                              , y = e.distance(o, s)
                              , g = y / d
                              , C = {
                                x: s.x - o.x,
                                y: s.y - o.y
                            };
                            e.normalize(C);
                            for (var T = {
                                x: o.x,
                                y: o.y
                            }, A = {
                                x: C.x * r,
                                y: C.y * r
                            }, S = {
                                x: C.x * d,
                                y: C.y * d
                            }, B = 0; B < g; B++)
                                n.moveTo(T.x, T.y),
                                B == g - 1 ? n.lineTo(s.x, s.y) : n.lineTo(T.x + A.x, T.y + A.y),
                                T.x += S.x,
                                T.y += S.y
                        }
                        ,
                        a.dashTo = function(n, o, s, r, u) {
                            var d = s.x - o.x
                              , y = s.y - o.y;
                            r = 0 < r ? r : 1,
                            r *= u;
                            var g = c(m(d, 2) + m(y, 2)) * u
                              , C = g / r / 2;
                            d /= 2 * C,
                            y /= 2 * C;
                            for (var T = new i(o.x,o.y), A = 0; A < C - 1; A++)
                                n.moveTo(T.x, T.y),
                                n.lineTo(T.x += d, T.y += y),
                                T.x += d,
                                T.y += y;
                            n.moveTo(T.x, T.y),
                            n.lineTo(s.x, s.y)
                        }
                        ,
                        a
                    }();
                    l.NBGraphicsUtil = t
                }
                )(h.pixiExtras || (h.pixiExtras = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function l() {}
                        return l.addTouch = function(i, e, t) {
                            var a = new c(i,e,t);
                            return l.map[a.UID] = a,
                            a.UID
                        }
                        ,
                        l.removeTouch = function(i) {
                            l.map[i] && (l.map[i].destroy(),
                            delete l.map[i])
                        }
                        ,
                        l.map = {},
                        l
                    }();
                    m.NBTouchUtil = f;
                    var p = function() {
                        function l(i, e) {
                            this.ot = 0,
                            this.ox = 0,
                            this.oy = 0,
                            this.dt = 0,
                            this.dx = 0,
                            this.dy = 0,
                            this.movN = 0,
                            this.delay = 0,
                            this.op = i,
                            this.ox = i.x,
                            this.oy = i.y,
                            this.ot = e
                        }
                        return l
                    }()
                      , c = function() {
                        function l(i, e, t) {
                            var a = this;
                            this.UID = l.COUNTING++,
                            this.map = {},
                            this.tapMap = {},
                            this.touchSetting = {
                                tapDelay: 300,
                                tapDis: 10,
                                movN: 1 / 0
                            },
                            this.mouseDownHandler = function(n) {
                                a.tapMap[n.data.identifier] = new p(n.data.global,new Date().getTime());
                                var o = a.getLocalP(n.data.global);
                                a.map[n.data.identifier] = o,
                                a.callBackItem.touchStart && a.callBackItem.touchStart(n, o),
                                a.dis.addEventListener("pointermove", a.mouseMoveHandler),
                                a.dis.addEventListener("pointerup", a.mouseUpHandler),
                                a.dis.addEventListener("pointerupoutside", a.mouseUpHandler)
                            }
                            ,
                            this.mouseMoveHandler = function(n) {
                                var o = a.map[n.data.identifier];
                                if (o) {
                                    a.updateTouchData(n, !0);
                                    var s = a.getLocalP(n.data.global)
                                      , r = s.x - o.x
                                      , u = s.y - o.y;
                                    a.callBackItem.touchMove && a.callBackItem.touchMove(n, r, u),
                                    o.x = s.x,
                                    o.y = s.y
                                }
                            }
                            ,
                            this.mouseUpHandler = function(n) {
                                a.map[n.data.identifier] && (a.updateTouchData(n, !0),
                                delete a.map[n.data.identifier],
                                a.callBackItem.touchEnd && a.callBackItem.touchEnd(n),
                                a.dis.removeEventListener("pointermove", a.mouseMoveHandler),
                                a.dis.removeEventListener("pointerup", a.mouseUpHandler),
                                a.dis.removeEventListener("pointerupoutside", a.mouseUpHandler))
                            }
                            ,
                            this.mouseClickHandler = function(n) {
                                var o = a.tapMap[n.data.identifier];
                                if (o) {
                                    if (a.callBackItem.touchTap && o.dt < a.touchSetting.tapDelay && o.movN < a.touchSetting.movN) {
                                        var s = o.dx
                                          , r = o.dy
                                          , u = a.touchSetting.tapDis;
                                        s * s + r * r < u * u && a.callBackItem.touchTap(n)
                                    }
                                    delete a.tapMap[n.data.identifier]
                                }
                            }
                            ,
                            this.dis = i,
                            this.callBackItem = e,
                            t && (this.touchSetting = Object.assign(this.touchSetting, t)),
                            this.dis.addEventListener("pointerdown", this.mouseDownHandler),
                            this.dis.addEventListener("pointertap", this.mouseClickHandler)
                        }
                        return l.prototype.destroy = function() {
                            this.dis.removeEventListener("pointerdown", this.mouseDownHandler),
                            this.dis.removeEventListener("pointermove", this.mouseMoveHandler),
                            this.dis.removeEventListener("pointerup", this.mouseUpHandler),
                            this.dis.removeEventListener("pointerupoutside", this.mouseUpHandler),
                            this.dis.removeEventListener("pointertap", this.mouseClickHandler),
                            this.dis = null,
                            this.callBackItem = null,
                            this.map = null,
                            this.touchSetting = null,
                            this.tapMap = null
                        }
                        ,
                        l.prototype.updateTouchData = function(i, e) {
                            var t = this.tapMap[i.data.identifier];
                            t && (t.dx = i.data.global.x - t.ox,
                            t.dy = i.data.global.y - t.oy,
                            t.dt = new Date().getTime() - t.ot,
                            e && t.movN++)
                        }
                        ,
                        l.prototype.getLocalP = function(i) {
                            return this.dis.parent.toLocal(i)
                        }
                        ,
                        l.COUNTING = 1,
                        l
                    }()
                }
                )(h.pixiExtras || (h.pixiExtras = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.max;
                (function(p) {
                    var c = PIXI.Rectangle
                      , l = function() {
                        function i() {}
                        return i.isEmpty = function(e) {
                            return e.width === 0 || e.height === 0
                        }
                        ,
                        i.normalize = function(e) {
                            0 > e.width && (e.x += e.width,
                            e.width = -e.width),
                            0 > e.height && (e.y += e.height,
                            e.height = -e.height)
                        }
                        ,
                        i.union = function(e, t) {
                            var a = m(e.x, t.x)
                              , n = m(e.y, t.y)
                              , o = f(e.x + e.width, t.x + t.width) - a
                              , s = f(e.y + e.height, t.y + t.height) - n;
                            return new c(a,n,o,s)
                        }
                        ,
                        i.inflate = function(e, t, a) {
                            e.x -= t,
                            e.width += 2 * t,
                            e.y -= a,
                            e.height += 2 * a
                        }
                        ,
                        i.containsPoint = function(e, t) {
                            return e.contains(t.x, t.y)
                        }
                        ,
                        i.containsRect = function(e, t) {
                            return e.contains(t.left, t.top) && e.contains(t.right, t.bottom)
                        }
                        ,
                        i.intersects = function(e, t, a) {
                            return a ? !(t.left >= e.right || t.right <= e.left || t.top >= e.bottom || t.bottom <= e.top) : !(t.left > e.right || t.right < e.left || t.top > e.bottom || t.bottom < e.top)
                        }
                        ,
                        i.intersection = function(e, t, a) {
                            var n = new c;
                            return i.intersects(e, t, a) && (t.left <= e.right ? (n.x = t.left,
                            n.width = e.right - n.x) : (n.x = e.left,
                            n.width = t.right - n.x),
                            n.y = t.top < e.top ? e.top : t.top,
                            n.height = t.bottom < e.bottom ? t.bottom : e.bottom,
                            n.height -= n.y),
                            n
                        }
                        ,
                        i
                    }();
                    p.RectangleUtil = l
                }
                )(h.pixiExtras || (h.pixiExtras = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p(c, l) {
                            this.userData = {},
                            this.lastRemoveArr = [],
                            this.lastAddedArr = [],
                            this.length = c,
                            this.item0 = new m.CdequeItem(this.length,l),
                            this.item1 = this.item0
                        }
                        return p.prototype.getLength = function() {
                            return this.length
                        }
                        ,
                        p.prototype.destroy = function() {
                            this.forEach(function(c) {
                                c.destroy()
                            }),
                            this.item0 = null,
                            this.item1 = null,
                            this.lastRemoveArr = null,
                            this.userData = null
                        }
                        ,
                        p.prototype.resize = function(c, l) {
                            if (c > this.length) {
                                var i = c - this.length;
                                this.length = c,
                                this.unshift(i, l)
                            } else
                                c < this.length && (this.length = c,
                                this.tryRemoveFromFront())
                        }
                        ,
                        p.prototype.getLastRemoveArr = function() {
                            return this.lastRemoveArr
                        }
                        ,
                        p.prototype.getLastAddedArr = function() {
                            return this.lastAddedArr
                        }
                        ,
                        p.prototype.canMerge = function(c, l, i) {
                            return l === i
                        }
                        ,
                        p.prototype.forEach = function(c) {
                            for (var l = this.item0, i; l !== this.item1; )
                                i = l.next,
                                c(l),
                                l = i;
                            c(this.item1)
                        }
                        ,
                        p.prototype.reverseForEach = function(c) {
                            for (var l = this.item1, i; l !== this.item0; )
                                i = l.prev,
                                c(l),
                                l = i;
                            c(this.item0)
                        }
                        ,
                        p.prototype.unshift = function(c, l) {
                            this.lastAddedArr = [],
                            this.lastAddedArr.push(new m.CdequeItem(c,l));
                            var i = new m.CdequeItem(c,l);
                            return this.canMerge(this, i, this.item0) ? (this.item0.length += c,
                            i.destroy()) : (i.next = this.item0,
                            this.item0.prev = i,
                            this.item0 = i),
                            this.tryRemoveFromEnd(),
                            this.lastRemoveArr
                        }
                        ,
                        p.prototype.push = function(c, l) {
                            this.lastAddedArr = [],
                            this.lastAddedArr.push(new m.CdequeItem(c,l));
                            var i = new m.CdequeItem(c,l);
                            return this.canMerge(this, i, this.item1) ? (this.item1.length += c,
                            i.destroy()) : (i.prev = this.item1,
                            this.item1.next = i,
                            this.item1 = i),
                            this.tryRemoveFromFront(),
                            this.lastRemoveArr
                        }
                        ,
                        p.prototype.tryRemoveFromEnd = function() {
                            this.lastRemoveArr = [],
                            this.updatePrevLength(),
                            this.cutOff()
                        }
                        ,
                        p.prototype.updatePrevLength = function() {
                            var c = this.item0;
                            for (c.prevLength = 0; c !== this.item1; )
                                c.next.prevLength = c.prevLength + c.length,
                                c = c.next
                        }
                        ,
                        p.prototype.cutOff = function() {
                            for (; this.item1.prevLength >= this.length; )
                                this.remove();
                            this.item1.length + this.item1.prevLength > this.length && (this.lastRemoveArr.push(new m.CdequeItem(this.item1.length + this.item1.prevLength - this.length,this.item1.data)),
                            this.item1.length = this.length - this.item1.prevLength)
                        }
                        ,
                        p.prototype.remove = function() {
                            this.lastRemoveArr.push(new m.CdequeItem(this.item1.length,this.item1.data)),
                            this.item1 = this.item1.prev,
                            this.item1.next.destroy(),
                            this.item1.next = this.item1
                        }
                        ,
                        p.prototype.tryRemoveFromFront = function() {
                            this.lastRemoveArr = [],
                            this.updateNextLength(),
                            this.reverseCutOff()
                        }
                        ,
                        p.prototype.updateNextLength = function() {
                            var c = this.item1;
                            for (c.nextLength = 0; c !== this.item0; )
                                c.prev.nextLength = c.nextLength + c.length,
                                c = c.prev
                        }
                        ,
                        p.prototype.reverseCutOff = function() {
                            for (; this.item0.nextLength >= this.length; )
                                this.reverseRemove();
                            this.item0.length + this.item0.nextLength > this.length && (this.lastRemoveArr.push(new m.CdequeItem(this.item0.length + this.item0.nextLength - this.length,this.item0.data)),
                            this.item0.length = this.length - this.item0.nextLength)
                        }
                        ,
                        p.prototype.reverseRemove = function() {
                            this.lastRemoveArr.push(new m.CdequeItem(this.item0.length,this.item0.data)),
                            this.item0 = this.item0.next,
                            this.item0.prev.destroy(),
                            this.item0.prev = this.item0
                        }
                        ,
                        p
                    }();
                    m.Cdeque = f
                }
                )(h.dataStruct || (h.dataStruct = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p(c, l) {
                            this.userData = {},
                            this.length = c,
                            this.data = l,
                            this.next = this,
                            this.prev = this,
                            this.prevLength = 0,
                            this.nextLength = 0
                        }
                        return p.prototype.destroy = function() {
                            this.next = null,
                            this.prev = null,
                            this.data = null,
                            this.userData = null
                        }
                        ,
                        p.prototype.clone = function() {
                            return new p(this.length,this.data)
                        }
                        ,
                        p
                    }();
                    m.CdequeItem = f
                }
                )(h.dataStruct || (h.dataStruct = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {
                            this.changed = !1,
                            this.nodes = [],
                            this.userDatas = [],
                            this.guard = new m.ListNode(null)
                        }
                        return p.prototype.destroy = function() {
                            this.guard = null,
                            this.nodes = null,
                            this.userDatas = null
                        }
                        ,
                        p.prototype.add = function(c) {
                            this.changed = !0,
                            this.guard.connect(c)
                        }
                        ,
                        p.prototype.remove = function(c) {
                            this.changed = !0,
                            c.disConnect()
                        }
                        ,
                        p.prototype.getAll = function() {
                            return this.updateAry(),
                            this.nodes
                        }
                        ,
                        p.prototype.removeAll = function() {
                            for (; this.guard.prev !== this.guard; )
                                this.guard.prev.disConnect();
                            this.changed = !0
                        }
                        ,
                        p.prototype.getAllUserData = function() {
                            return this.updateAry(),
                            this.userDatas
                        }
                        ,
                        p.prototype.updateAry = function() {
                            if (this.changed) {
                                this.changed = !1,
                                this.nodes = [],
                                this.userDatas = [];
                                for (var c = this.guard.prev; c !== this.guard; )
                                    this.nodes.push(c),
                                    this.userDatas.push(c.userData),
                                    c = c.prev
                            }
                        }
                        ,
                        p
                    }();
                    m.List = f
                }
                )(h.dataStruct || (h.dataStruct = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p(c) {
                            this.next = this,
                            this.prev = this,
                            this.userData = c
                        }
                        return p.prototype.destroy = function() {
                            this.next = null,
                            this.prev = null,
                            this.userData = null
                        }
                        ,
                        p.prototype.connect = function(c) {
                            var l = this.next
                              , i = c.next;
                            this.next = i,
                            i.prev = this,
                            c.next = l,
                            l.prev = c
                        }
                        ,
                        p.prototype.disConnect = function() {
                            this.prev.next = this.next,
                            this.next.prev = this.prev,
                            this.next = this,
                            this.prev = this
                        }
                        ,
                        p
                    }();
                    m.ListNode = f
                }
                )(h.dataStruct || (h.dataStruct = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p(c) {
                            this.index = -1,
                            this._root = this,
                            this.userData = c
                        }
                        return Object.defineProperty(p.prototype, "root", {
                            get: function() {
                                return this.getRoot()
                            },
                            set: function(c) {
                                this._root = c
                            },
                            enumerable: !0,
                            configurable: !0
                        }),
                        p.prototype.destroy = function() {
                            this._root = null,
                            this.userData = null
                        }
                        ,
                        p.prototype.isRoot = function() {
                            return this._root === this
                        }
                        ,
                        p.prototype.getRoot = function() {
                            if (this._root._root !== this._root) {
                                for (var c = this._root._root; c !== c._root; )
                                    c = c._root;
                                for (var l = this._root, i = void 0; l !== c; )
                                    i = l._root,
                                    l._root = c,
                                    l = i;
                                this._root = c
                            }
                            return this._root
                        }
                        ,
                        p
                    }();
                    m.UnionFindSet = f
                }
                )(h.dataStruct || (h.dataStruct = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        return function() {
                            console.log("NbGesture")
                        }
                    }();
                    m.NbGesture = f
                }
                )(h.gesture || (h.gesture = {}))
            }
            )(v || (v = {}));
            var U = function() {
                var h = Object.setPrototypeOf || {
                    __proto__: []
                }instanceof Array && function(m, f) {
                    m.__proto__ = f
                }
                || function(m, f) {
                    for (var p in f)
                        f.hasOwnProperty(p) && (m[p] = f[p])
                }
                ;
                return function(m, f) {
                    function p() {
                        this.constructor = m
                    }
                    h(m, f),
                    m.prototype = f === null ? Object.create(f) : (p.prototype = f.prototype,
                    new p)
                }
            }(), v;
            (function(h) {
                var m = Math.sin
                  , f = Math.cos;
                (function(p) {
                    var c = h.pixiExtras.MatrixUtil
                      , l = function(i) {
                        function e(t, a) {
                            var n = i.call(this) || this;
                            return n.loaded = !1,
                            n.bindOffsetX = 0,
                            n.bindOffsetY = 0,
                            n.interactive = !1,
                            n.interactiveChildren = !1,
                            n.texture = a.textureAry.map(function(o) {
                                return PIXI.Texture.fromFrame(o)
                            }),
                            n.getParticle(t + a.jsonPath),
                            n
                        }
                        return U(e, i),
                        e.prototype.getParticle = function(t) {
                            var a = this
                              , n = this;
                            $.getJSON(t, function(o, s) {
                                s === "success" && (n.particle = new PIXI.particles.Emitter(n,a.texture,o),
                                n.loaded = !0,
                                n.emit("particle_load"))
                            })
                        }
                        ,
                        e.prototype.render = function(t, a) {
                            if (t === void 0 && (t = 0),
                            a === void 0 && (a = !1),
                            this.particle) {
                                if (this.bindObj && this.parent) {
                                    var n = this.parent.toLocal(new PIXI.Point(0,0), this.bindObj);
                                    if (a) {
                                        var o = c.retrieveRotation(this.bindObj.transform.worldTransform)
                                          , s = this.x
                                          , r = this.y;
                                        this.x = s * f(o) - r * m(o),
                                        this.y = r * f(o) + s * m(o)
                                    }
                                    this.particle.updateOwnerPos(n.x + this.bindOffsetX, n.y + this.bindOffsetY)
                                }
                                var u = Date.now();
                                this._lastTime || (this._lastTime = u),
                                this.particle.update(t || .001 * (u - this._lastTime)),
                                this._lastTime = u
                            }
                        }
                        ,
                        e.prototype.bind = function(t, a, n) {
                            a === void 0 && (a = 0),
                            n === void 0 && (n = 0),
                            this.bindObj = t,
                            this.bindOffsetX = a,
                            this.bindOffsetY = n
                        }
                        ,
                        e.prototype.destroy = function() {
                            this.parent && this.parent.removeChild(this),
                            this.particle && this.particle.destroy.apply(this.particle)
                        }
                        ,
                        e.prototype.destroySlow = function(t) {
                            if (t === void 0 && (t = 0),
                            !t)
                                this.destroy();
                            else {
                                var a = this;
                                TweenMax.to(this, t || .5, {
                                    alpha: 0,
                                    onComplete: function() {
                                        a && a.destroy()
                                    }
                                })
                            }
                        }
                        ,
                        e.prototype.setParticleProp = function(t, a) {
                            if (this.particle) {
                                var n = !1;
                                /^end/.test(t) && (t = t.replace("end", "start"),
                                n = !0);
                                var o = this.particle[t];
                                if (o.isStepped !== void 0) {
                                    if (!o.next && n)
                                        return;
                                    var s = n ? o.next : o;
                                    a instanceof Array ? (s.value.r = a[0],
                                    s.value.g = a[1],
                                    s.value.b = a[2]) : s.value = a
                                } else
                                    this.particle[t] = a
                            }
                        }
                        ,
                        e.prototype.getParticleProp = function(t) {
                            if (this.particle) {
                                if (t === "startColor") {
                                    var a = this.particle.startColor.value;
                                    return [a.r, a.g, a.b]
                                }
                                if (t === "endColor") {
                                    var a = this.particle.startColor.next ? this.particle.startColor.next.value : this.particle.startColor.value;
                                    return [a.r, a.g, a.b]
                                }
                                return /^start/.test(t) ? this.particle[t].value : /^end/.test(t) ? (t = t.replace("end", "start"),
                                this.particle[t].next ? this.particle[t].next.value : this.particle[t].value) : this.particle[t]
                            }
                        }
                        ,
                        e.prototype.setParticleMultiProps = function(t) {
                            for (var a in t)
                                a && t[a] && this.setParticleProp(a, t[a])
                        }
                        ,
                        e
                    }(PIXI.Container);
                    p.NbParticles = l
                }
                )(h.particles || (h.particles = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {}
                        return p.CATHETER_UP_BUBBLE = {
                            jsonPath: "particles/tubeBubble.json",
                            textureAry: ["Skin/tubeBubble.png"]
                        },
                        p.CATHETER_RIGHT_BUBBLE = {
                            jsonPath: "particles/tubeBubbleRight.json",
                            textureAry: ["Skin/tubeBubbleHalf.png"]
                        },
                        p.CATHETER_TOP_BUBBLE = {
                            jsonPath: "particles/tubeBubbleTop.json",
                            textureAry: ["Skin/tubeBubbleHalf.png"]
                        },
                        p.ELECTROD_BUBBLE = {
                            jsonPath: "particles/electrodBubble.json",
                            textureAry: ["Skin/tubeBubble.png"]
                        },
                        p
                    }();
                    m.ParticleConst = f
                }
                )(h.particles || (h.particles = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p(c) {
                            this.canvas = c,
                            this.initParticle()
                        }
                        return p.prototype.initParticle = function() {
                            var c = this;
                            PIXI.loader.add("assets/skin.json").load(function() {
                                c.app = new PIXI.Application(1e3,600,{
                                    antialias: !1,
                                    view: c.canvas
                                });
                                var l = new h.particles.NbParticles("",{
                                    jsonPath: "./json/mianhua_fire.json",
                                    textureAry: ["particle.spirit_fire"]
                                });
                                c.app.stage.addChild(l),
                                l.x = 500,
                                l.y = 500,
                                c.app.ticker.add(function() {
                                    l.render()
                                })
                            })
                        }
                        ,
                        p
                    }();
                    m.Example01 = f
                }
                )(h.particles || (h.particles = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p(c, l, i) {
                            this.uid = p.COUNTING++,
                            this.audio = this.getAudio(c, l, i),
                            this.src = c
                        }
                        return p.prototype.destroy = function() {
                            this.audio.destroy(),
                            this.audio = null
                        }
                        ,
                        p.prototype.play = function() {
                            this.audio.play()
                        }
                        ,
                        p.prototype.stop = function() {
                            this.audio.stop()
                        }
                        ,
                        p.prototype.setLoop = function(c) {
                            this.audio.setLoop(c)
                        }
                        ,
                        p.prototype.setVolume = function(c) {
                            this.audio.setVolume(c)
                        }
                        ,
                        p.prototype.setMute = function(c) {
                            this.audio.setMute(c)
                        }
                        ,
                        p.prototype.setSpeed = function(c) {
                            this.audio.setSpeed(c)
                        }
                        ,
                        p.prototype.getAudoStatus = function() {
                            return this.audio.getAudoStatus()
                        }
                        ,
                        p.prototype.getAudio = function(c, l, i) {
                            return window.createjs && window.createjs.Sound ? new m.CreatejsSound(c,l) : new m.CustomAudioSource(c,l,i)
                        }
                        ,
                        p.COUNTING = 0,
                        p
                    }();
                    m.NBAudioSource = f
                }
                )(h.sound || (h.sound = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p(c, l) {
                            this.autoPlay = !1,
                            this.loop = !1,
                            this.volume = 1,
                            this.speed = 1,
                            this.isPlay = !1,
                            this.isMute = !1,
                            this.src = c,
                            this.copyProperty(this, l, "autoPlay"),
                            this.copyProperty(this, l, "loop"),
                            this.copyProperty(this, l, "volume"),
                            this.copyProperty(this, l, "speed"),
                            this.soundJs = this.getSoundJs(),
                            this.soundJs.registerSound(c),
                            this.autoPlay && this.play()
                        }
                        return p.prototype.destroy = function() {
                            this.stop()
                        }
                        ,
                        p.prototype.play = function() {
                            this.instance && this.stop(),
                            this.instance = this.soundJs.play(this.src, {
                                loop: this.loop ? -1 : 0,
                                volume: this.isMute ? 0 : this.volume
                            })
                        }
                        ,
                        p.prototype.stop = function() {
                            this.instance && (this.instance.stop(),
                            this.instance = null),
                            this.isPlay = !1
                        }
                        ,
                        p.prototype.setLoop = function(c) {
                            this.instance && (this.instance.loop = c ? -1 : 0),
                            this.loop = c
                        }
                        ,
                        p.prototype.setVolume = function(c) {
                            this.instance && (this.instance.volume = c),
                            this.volume = c
                        }
                        ,
                        p.prototype.setMute = function(c) {
                            this.instance && (this.instance.muted = c),
                            this.isMute = c
                        }
                        ,
                        p.prototype.setSpeed = function(c) {
                            this.speed = c
                        }
                        ,
                        p.prototype.getAudoStatus = function() {
                            return this.instance ? this.instance.playState === "playSucceeded" : this.isPlay
                        }
                        ,
                        p.prototype.getSoundJs = function() {
                            return window.createjs ? window.createjs.Sound : null
                        }
                        ,
                        p.prototype.copyProperty = function(c, l, i) {
                            c && l && c.hasOwnProperty(i) && l.hasOwnProperty(i) && (c[i] = l[i])
                        }
                        ,
                        p
                    }();
                    m.CreatejsSound = f
                }
                )(h.sound || (h.sound = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p(c, l, i) {
                            var e = this;
                            this.context = null,
                            this.autoPlay = !1,
                            this.loop = !1,
                            this.volume = 1,
                            this.speed = 1,
                            this.isPlay = !1,
                            this.isMute = !1,
                            this.src = c,
                            this.copyProperty(this, l, "autoPlay"),
                            this.copyProperty(this, l, "loop"),
                            this.copyProperty(this, l, "volume"),
                            this.copyProperty(this, l, "speed"),
                            i.load(c, function(t, a) {
                                e.context = t,
                                e.audioBuffer = a,
                                e.autoPlay && e.play()
                            })
                        }
                        return p.prototype.destroy = function() {
                            this.isPlay && this.stop()
                        }
                        ,
                        p.prototype.play = function() {
                            var c = this;
                            !this.audioBuffer || this.isPlay || (this.isPlay = !0,
                            this.source = this.context.createBufferSource(),
                            this.source.buffer = this.audioBuffer,
                            this.gainNode = this.context.createGain(),
                            this.source.connect(this.context.destination),
                            this.source.start(0),
                            this.updateVolume(),
                            this.setSpeed(this.speed),
                            this.setLoop(this.loop),
                            this.source.onended = function() {
                                c.isPlay = !1
                            }
                            )
                        }
                        ,
                        p.prototype.stop = function() {
                            this.isPlay && this.source && this.source.stop(0),
                            this.isPlay = !1
                        }
                        ,
                        p.prototype.setLoop = function(c) {
                            this.loop = c,
                            this.source && (this.source.loop = this.loop)
                        }
                        ,
                        p.prototype.setVolume = function(c) {
                            this.volume = c,
                            this.updateVolume()
                        }
                        ,
                        p.prototype.setMute = function(c) {
                            this.isMute = c,
                            this.updateVolume()
                        }
                        ,
                        p.prototype.setSpeed = function(c) {
                            this.speed = c,
                            this.source && (this.source.playbackRate.value = c)
                        }
                        ,
                        p.prototype.getAudoStatus = function() {
                            return this.isPlay
                        }
                        ,
                        p.prototype.updateVolume = function() {
                            this.gainNode && (this.source.connect(this.gainNode),
                            this.gainNode.gain.value = this.isMute ? 0 : this.volume,
                            this.gainNode.connect(this.context.destination))
                        }
                        ,
                        p.prototype.copyProperty = function(c, l, i) {
                            c && l && c.hasOwnProperty(i) && l.hasOwnProperty(i) && (c[i] = l[i])
                        }
                        ,
                        p
                    }();
                    m.CustomAudioSource = f
                }
                )(h.sound || (h.sound = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function c() {
                            this.map = {}
                        }
                        return c.prototype.destroy = function() {
                            for (var l in this.map)
                                this.map.hasOwnProperty(l) && this.map[l].destroy();
                            this.map = null
                        }
                        ,
                        c.prototype.load = function(l, i) {
                            var e = this.map[l];
                            e || (e = new p,
                            this.map[l] = e),
                            e.load(l, i)
                        }
                        ,
                        c
                    }();
                    m.Loader = f;
                    var p = function() {
                        function c() {
                            this.isLoaded = !1,
                            this.isLoading = !1,
                            this.isDestroyed = !1,
                            this.queue = [],
                            this.context = this.getContext()
                        }
                        return c.prototype.destroy = function() {
                            this.queue = [],
                            this.isDestroyed = !0,
                            this.context = null,
                            this.arrayBuffer = null,
                            this.audioBuffer = null
                        }
                        ,
                        c.prototype.load = function(l, i) {
                            this.context && (this.src = l,
                            this.queue.push(i),
                            this.isLoaded ? this.loadComplete() : !this.isLoading && (this.isLoading = !0,
                            this.loadAudioFile(l)))
                        }
                        ,
                        c.prototype.loadComplete = function() {
                            var l = this;
                            this.isLoaded = !0,
                            this.isLoading = !1,
                            this.queue.forEach(function(i) {
                                i(l.context, l.audioBuffer)
                            })
                        }
                        ,
                        c.prototype.loadAudioFile = function(l) {
                            var i = this
                              , e = new XMLHttpRequest;
                            e.open("GET", l, !0),
                            e.responseType = "arraybuffer",
                            e.addEventListener("load", function(t) {
                                i.isDestroyed || (console.log(t),
                                i.arrayBuffer = e.response,
                                i.initSound(i.arrayBuffer))
                            }),
                            e.addEventListener("error", function(t) {
                                console.log("\u97F3\u9891\u52A0\u8F7D\u5931\u8D25:" + l + "," + t.message)
                            }),
                            e.send()
                        }
                        ,
                        c.prototype.initSound = function(l) {
                            var i = this;
                            this.context.decodeAudioData(l, function(e) {
                                i.isDestroyed || (i.audioBuffer = e,
                                i.loadComplete())
                            }, function(e) {
                                console.log("\u89E3\u7801\u51FA\u9519:" + e.message)
                            })
                        }
                        ,
                        c.prototype.getContext = function() {
                            var l = window.AudioContext || window.webkitAudioContext || window.mozAudioContext || window.msAudioContext;
                            return l ? new l : (console.log("\u4E0D\u652F\u6301AudioContext"),
                            null)
                        }
                        ,
                        c
                    }()
                }
                )(h.sound || (h.sound = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.sound.NBAudioSource
                      , p = function() {
                        function c() {
                            this.soundMap = {},
                            this.isMute = !1,
                            this.loader = new m.Loader
                        }
                        return c.prototype.destroy = function() {
                            for (var l in this.soundMap)
                                if (this.soundMap.hasOwnProperty(l)) {
                                    var i = this.soundMap[l];
                                    i.destroy()
                                }
                            this.soundMap = null,
                            this.loader.destroy()
                        }
                        ,
                        c.prototype.register = function(l, i) {
                            var e = new f(l,i,this.loader);
                            return this.soundMap[e.uid] = e,
                            e.setMute(this.isMute),
                            e
                        }
                        ,
                        c.prototype.unRegister = function(l) {
                            var i = this.soundMap[l];
                            i && (i.destroy(),
                            delete this.soundMap[l])
                        }
                        ,
                        c.prototype.setMute = function(l) {
                            for (var i in this.isMute = l,
                            this.soundMap)
                                if (this.soundMap.hasOwnProperty(i)) {
                                    var e = this.soundMap[i];
                                    e.setMute(l)
                                }
                        }
                        ,
                        c.prototype.getAudioSource = function() {
                            return null
                        }
                        ,
                        c
                    }();
                    m.NBSound = p
                }
                )(h.sound || (h.sound = {}))
            }
            )(v || (v = {}));
            var U = function() {
                var h = function(m, f) {
                    return h = Object.setPrototypeOf || {
                        __proto__: []
                    }instanceof Array && function(p, c) {
                        p.__proto__ = c
                    }
                    || function(p, c) {
                        for (var l in c)
                            c.hasOwnProperty(l) && (p[l] = c[l])
                    }
                    ,
                    h(m, f)
                };
                return function(m, f) {
                    function p() {
                        this.constructor = m
                    }
                    h(m, f),
                    m.prototype = f === null ? Object.create(f) : (p.prototype = f.prototype,
                    new p)
                }
            }(), v;
            (function(h) {
                (function(m) {
                    var f = PIXI.Point
                      , p = function() {
                        function c(l) {
                            this.mouseP = new f,
                            this.map = {},
                            this.main = l
                        }
                        return c.prototype.destroy = function() {
                            this.main = null,
                            this.mouseP = null,
                            this.map = null
                        }
                        ,
                        c.prototype.onMouseDown = function() {}
                        ,
                        c.prototype.onMouseMove = function() {}
                        ,
                        c.prototype.onMouseUp = function() {}
                        ,
                        c.prototype.onClick = function() {}
                        ,
                        c.prototype.onMouseWheel = function() {}
                        ,
                        c.prototype.onRightDown = function() {}
                        ,
                        c.prototype.onRightUp = function() {}
                        ,
                        c.prototype.onGlobalRightUp = function() {}
                        ,
                        c.prototype.onRightClick = function() {}
                        ,
                        c.prototype.global2view = function(l) {
                            var i = this.main.global2view(l);
                            return new f(i.x,i.y)
                        }
                        ,
                        c.prototype.isEquipment = function(l) {
                            return this.main.isEquipment(l)
                        }
                        ,
                        c.prototype.getEqUnderPoint = function(l, i, e) {
                            return e === void 0 && (e = !0),
                            this.main.getEqUnderPoint(l, i, e)
                        }
                        ,
                        c
                    }();
                    m.TouchPluginBase = p
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p(c, l) {
                            this.func = c,
                            this.context = l
                        }
                        return p.prototype.callBack = function() {
                            for (var c = [], l = 0; l < arguments.length; l++)
                                c[l] = arguments[l];
                            this.func && (this.context ? this.func.apply(this.context, c) : this.func.apply(this, c),
                            this.destroy())
                        }
                        ,
                        p.prototype.destroy = function() {
                            this.func = null,
                            this.context = null
                        }
                        ,
                        p
                    }();
                    m.CallBackItem = f
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {}
                        return p.getAngle = function(c, l, i, e) {
                            return {
                                type: p.ANGLE,
                                name: c,
                                value: l,
                                callBack: i,
                                this: e
                            }
                        }
                        ,
                        p.getLabel = function(c, l) {
                            return {
                                type: p.LABEL,
                                name: c,
                                text: l
                            }
                        }
                        ,
                        p.getScrollBar = function(c, l, i, e, t, a, n, o, s) {
                            var r = {
                                type: p.DRAG,
                                name: c,
                                canEnter: l,
                                enterUnit: i,
                                maxValue: e,
                                minValue: t,
                                step: n,
                                callBack: o,
                                this: s,
                                showValue: a
                            };
                            if (0 < n) {
                                for (var u = 0; 1 > n; )
                                    n *= 10,
                                    u++;
                                r.precision = u
                            }
                            return r
                        }
                        ,
                        p.getSwitch = function(c, l, i, e) {
                            return {
                                type: p.BOOL,
                                name: c,
                                checked: l,
                                callBack: i,
                                this: e
                            }
                        }
                        ,
                        p.getDropMenu = function(c, l, i, e, t, a, n, o, s) {
                            return {
                                type: p.SELECT,
                                name: c,
                                canEnter: l,
                                enterUnit: i,
                                maxValue: o,
                                minValue: s,
                                showValue: e,
                                value: t,
                                this: a,
                                callBack: n
                            }
                        }
                        ,
                        p.getRadio = function(c, l, i, e, t) {
                            return {
                                type: p.RADIO,
                                name: c,
                                checked: l,
                                value: i,
                                callBack: e,
                                this: t
                            }
                        }
                        ,
                        p.getButton = function(c, l, i, e) {
                            return {
                                type: p.BUTTON,
                                name: c,
                                text: l,
                                callBack: i,
                                this: e
                            }
                        }
                        ,
                        p.getTextInput = function(c, l, i, e, t) {
                            return {
                                type: p.INPUT,
                                name: c,
                                showValue: l,
                                enterUnit: i,
                                callBack: e,
                                this: t
                            }
                        }
                        ,
                        p.getInputSwitch = function(c, l, i, e) {
                            return {
                                type: p.INPUTBOOL,
                                name: c,
                                checked: l,
                                callBack: i,
                                this: e
                            }
                        }
                        ,
                        p.getInputSwitch2 = function(c, l, i, e) {
                            return {
                                type: p.INPUTBOOL2,
                                name: c,
                                checked: l,
                                callBack: i,
                                this: e
                            }
                        }
                        ,
                        p.getEleLabel = function(c, l) {
                            return {
                                type: p.LABEL_LIST,
                                name: "\u6807\u7B7E",
                                inputValAry: c,
                                callBack: l
                            }
                        }
                        ,
                        p.ANGLE = 9,
                        p.TEXT = 13,
                        p.DOUBLE_INPUT = 14,
                        p.DOUBLE_BUTTON = 15,
                        p.SIMULATED_ELECTRIC_FIELD = 16,
                        p.TYPE_LIST_BATTERY_HOLDER = 17,
                        p.TYPE_LIST_BATTERY = 18,
                        p.TYPE_LIST_WAX_BLOCK = 19,
                        p.TYPE_LIST_RULER = 20,
                        p.BOOL = 4,
                        p.INPUT = 5,
                        p.LABEL = 6,
                        p.DRAG = 7,
                        p.BUTTON = 8,
                        p.RADIO = 1,
                        p.CHECKBOX = 2,
                        p.SELECT = 3,
                        p.INPUTBOOL = 10,
                        p.INPUTBOOL2 = 102,
                        p.LABEL_LIST = 23,
                        p
                    }();
                    m.ComponentProperty = f
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p(c) {
                            this.instanceNameMap = {},
                            this.main = c
                        }
                        return p.prototype.destroy = function() {
                            this.main = null
                        }
                        ,
                        p.prototype.getCdnUrl = function() {
                            return this.main.getCdnUrl()
                        }
                        ,
                        p.prototype.getCommonSkins = function() {
                            return this.main.getCommonSkins() || []
                        }
                        ,
                        p.prototype.addEq = function(c, l, i) {
                            typeof c == "string" ? this.addEqByUid(c, l, i) : this.addEqByData(c, l, i)
                        }
                        ,
                        p.prototype.addEqByData = function(c, l, i) {
                            var e = this
                              , t = c.skins || (c.noTexture ? [] : [c.className]);
                            if (t = t.concat(this.getCommonSkins()),
                            t = this.filterExistSkins(t),
                            t.length === 0) {
                                var a = this.addEqSync(c.className, l, c);
                                i(a)
                            } else
                                m.LoadSkinPlugin.loadAll(this.getCdnUrl(), t, function(n) {
                                    if (e.hasNull(n))
                                        console.log("\u76AE\u80A4\u52A0\u8F7D\u5931\u8D25"),
                                        i(null);
                                    else {
                                        var o = e.addEqSync(c.className, l, c);
                                        i(o)
                                    }
                                }, null)
                        }
                        ,
                        p.prototype.addEqByUid = function(c, l, i) {
                            var e = this.main.getEqConfData(c);
                            e ? this.addEqByData(e, l, i) : i(null)
                        }
                        ,
                        p.prototype.addEqSync = function(c, l, i) {
                            var e = this.main.getEqClassByName(c);
                            if (e) {
                                var t = new e(this.main)
                                  , a = void 0;
                                if (t.isCombination) {
                                    var n = t;
                                    n.setPosition(l ? l.x : 0, l ? l.y : 0),
                                    a = n.create(i)
                                } else
                                    a = t,
                                    a.dataId = i.id,
                                    this.main.addEqToView(a),
                                    a.setPosition(l ? l.x : 0, l ? l.y : 0),
                                    a.init(),
                                    a.initData(i);
                                return a
                            }
                            return console.log("\u7C7B\u4E0D\u5B58\u5728\uFF1A", c),
                            null
                        }
                        ,
                        p.prototype.hasNull = function(c) {
                            for (var l = 0; l < c.length; l++)
                                if (!c[l])
                                    return !0;
                            return !1
                        }
                        ,
                        p.prototype.filterExistSkins = function(c) {
                            for (var l = [], i = 0; i < c.length; i++)
                                m.LoadSkinPlugin.hasSkin(c[i]) || l.push(c[i]);
                            return l
                        }
                        ,
                        p
                    }();
                    m.AddEqPlugin = f
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {
                            var c = this;
                            this.map = {},
                            this.keyMap = {},
                            this.keyDownHandler = function(l) {
                                for (var i in c.keyMap[l.keyCode] = !0,
                                c.map)
                                    if (c.map.hasOwnProperty(i)) {
                                        var e = c.map[i];
                                        c.match(e.keys) && c.map[i].callback()
                                    }
                            }
                            ,
                            this.keyUpHandler = function(l) {
                                c.keyMap[l.keyCode] = !1
                            }
                            ,
                            document.addEventListener("keydown", this.keyDownHandler),
                            document.addEventListener("keyup", this.keyUpHandler)
                        }
                        return p.strs2KeyCodes = function(c) {
                            for (var l = [], i = 0; i < c.length; i++)
                                l.push(m.keyCodeMap[c[i]]);
                            return l
                        }
                        ,
                        p.prototype.destroy = function() {
                            this.map = null,
                            this.keyMap = null,
                            document.removeEventListener("keydown", this.keyDownHandler),
                            document.removeEventListener("keyup", this.keyUpHandler)
                        }
                        ,
                        p.prototype.on = function(c, l) {
                            this.map[c.join("+")] = {
                                keys: c,
                                callback: l
                            }
                        }
                        ,
                        p.prototype.off = function(c) {
                            delete this.map[c.join("+")]
                        }
                        ,
                        p.prototype.ons = function(c, l) {
                            this.on(p.strs2KeyCodes(c), l)
                        }
                        ,
                        p.prototype.offs = function(c) {
                            this.off(p.strs2KeyCodes(c))
                        }
                        ,
                        p.prototype.isDown = function(c) {
                            return this.keyMap[c]
                        }
                        ,
                        p.prototype.isDowns = function(c) {
                            return this.isDown(p.strs2KeyCodes([c])[0])
                        }
                        ,
                        p.prototype.match = function(c) {
                            for (var l = 0, i; l < c.length; l++)
                                if (i = c[l],
                                !this.keyMap[i])
                                    return !1;
                            return !0
                        }
                        ,
                        p
                    }();
                    m.Hotkey = f
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p(c) {
                            var l = this;
                            this.main = c,
                            this.hotKey = new m.Hotkey,
                            this.onTargetHandle = this.targetHandle.bind(this),
                            document.addEventListener("mousedown", this.onTargetHandle),
                            document.addEventListener("touchstart", this.onTargetHandle),
                            this.bindKey(["delete"], function() {
                                l.main.deleteSelects()
                            }),
                            this.bindKey(["backspace"], function() {
                                l.main.deleteSelects()
                            }),
                            this.bindKey(["ctrl", "a"], function() {
                                l.main.selectAll()
                            }),
                            this.bindKey(["ctrl", "A"], function() {
                                l.main.selectAll()
                            })
                        }
                        return p.prototype.destroy = function() {
                            document.removeEventListener("mousedown", this.onTargetHandle),
                            document.removeEventListener("touchstart", this.onTargetHandle),
                            this.main = null,
                            this.hotKey.destroy(),
                            this.hotKey = null,
                            this.onTargetHandle = null
                        }
                        ,
                        p.prototype.bindKey = function(c, l) {
                            var i = this;
                            this.hotKey.ons(c, function() {
                                i.lastTarget !== i.main.renderer.view || document.activeElement instanceof HTMLInputElement || l()
                            })
                        }
                        ,
                        p.prototype.targetHandle = function(c) {
                            this.lastTarget = c.target
                        }
                        ,
                        p
                    }();
                    m.HotkeyPlugin = f
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    m.keyCodeMap = {
                        backspace: 8,
                        tab: 9,
                        enter: 13,
                        shift: 16,
                        ctrl: 17,
                        alt: 18,
                        space: 32,
                        pageup: 33,
                        pagedown: 34,
                        end: 35,
                        home: 36,
                        left: 37,
                        up: 38,
                        right: 39,
                        down: 40,
                        insert: 45,
                        delete: 46,
                        0: 48,
                        1: 49,
                        2: 50,
                        3: 51,
                        4: 52,
                        5: 53,
                        6: 54,
                        7: 55,
                        8: 56,
                        9: 57,
                        num0: 97,
                        num1: 98,
                        num2: 99,
                        num3: 100,
                        num4: 101,
                        num5: 102,
                        num6: 103,
                        num7: 104,
                        num8: 105,
                        num9: 106,
                        f1: 112,
                        f2: 113,
                        f3: 114,
                        f4: 115,
                        f5: 116,
                        f6: 117,
                        f7: 118,
                        f8: 119,
                        f9: 120,
                        f10: 121,
                        f11: 122,
                        f12: 123,
                        A: 65,
                        B: 66,
                        C: 67,
                        D: 68,
                        E: 69,
                        F: 70,
                        G: 71,
                        H: 72,
                        I: 73,
                        J: 74,
                        K: 75,
                        L: 76,
                        M: 77,
                        N: 78,
                        O: 79,
                        P: 80,
                        Q: 81,
                        R: 82,
                        S: 83,
                        T: 84,
                        U: 85,
                        V: 86,
                        W: 87,
                        X: 88,
                        Y: 89,
                        Z: 90,
                        a: 97,
                        b: 98,
                        c: 99,
                        d: 100,
                        e: 101,
                        f: 102,
                        g: 103,
                        h: 104,
                        i: 105,
                        j: 106,
                        k: 107,
                        l: 108,
                        m: 109,
                        n: 110,
                        o: 111,
                        p: 112,
                        q: 113,
                        r: 114,
                        s: 115,
                        t: 116,
                        u: 117,
                        v: 118,
                        w: 119,
                        x: 120,
                        y: 121,
                        z: 122
                    }
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {}
                        return p.prototype.capture = function() {}
                        ,
                        p
                    }();
                    m.ScreenshotPlugin = f
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p(c, l) {
                            this.cursorMap = {
                                pointer: ["pinch", 12, 12],
                                move: ["drag", 12, 12],
                                "ns-resize": ["stretch", 12, 12],
                                rotate: ["rotate", 13, 13]
                            },
                            this.app = c,
                            this.path = l
                        }
                        return p.prototype.destroy = function() {
                            this.app = null
                        }
                        ,
                        p.prototype.update = function() {
                            var c = this.app.renderer.plugins.interaction.currentCursorMode;
                            if (this.currentCursorMode !== c) {
                                this.currentCursorMode = c;
                                var l = this.cursorMap[this.currentCursorMode];
                                l && (this.app.view.style.cursor = "url(" + this.path + "/" + l[0] + ".cur) " + l[1] + "  " + l[2] + ", auto")
                            }
                        }
                        ,
                        p
                    }();
                    m.CursorManager = f
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {
                            this.data = {}
                        }
                        return p.prototype.destroy = function() {
                            this.data = null
                        }
                        ,
                        p.prototype.initData = function(c) {
                            for (var l in this.data = c,
                            this.data)
                                this.data.hasOwnProperty(l) && (this.data[l].id = l)
                        }
                        ,
                        p.prototype.getEqConfData = function(c) {
                            var l = {
                                id: c,
                                className: c,
                                noTexture: !1,
                                skins: this.getSkins(c),
                                initData: null,
                                lanKey: "",
                                insIdx: 0
                            };
                            if (this.data[c]) {
                                var i = this.data[c];
                                l.initData = i.initData,
                                l.noTexture = i.noTexture || !1,
                                i.className && (l.className = i.className),
                                i.lanKey && (l.lanKey = i.lanKey)
                            }
                            return l
                        }
                        ,
                        p.prototype.getSkins = function(c) {
                            var l = this.data[c];
                            if (!l)
                                return [c];
                            if (l.noTexture)
                                return [];
                            var i = [];
                            if (l.eqs)
                                for (var e = 0; e < l.eqs.length; e++)
                                    i.push.apply(i, this.getSkins(l.eqs[e]));
                            else
                                l.className && l.className !== c ? i.push.apply(i, this.getSkins(l.className)) : i.push(c);
                            return i
                        }
                        ,
                        p
                    }();
                    m.LibDataManager = f
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.utils.NBArrayUtil
                      , p = function() {
                        function c(l) {
                            this.selects = [],
                            this.lastSelectUID = -1,
                            this.main = l
                        }
                        return c.prototype.destroy = function() {
                            this.selects = null,
                            this.main = null
                        }
                        ,
                        c.prototype.unselectEq = function(l) {
                            l.isSelect = !1,
                            f.remove(this.selects, l)
                        }
                        ,
                        c.prototype.unselectAll = function() {
                            this.selects.forEach(function(l) {
                                l.isSelect = !1
                            }),
                            this.selects = []
                        }
                        ,
                        c.prototype.getSelects = function() {
                            return this.selects
                        }
                        ,
                        c.prototype.select = function(l, i) {
                            for (var e = this.getUidString(), t = 0; t < this.selects.length; t++)
                                this.selects[t].isSelect = !1;
                            i || (this.selects.length = 0);
                            for (var t = 0; t < l.length; t++) {
                                var a = l[t]
                                  , n = this.selects.indexOf(a);
                                n === -1 ? this.selects.push(a) : this.selects.splice(n, 1)
                            }
                            for (var t = 0; t < this.selects.length; t++)
                                this.selects[t].isSelect = !0;
                            var o = this.getUidString();
                            return e !== o
                        }
                        ,
                        c.prototype.moveSelectBy = function(l, i) {
                            for (var e = 0, t = this.selects.length, a; e < t; e++)
                                a = this.selects[e],
                                a.canMoveWith(this.selects) && a.moveBy(l, i)
                        }
                        ,
                        c.prototype.moveSelectTo = function(l, i) {
                            for (var e = 0, t = this.selects.length, a; e < t; e++)
                                a = this.selects[e],
                                a.canMoveWith(this.selects) && a.moveTo(l, i)
                        }
                        ,
                        c.prototype.selectAll = function() {
                            var l = [];
                            this.main.forEachEq(function(i) {
                                l.push(i)
                            }),
                            this.select(l, !1)
                        }
                        ,
                        c.prototype.deleteSelects = function() {
                            for (var l; this.selects.length; )
                                l = this.selects.pop(),
                                l && (l.isSelect = !1,
                                l.removed())
                        }
                        ,
                        c.prototype.forEachSelect = function(l) {
                            this.selects.forEach(l)
                        }
                        ,
                        c.prototype.isSelectChanged = function() {
                            var l = this.getCurrentSelectUID()
                              , i = l !== this.lastSelectUID;
                            return this.lastSelectUID = l,
                            i
                        }
                        ,
                        c.prototype.resetLastSelectUID = function() {
                            this.lastSelectUID = -1
                        }
                        ,
                        c.prototype.getCurrentSelectUID = function() {
                            return this.selects.length === 1 ? this.selects[0].UID : -1
                        }
                        ,
                        c.prototype.getUidString = function() {
                            var l = this.selects.concat();
                            return l.sort(function(i, e) {
                                return i.UID - e.UID
                            }),
                            l.map(function(i) {
                                return i.UID
                            }).join(",")
                        }
                        ,
                        c
                    }();
                    m.SelectManager = p
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.round
                  , f = Math.min
                  , p = Math.max;
                (function(c) {
                    var l = function() {
                        function i(e, t, a) {
                            var n = this;
                            this.resize = function() {
                                var o = n.getPrintSize()
                                  , s = o.width / n.defaultSize.width
                                  , r = o.height / n.defaultSize.height
                                  , u = p(f(s, r), 1e-10)
                                  , d = {
                                    width: 2 * m(o.width / u / 2),
                                    height: 2 * m(o.height / u / 2)
                                };
                                n.app.renderer.resize(d.width, d.height),
                                n.app.stage.x = o.width * n.anchor.x / u - n.defaultSize.width * n.anchor.x,
                                n.app.stage.y = o.height * n.anchor.y / u - n.defaultSize.height * n.anchor.y,
                                n.canvas.style.width = o.width + "px",
                                n.canvas.style.height = o.height + "px",
                                n.outerScale = u * n.app.renderer.resolution
                            }
                            ,
                            this.app = e,
                            this.canvas = e.view,
                            this.defaultSize = t,
                            this.anchor = a || {
                                x: .5,
                                y: .5
                            },
                            window.addEventListener("resize", this.resize),
                            this.resize()
                        }
                        return i.prototype.destroy = function() {
                            this.canvas = null,
                            window.removeEventListener("resize", this.resize)
                        }
                        ,
                        i.prototype.getDesignSize = function() {
                            return {
                                width: this.canvas.width,
                                height: this.canvas.height
                            }
                        }
                        ,
                        i.prototype.getPrintSize = function() {
                            var e = this.canvas.parentNode || document.body
                              , t = e.getBoundingClientRect();
                            return {
                                width: t.width,
                                height: t.height
                            }
                        }
                        ,
                        i.prototype.setDesignSize = function(e) {
                            this.canvas.width = e.width,
                            this.canvas.height = e.height
                        }
                        ,
                        i.prototype.setPrintSize = function(e) {
                            this.canvas.style.width = e.width + "px",
                            this.canvas.style.height = e.height + "px"
                        }
                        ,
                        i
                    }();
                    c.ResizeManager = l
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function l() {}
                        return l.load = function(i, e, t, a) {
                            l.map[e] = l.map[e] || new p,
                            l.map[e].load(i, e, new m.CallBackItem(t,a))
                        }
                        ,
                        l.loadAll = function(i, e, t, a) {
                            var n = new m.CallBackItem(t,a)
                              , o = []
                              , s = e.length;
                            if (s === 0)
                                return void n.callBack(o);
                            for (var r = 0, u = function(C) {
                                r++,
                                o.push(C),
                                r === s && n.callBack(o)
                            }, d = 0, y; d < e.length; d++)
                                y = e[d],
                                l.map[y] = l.map[y] || new p,
                                l.map[y].load(i, y, new m.CallBackItem(u,null))
                        }
                        ,
                        l.getConfData = function(i) {
                            return l.map[i] ? l.map[i].confData : null
                        }
                        ,
                        l.hasSkin = function(i) {
                            return l.map[i] && l.map[i].confData
                        }
                        ,
                        l.map = {},
                        l
                    }();
                    m.LoadSkinPlugin = f;
                    var p = function() {
                        function l() {
                            this.queue = [],
                            this._confData = null
                        }
                        return Object.defineProperty(l.prototype, "confData", {
                            get: function() {
                                return this._confData
                            },
                            enumerable: !0,
                            configurable: !0
                        }),
                        l.prototype.destroy = function() {
                            this.queue = null,
                            this._confData = null,
                            this.className = null
                        }
                        ,
                        l.prototype.load = function(i, e, t) {
                            this.className = e,
                            this.confData ? t.callBack(this.confData) : (this.queue.push(t),
                            !this.loader && (this.loader = new c(i,e,this.loaded,this)))
                        }
                        ,
                        l.prototype.loaded = function(i) {
                            this._confData = i,
                            this.loader = null,
                            this.queue.forEach(function(e) {
                                e.callBack(i)
                            }),
                            this.queue = []
                        }
                        ,
                        l
                    }()
                      , c = function() {
                        function l(i, e, t, a) {
                            var n = this;
                            this.UID = l.COUNTING++,
                            this.destroyed = !1,
                            this.callBackItem = new m.CallBackItem(t,a);
                            var o = this.joinPath(i, e + "_conf.json");
                            $.getJSON(o, function(s, r) {
                                r === "success" ? (n.confData = s,
                                n.loaded()) : n.loadError()
                            }),
                            this.pixiLoader = new PIXI.loaders.Loader(i),
                            this.pixiLoader.add(e + ".json"),
                            this.pixiLoader.load(function(s, r) {
                                n.resources = r,
                                n.loaded()
                            }),
                            this.pixiLoader.onError.add(function() {
                                n.loadError()
                            })
                        }
                        return l.prototype.destroy = function() {
                            this.destroyed = !0,
                            this.baseUrl = null,
                            this.className = null,
                            this.callBackItem = null,
                            this.pixiLoader = null,
                            this.confData = null
                        }
                        ,
                        l.prototype.loaded = function() {
                            this.confData && this.resources && (this.callBackItem.callBack(this.confData),
                            this.destroy())
                        }
                        ,
                        l.prototype.loadError = function() {
                            this.destroyed || (this.callBackItem.callBack(null),
                            this.destroy())
                        }
                        ,
                        l.prototype.joinPath = function(i, e) {
                            return i + e
                        }
                        ,
                        l.COUNTING = 1,
                        l
                    }()
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = PIXI.Container
                      , p = PIXI.Sprite
                      , c = PIXI.extras.AnimatedSprite
                      , l = PIXI.Texture
                      , i = h.pixiExtras.NBMovieClip
                      , e = PIXI.Graphics
                      , t = h.pixiExtras.GraphicsUtil
                      , a = h.pixiExtras.NBSimpleButton
                      , n = function() {
                        function s() {}
                        return s.parse = function(r, u, d) {
                            var y = new o(r,u,d);
                            r.capacityVertex = y.capacityVertex,
                            r.napeData = y.napeData,
                            y.destroy()
                        }
                        ,
                        s
                    }();
                    m.ParseConfigDataPlugin = n;
                    var o = function() {
                        function s(r, u, d) {
                            this.capacityVertex = [],
                            this.napeData = {},
                            this.textAry = [],
                            this.buttonAry = [],
                            this.parentEq = r,
                            this.createChildFromData(r, u, d)
                        }
                        return s.prototype.destroy = function() {
                            var r = this;
                            this.capacityVertex = null,
                            this.napeData = null,
                            this.textAry.forEach(function(u) {
                                r.parentEq.removeText(u)
                            }),
                            this.textAry = null,
                            this.buttonAry.forEach(function(u) {
                                u.removed()
                            }),
                            this.buttonAry = null
                        }
                        ,
                        s.prototype.createChildFromData = function(r, u, d) {
                            var y = this;
                            this.forEachItem(u, function(g, C) {
                                y.createDisplayObjectFromData(r, C, d)
                            })
                        }
                        ,
                        s.prototype.createDisplayObjectFromData = function(r, u, d) {
                            if (u.capacityVertex)
                                return void (this.capacityVertex = u.capacityVertex);
                            if (u.napeData)
                                return void (u.napeData.linkage === "nape.Polygon" || u.napeData.linkage === "nape.Polygon2" ? this.napeData.polyData = u.napeData.polyData : u.napeData.linkage === "nape.Polygon.saveData" && (this.napeData.saveData[u.name] = u.napeData.polyData));
                            switch (u.type) {
                            case "sprite":
                                this.createSprite(r, u, d);
                                break;
                            case "bitmap":
                                this.createBitmap(r, u, d);
                                break;
                            case "movie":
                                this.createMovieClip(r, u, d);
                                break;
                            case "nbMovie":
                                console.log("11"),
                                this.createNBMovieClip(r, u, d);
                                break;
                            case "text":
                                this.createText(r, u, d);
                                break;
                            case "button":
                                this.createButton(r, u, d);
                                break;
                            case "shape":
                                this.createShape(r, u, d);
                                break
                            }
                        }
                        ,
                        s.prototype.isEmptyStr = function(r) {
                            return !r || r === ""
                        }
                        ,
                        s.prototype.createBitmap = function(r, u, d) {
                            var y = new PIXI.Sprite(PIXI.Texture.fromFrame(d + "/" + u.libName));
                            r.addChild(y),
                            this.setName(y, u.libName),
                            this.setParam(y, u)
                        }
                        ,
                        s.prototype.setName = function(r, u) {
                            this.isEmptyStr(u) || (r.name = u)
                        }
                        ,
                        s.prototype.setChildName = function(r, u, d) {
                            this.isEmptyStr(d) || (r[d] = u,
                            u.name = d)
                        }
                        ,
                        s.prototype.createSprite = function(r, u, d) {
                            var y = new f;
                            r.addChild(y),
                            this.setChildName(r, y, u.name),
                            this.setParam(y, u),
                            this.createChildFromData(y, u, d)
                        }
                        ,
                        s.prototype.createNBMovieClip = function(r, u, d) {
                            var y = this;
                            console.log("\u521B\u5EFAmovieCLip");
                            var g = new i;
                            r.addChild(g),
                            this.setChildName(r, g, u.name),
                            this.setParam(g, u),
                            this.forEachItem(u, function(C, T) {
                                var A = new f;
                                y.createChildFromData(A, T, d),
                                A.children.forEach(function(S) {
                                    g.insertDisplayObjectToFrame(S, C, null)
                                })
                            }),
                            g.gotoAndStop(0)
                        }
                        ,
                        s.prototype.forEachItem = function(r, u) {
                            for (var d = 0; r[d]; )
                                d++;
                            for (; 0 < d; )
                                d--,
                                u(d, r[d])
                        }
                        ,
                        s.prototype.createMovieClip = function(r, u, d) {
                            var y = [];
                            this.forEachItem(u, function(C, T) {
                                y.push(l.fromFrame(d + "/" + T.libName))
                            });
                            var g = new c(y);
                            r.addChild(g),
                            this.setParam(g, u)
                        }
                        ,
                        s.prototype.createText = function(r, u, d) {
                            var y = this.parentEq.getText(u.txt, {
                                font: u.f,
                                wordWrap: !0,
                                wordWrapWidth: u.w,
                                fill: u.c,
                                align: u.a
                            });
                            this.textAry.push(y),
                            r.addChild(y),
                            this.setParam(y, u),
                            this.setChildName(r, y, u.name),
                            u.a === "center" ? (y.anchor.x = .5,
                            y.x += .5 * u.w) : u.a === "right" && (y.anchor.x = 1,
                            y.x += u.w)
                        }
                        ,
                        s.prototype.createButton = function(r, u, d) {
                            var y = new a({
                                disabledSkin: p.fromFrame(d + "/" + u[0].libName),
                                downSkin: p.fromFrame(d + "/" + u[1].libName),
                                upSkin: p.fromFrame(d + "/" + u[2].libName)
                            },this.parentEq);
                            r.addChild(y),
                            this.buttonAry.push(y),
                            this.setChildName(r, y, u.name),
                            this.setParam(y, u)
                        }
                        ,
                        s.prototype.createShape = function(r, u, d) {
                            var y = new e;
                            t.draw(y, u.path),
                            r.addChild(y),
                            this.setParam(y, u)
                        }
                        ,
                        s.prototype.setParam = function(r, u) {
                            r.alpha = isNaN(u.a) ? 1 : u.a,
                            r.setTransform(u.x || 0, u.y || 0, u.sx || 1, u.sy || 1, u.r || 0, u.skewX || 0, u.skewY || 0)
                        }
                        ,
                        s
                    }()
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.pow
                  , f = Math.sqrt;
                (function(p) {
                    var c = PIXI.Point
                      , l = function(e) {
                        function t() {
                            return e !== null && e.apply(this, arguments) || this
                        }
                        return U(t, e),
                        t.prototype.destroy = function() {
                            e.prototype.destroy.call(this)
                        }
                        ,
                        t.prototype.onMouseDown = function(a) {
                            if (e.prototype.onMouseDown.call(this, a),
                            this.isEquipment(a.target)) {
                                var n = this.getEqUnderPoint(a.target, a.data.global);
                                if (0 < n.length) {
                                    var o = n[0];
                                    this.map[a.data.identifier] = new i(n[0],a.data.identifier,a.data.global.clone(),this.global2view(a.data.global),new c(o.x,o.y)),
                                    o.dragStart()
                                }
                            }
                        }
                        ,
                        t.prototype.onMouseMove = function(a) {
                            var n = this;
                            e.prototype.onMouseMove.call(this, a);
                            var o = this.map[a.data.identifier];
                            if (o) {
                                var s = a.data.global
                                  , r = s.x - o.globalPos.x
                                  , u = s.y - o.globalPos.y
                                  , d = f(m(r, 2) + m(u, 2)) * this.main.getOuterScale()
                                  , y = 2 * this.main.dpiScale;
                                if (d < y)
                                    return;
                                var g = this.global2view(s);
                                r = g.x - o.localPos.x,
                                u = g.y - o.localPos.y,
                                o.eq.isSelect ? (this.main.forEachSelect(function(C) {
                                    C.dragMove(n.main.getSelects())
                                }),
                                this.main.moveSelectBy(r, u)) : (o.eq.dragMove(),
                                o.eq.moveBy(r, u)),
                                o.localPos = g,
                                o.moved = !0
                            }
                        }
                        ,
                        t.prototype.onMouseUp = function(a) {
                            if (e.prototype.onMouseUp.call(this, a),
                            this.map[a.data.identifier]) {
                                var n = this.map[a.data.identifier];
                                n && (n.moved && a.stopPropagation(),
                                n.eq.isSelect ? this.main.forEachSelect(function(o) {
                                    o.dragEnd()
                                }) : n.eq.dragEnd(),
                                delete this.map[a.data.identifier])
                            }
                        }
                        ,
                        t
                    }(p.TouchPluginBase);
                    p.TouchDragPlugin = l;
                    var i = function() {
                        function e(t, a, n, o, s) {
                            this.moved = !1,
                            this.eq = t,
                            this.id = a,
                            this.globalPos = n,
                            this.localPos = o,
                            this.initPos = s
                        }
                        return e
                    }()
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p(c) {
                            var l = this;
                            this.plugins = [],
                            this.mouseDownHandler = function(i) {
                                l.plugins.forEach(function(e) {
                                    e.mouseP = i.data.global.clone(),
                                    e.main.isTouchDevice || i.data.button === 0 ? e.onMouseDown(i) : i.data.button
                                })
                            }
                            ,
                            this.rightDownHandler = function(i) {
                                l.plugins.forEach(function(e) {
                                    e.mouseP = i.data.global.clone(),
                                    e.main.isTouchDevice || i.data.button === 0 || i.data.button === 2 && e.onRightDown(i)
                                })
                            }
                            ,
                            this.mouseMoveHandler = function(i) {
                                l.plugins.forEach(function(e) {
                                    e.mouseP = i.data.global.clone(),
                                    e.onMouseMove(i)
                                })
                            }
                            ,
                            this.mouseUpHandler = function(i) {
                                l.plugins.forEach(function(e) {
                                    e.main.isTouchDevice || i.data.button === 0 ? e.onMouseUp(i) : i.data.button
                                })
                            }
                            ,
                            this.rightUpHandler = function(i) {
                                l.plugins.forEach(function(e) {
                                    e.main.isTouchDevice || i.data.button === 0 || i.data.button === 2 && e.onRightUp(i)
                                })
                            }
                            ,
                            this.globalRightUpHandler = function(i) {
                                l.plugins.forEach(function(e) {
                                    e.onGlobalRightUp(i)
                                })
                            }
                            ,
                            this.clickHandler = function(i) {
                                l.plugins.forEach(function(e) {
                                    l.main.isTouchDevice || i.data.button === 0 ? e.onClick(i) : i.data.button === 2 && e.onRightClick(i)
                                })
                            }
                            ,
                            this.mouseWheelHandler = function(i) {
                                l.plugins.forEach(function(e) {
                                    e.onMouseWheel(i)
                                })
                            }
                            ,
                            this.main = c,
                            this.main.stage.addEventListener("pointerdown", this.mouseDownHandler),
                            this.main.stage.addEventListener("pointermove", this.mouseMoveHandler),
                            this.main.stage.addEventListener("pointerup", this.mouseUpHandler),
                            this.main.stage.addEventListener("pointerupoutside", this.mouseUpHandler),
                            this.main.stage.addEventListener("pointertap", this.clickHandler),
                            this.main.canvas.addEventListener("mousewheel", this.mouseWheelHandler),
                            this.main.renderer.plugins.interaction.addListener("rightdown", this.rightDownHandler),
                            this.main.renderer.plugins.interaction.addListener("rightup", this.rightUpHandler),
                            this.main.stage.addEventListener("pointerupoutside", this.globalRightUpHandler)
                        }
                        return p.prototype.destroy = function() {
                            this.main.stage.removeEventListener("pointerdown", this.mouseDownHandler),
                            this.main.stage.removeEventListener("pointermove", this.mouseMoveHandler),
                            this.main.stage.removeEventListener("pointerup", this.mouseUpHandler),
                            this.main.stage.removeEventListener("pointerupoutside", this.mouseUpHandler),
                            this.main.stage.removeEventListener("pointertap", this.clickHandler),
                            this.main.canvas.removeEventListener("mousewheel", this.mouseWheelHandler),
                            this.main.renderer.plugins.interaction.removeListener("rightdown", this.rightDownHandler),
                            this.main.renderer.plugins.interaction.removeListener("rightup", this.rightUpHandler),
                            this.main.stage.removeEventListener("pointerupoutside", this.globalRightUpHandler);
                            for (var c = 0; c < this.plugins.length; c++)
                                this.plugins[c].destroy();
                            this.plugins = null,
                            this.main = null
                        }
                        ,
                        p.prototype.registerPlugin = function(c) {
                            this.plugins.push(c)
                        }
                        ,
                        p.prototype.unRegisterPlugin = function(c, l) {
                            l === void 0 && (l = !0);
                            var i = this.plugins.indexOf(c);
                            i && (l && this.plugins[i].destroy(),
                            this.plugins.splice(i, 1))
                        }
                        ,
                        p
                    }();
                    m.TouchPluginManager = f
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.plugins.TouchPluginBase
                      , p = function(c) {
                        function l() {
                            var i = c !== null && c.apply(this, arguments) || this;
                            return i.roamMap = {},
                            i
                        }
                        return U(l, c),
                        l.prototype.destroy = function() {
                            c.prototype.destroy.call(this),
                            this.roamMap = null
                        }
                        ,
                        l.prototype.onMouseDown = function(i) {
                            c.prototype.onMouseDown.call(this, i),
                            i.target === this.main.stage && (this.map[i.data.identifier] = i.data.global.clone()),
                            this.roamMap[i.data.identifier] = i.data.global.clone()
                        }
                        ,
                        l.prototype.onMouseMove = function(i) {
                            if (c.prototype.onMouseMove.call(this, i),
                            !(1 < Object.keys(this.roamMap).length)) {
                                var e = this.map[i.data.identifier];
                                if (e) {
                                    var t = i.data.global;
                                    this.main.moveBy(t.x - e.x, t.y - e.y),
                                    this.main.select([], !1),
                                    e.x = t.x,
                                    e.y = t.y
                                }
                            }
                        }
                        ,
                        l.prototype.onMouseUp = function(i) {
                            c.prototype.onMouseUp.call(this, i),
                            this.map[i.data.identifier] && delete this.map[i.data.identifier],
                            this.roamMap[i.data.identifier] && delete this.roamMap[i.data.identifier]
                        }
                        ,
                        l
                    }(f);
                    m.TouchRoamPlugin = p
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.abs;
                (function(p) {
                    var c = PIXI.Rectangle
                      , l = h.plugins.TouchPluginBase
                      , i = h.pixiExtras.RectangleUtil
                      , e = function(a) {
                        function n() {
                            return a !== null && a.apply(this, arguments) || this
                        }
                        return U(n, a),
                        n.prototype.destroy = function() {
                            a.prototype.destroy.call(this)
                        }
                        ,
                        n.prototype.onClick = function(o) {
                            a.prototype.onClick.call(this, o),
                            this.isEquipment(o.target) ? this.main.eqTap(o.target, o.data.global, o.data.originalEvent.ctrlKey) : this.main.select([], !1)
                        }
                        ,
                        n.prototype.onRightDown = function(o) {
                            if (a.prototype.onRightDown.call(this, o),
                            !this.map[o.data.identifier]) {
                                var s = this.global2view(o.data.global)
                                  , r = new t(s,s.clone());
                                r.globalP0 = o.data.global.clone(),
                                r.globalP1 = r.globalP0.clone(),
                                this.map[o.data.identifier] = r,
                                this.main.addSelectRect(r.gra)
                            }
                        }
                        ,
                        n.prototype.onRightUp = function(o) {
                            if (a.prototype.onRightUp.call(this, o),
                            this.map[o.data.identifier]) {
                                var s = this.map[o.data.identifier];
                                delete this.map[o.data.identifier],
                                s.moved && o.stopPropagation(),
                                s.destroy()
                            }
                        }
                        ,
                        n.prototype.onGlobalRightUp = function(o) {
                            this.onRightUp(o)
                        }
                        ,
                        n.prototype.onMouseMove = function(o) {
                            if (a.prototype.onMouseMove.call(this, o),
                            this.map[o.data.identifier]) {
                                var s = this.map[o.data.identifier];
                                s.p1 = this.global2view(o.data.global),
                                s.globalP1 = o.data.global.clone(),
                                s.update(),
                                this.selectByRect(s.globalRect, !1),
                                s.moved = !0
                            }
                        }
                        ,
                        n.prototype.selectByRect = function(o, s) {
                            s === void 0 && (s = !1);
                            var r = new c
                              , u = o
                              , d = [];
                            this.main.forEachEq(function(y) {
                                s ? i.containsRect(u, y.getBounds(!0, r)) && d.push(y) : i.intersects(u, y.getBounds(!0, r), !1) && d.push(y)
                            }),
                            this.main.select(d, !1)
                        }
                        ,
                        n
                    }(l);
                    p.TouchSelectPlugin = e;
                    var t = function() {
                        function a(n, o) {
                            this.moved = !1,
                            this.p0 = n,
                            this.p1 = o,
                            this.gra = new PIXI.Graphics,
                            this.rect = new c,
                            this.globalRect = new c
                        }
                        return a.prototype.update = function() {
                            this.calcRect(this.rect, this.p0, this.p1),
                            this.calcRect(this.globalRect, this.globalP0, this.globalP1),
                            this.gra.clear(),
                            this.gra.lineStyle(2, 16777215, 1),
                            this.gra.beginFill(16777215, .15),
                            this.gra.drawRect(this.rect.x, this.rect.y, this.rect.width, this.rect.height),
                            this.gra.endFill()
                        }
                        ,
                        a.prototype.destroy = function() {
                            this.gra && this.gra.parent && this.gra.parent.removeChild(this.gra)
                        }
                        ,
                        a.prototype.calcRect = function(n, o, s) {
                            return n.x = m(o.x, s.x),
                            n.y = m(o.y, s.y),
                            n.width = f(o.x - s.x),
                            n.height = f(o.y - s.y),
                            n
                        }
                        ,
                        a
                    }()
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.max;
                (function(p) {
                    var c = h.utils.NBPointUtils
                      , l = function(e) {
                        function t() {
                            var a = e !== null && e.apply(this, arguments) || this;
                            return a.zoomAry = [],
                            a
                        }
                        return U(t, e),
                        t.prototype.destroy = function() {
                            e.prototype.destroy.call(this)
                        }
                        ,
                        t.prototype.onMouseWheel = function(a) {
                            e.prototype.onMouseWheel.call(this, a);
                            var n = a.wheelDelta ? a.wheelDelta / 120 : -a.detail / 3
                              , o = m(f(1 + .1 * n, .1), 2);
                            this.main.scaleBy(o, this.mouseP)
                        }
                        ,
                        t.prototype.onMouseDown = function(a) {
                            e.prototype.onMouseDown.call(this, a),
                            a.target === this.main.stage && (this.removeItem(a.data.identifier),
                            this.zoomAry.push(new i(a.data.identifier,a.data.global.clone(),a.data.global.clone(),a)))
                        }
                        ,
                        t.prototype.onMouseMove = function(a) {
                            e.prototype.onMouseMove.call(this, a);
                            var n = this.findItem(a.data.identifier);
                            n && (n.curPos = a.data.global.clone(),
                            this.tryZoom(),
                            n.lastPos = n.curPos.clone())
                        }
                        ,
                        t.prototype.onMouseUp = function(a) {
                            e.prototype.onMouseUp.call(this, a),
                            this.removeItem(a.data.identifier)
                        }
                        ,
                        t.prototype.tryZoom = function() {
                            if (!(2 > this.zoomAry.length)) {
                                var a = this.zoomAry[0]
                                  , n = this.zoomAry[1];
                                if (a.isChanged() || n.isChanged()) {
                                    var o = a.lastPos
                                      , s = a.curPos
                                      , r = n.lastPos
                                      , u = n.curPos
                                      , d = new PIXI.Point((s.x + u.x) / 2,(s.y + u.y) / 2)
                                      , y = c.distance(s, u) / c.distance(o, r);
                                    isFinite(y) && this.main.scaleBy(m(f(y, .5), 2), d)
                                }
                            }
                        }
                        ,
                        t.prototype.findItem = function(a) {
                            for (var n = 0; n < this.zoomAry.length; n++)
                                if (this.zoomAry[n].id === a)
                                    return this.zoomAry[n];
                            return null
                        }
                        ,
                        t.prototype.removeItem = function(a) {
                            for (var n = 0; n < this.zoomAry.length; n++)
                                if (this.zoomAry[n].id === a) {
                                    this.zoomAry.splice(n, 1);
                                    break
                                }
                        }
                        ,
                        t
                    }(p.TouchPluginBase);
                    p.TouchZoomPlugin = l;
                    var i = function() {
                        function e(t, a, n, o) {
                            this.id = t,
                            this.lastPos = a,
                            this.curPos = n,
                            this.evt = o
                        }
                        return e.prototype.isChanged = function() {
                            return this.lastPos.x === this.curPos.x && this.lastPos.y === this.curPos.y
                        }
                        ,
                        e
                    }()
                }
                )(h.plugins || (h.plugins = {}))
            }
            )(v || (v = {}));
            var U = function() {
                var h = function(f, p) {
                    return h = Object.setPrototypeOf || {
                        __proto__: []
                    }instanceof Array && function(c, l) {
                        c.__proto__ = l
                    }
                    || function(c, l) {
                        for (var i in l)
                            l.hasOwnProperty(i) && (c[i] = l[i])
                    }
                    ,
                    h(f, p)
                };
                return function(m, f) {
                    function p() {
                        this.constructor = m
                    }
                    h(m, f),
                    m.prototype = f === null ? Object.create(f) : (p.prototype = f.prototype,
                    new p)
                }
            }(), v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function() {
                            function c() {}
                            return c.createChemicalId = function(l, i) {
                                return l + "_" + (i || 0)
                            }
                            ,
                            c.isAcid = function(l) {
                                for (var i = l.ions, e = 0; e < i.length; e++)
                                    if (i[e].formula === "H")
                                        return !0;
                                return !1
                            }
                            ,
                            c.isAlkali = function(l) {
                                for (var i = l.ions, e = 0; e < i.length; e++)
                                    if (i[e].formula === "OH")
                                        return !0;
                                return !1
                            }
                            ,
                            c.isH = function(l) {
                                return l && l.formula === "H" && l.valence === 1
                            }
                            ,
                            c.isOH = function(l) {
                                return l && l.formula === "OH" && l.valence === -1
                            }
                            ,
                            c.isH2O = function(l) {
                                return l && l.formula === "H2O" && l.valence === 0
                            }
                            ,
                            c
                        }();
                        f.ChemicalDataStructUtil = p
                    }
                    )(m.chemicalReaction || (m.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.sqrt;
                (function(f) {
                    (function(p) {
                        var c = function() {
                            function l() {}
                            return l.prototype.destroy = function() {
                                this.world = null
                            }
                            ,
                            l.prototype.calCulate = function(i, e) {
                                this.world = i,
                                this.dt = e,
                                this.engine = i.engine,
                                this.selfCalCulate(),
                                this.world = null,
                                this.dt = 0,
                                this.engine = null
                            }
                            ,
                            l.prototype.selfCalCulate = function() {}
                            ,
                            l.prototype.createChemicalData = function(i, e, t) {
                                t === void 0 && (t = 0);
                                var a = this.world.engine.createChemicalData(i, e, "l", t);
                                return a.dataStruct || console.log("\u836F\u54C1\u4E0D\u5B58\u5728\uFF0C\u9700\u8981\u5728\u836F\u54C1\u8868\u91CC\u914D\u7F6E\uFF1A", i, e),
                                a
                            }
                            ,
                            l.prototype.kabKsp = function(i, e, t) {
                                var a = i.getVolumeL()
                                  , n = 1 / a
                                  , o = e.ions[0]
                                  , s = e.ions[1]
                                  , r = o.count
                                  , u = s.count
                                  , d = o.chemicalId
                                  , y = s.chemicalId
                                  , g = i.getChemical(d) || this.createChemicalData(o.formula, o.valence, 0)
                                  , C = g.mol * n
                                  , T = i.getChemical(y) || this.createChemicalData(s.formula, s.valence, 0)
                                  , A = T.mol * n
                                  , S = 0;
                                if (t === 0) {
                                    var B = e.dataStruct.kab
                                      , b = i.getMolarConcentration(e.chemicalId)
                                      , P = 0;
                                    S = p.CalculatorUtil.kabIterator(b, C, r, A, u, P, B)
                                } else if (t === 1) {
                                    var I = e.ksp
                                      , P = C === 0 && A === 0 ? m(I) : 1;
                                    S = p.CalculatorUtil.kspIterator(C, r, A, u, P, I)
                                }
                                var O = S * a;
                                return O
                            }
                            ,
                            l.prototype.getSolubility = function(i) {
                                return i.phaseType === "g" && this.world.userData.ignoreGasSolubility ? 1e-10 * i.solubility : i.solubility
                            }
                            ,
                            l
                        }();
                        p.BaseCalculator = c
                    }
                    )(f.chemicalReaction || (f.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.pow;
                (function(f) {
                    (function(p) {
                        var c = function() {
                            function l(i, e) {
                                this.world = i,
                                this.dt = e,
                                this.engine = i.engine
                            }
                            return l.prototype.destroy = function() {
                                this.world = null,
                                this.engine = null
                            }
                            ,
                            l.prototype.getReactions = function() {
                                return []
                            }
                            ,
                            l.prototype.checkTemperaturnCondition = function(i, e) {
                                return i.temperature >= e.temperature[0] && i.temperature <= e.temperature[1]
                            }
                            ,
                            l.prototype.isReverseReact = function(i) {
                                return 0 < i.reverseCoefficient
                            }
                            ,
                            l.prototype.isHomogeneous = function(i) {
                                for (var e = 1; e < i.reactants.length; e++)
                                    if (i.reactants[e].phaseType === "s" || i.reactants[e].phaseType !== i.reactants[e - 1].phaseType)
                                        return !1;
                                return !0
                            }
                            ,
                            l.prototype.getReactionRate = function(i, e) {
                                var t = 0;
                                switch (i) {
                                case 0:
                                    t = p.ReactionRateUtil.getConstantRate(e);
                                    break;
                                case 1:
                                    t = p.ReactionRateUtil.getLinearRate(e);
                                    break;
                                case 2:
                                    t = p.ReactionRateUtil.getExpRate(e);
                                    break;
                                case 3:
                                    t = p.ReactionRateUtil.getInverseRate(e);
                                    break
                                }
                                return t
                            }
                            ,
                            l.prototype.getScaleByT = function(i) {
                                return m(3, i / 10)
                            }
                            ,
                            l.prototype.calcIonMoleReact = function(i) {
                                var e = this;
                                if (i.reaction.isIon) {
                                    var t = this.engine.reactionDataManager.getItemsByIonId(i.reaction.uid);
                                    t.forEach(function(a) {
                                        e.canReactMoleItem(i, a) && i.molecules.push(a)
                                    })
                                }
                            }
                            ,
                            l.prototype.canReactMoleItem = function(i, e) {
                                if (i.type === 0) {
                                    for (var t = 0; t < e.reactants.length; t++)
                                        if (!this.hasReactItem(i.phases[0], e.reactants[t]))
                                            return !1
                                } else
                                    for (var t = 0; t < e.reactants.length; t++)
                                        if (!this.hasReactItem(i.phases[0], e.reactants[t]) && !this.hasReactItem(i.phases[1], e.reactants[t]))
                                            return !1;
                                return !0
                            }
                            ,
                            l.prototype.hasReactItem = function(i, e) {
                                if (i.phaseType !== e.phaseType)
                                    return !1;
                                var t = this.engine.dataStructManager.getChemical(e.formula, e.valence);
                                if (t.ions.length) {
                                    for (var a = 0; a < t.ions.length; a++)
                                        if (!i.hasChemical(t.ions[a].chemicalId))
                                            return !1;
                                    return !0
                                }
                                return i.hasChemicalByFormula(e.formula, e.valence)
                            }
                            ,
                            l
                        }();
                        p.BaseReact = c
                    }
                    )(f.chemicalReaction || (f.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function() {
                            function c() {}
                            return c.equal = function(l, i) {
                                return l.phaseType === i.phaseType && l.formula === i.formula && l.valence === i.valence
                            }
                            ,
                            c.createChemicalId = function(l, i) {
                                return f.ChemicalDataStructUtil.createChemicalId(l, i)
                            }
                            ,
                            c.getSolventPolarity = function(l) {
                                if (!l)
                                    return 4;
                                switch (l.formula) {
                                case "H2O":
                                    return 0;
                                case "C2H5OH":
                                    return 1
                                }
                                return 3
                            }
                            ,
                            c
                        }();
                        f.ChemicalUtil = p
                    }
                    )(m.chemicalReaction || (m.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.max
                  , p = Math.pow
                  , c = Math.abs;
                (function(l) {
                    (function(i) {
                        var e = function(t) {
                            function a() {
                                return t !== null && t.apply(this, arguments) || this
                            }
                            return U(a, t),
                            a.prototype.calcReact = function() {
                                var n = this;
                                this.world.forEachPhase(function(o) {
                                    for (var s = 1, r = 10; 0 < s && 0 < r; )
                                        s -= n.calcReactInPhase(o),
                                        r--
                                })
                            }
                            ,
                            a.prototype.calcReactInPhase = function(n) {
                                for (var o = this.getPossibleReact(n), s = {}, r = 0; r < o.length; r++) {
                                    for (var u = o[r], d = u.item.reactants, y = 0, g; y < d.length; y++)
                                        g = d[y],
                                        s[g.chemicalId] = s[g.chemicalId] || 0,
                                        s[g.chemicalId] -= u.mol * g.coefficient;
                                    for (var C = u.item.products, y = 0, g; y < C.length; y++)
                                        g = C[y],
                                        s[g.chemicalId] = s[g.chemicalId] || 0,
                                        s[g.chemicalId] += u.mol * g.coefficient
                                }
                                for (var T = this.limitDtScale(n, s), A = 0; 0 < A && !this.isAvailable(n, s, o, T); )
                                    T *= .5,
                                    A--;
                                for (var S in s)
                                    if (s.hasOwnProperty(S)) {
                                        n.getChemical(S);
                                        var B = s[S] * T;
                                        if (0 > B)
                                            n.reduceChemical(S, -B);
                                        else {
                                            var b = i.PhaseUtil.createChemicalData0(n, S, n.phaseType, B);
                                            n.addChemical(b)
                                        }
                                    }
                                return T
                            }
                            ,
                            a.prototype.limitDtScale = function(n, o) {
                                var s = 1;
                                for (var r in o)
                                    if (o.hasOwnProperty(r)) {
                                        var u = n.getChemical(r);
                                        0 > o[r] && (s = m(s, -u.mol / o[r]))
                                    }
                                return s
                            }
                            ,
                            a.prototype.isAvailable = function(n, o, s, r) {
                                for (var u = 0; u < s.length; u++) {
                                    var d = s[u]
                                      , y = d.item;
                                    if (d.isReverse) {
                                        var g = y.reverseCoefficient
                                          , C = this.calcK(n, y, d.mol * r);
                                        if (this.canReverse(g, C))
                                            return !1
                                    }
                                }
                                return !0
                            }
                            ,
                            a.prototype.getPossibleReact = function(n) {
                                var o = this
                                  , s = [];
                                return this.engine.reactionDataManager.forEachItem(function(r) {
                                    if (o.canReactItem(n, r)) {
                                        var u = o.isReverseReact(r);
                                        (!u || o.canForward(r.reverseCoefficient, o.calcK(n, r, 0))) && s.push({
                                            phase: n,
                                            item: r,
                                            isReverse: u,
                                            mol: o.getReactMol(n, r)
                                        })
                                    }
                                }),
                                s
                            }
                            ,
                            a.prototype.getReactMol = function(n, o) {
                                for (var s = {
                                    c0: o.reactionRate.C0,
                                    k: o.reactionRate.k,
                                    dt: this.dt,
                                    temperature: n.temperature,
                                    per: 1,
                                    reactants: []
                                }, r = o.reactionRate.type === 0, u = 0, d; u < o.reactants.length; u++)
                                    d = n.getChemical(o.reactants[u].chemicalId),
                                    (r || !i.ChemicalDataStructUtil.isH2O(d)) && (s.reactants[u] = {
                                        mol: d.mol,
                                        v: r ? 1 : n.getVolumeL(),
                                        n: o.reactants[u].coefficient
                                    });
                                return this.getReactionRate(o.reactionRate.type, s)
                            }
                            ,
                            a.prototype.isBalance = function(n, o) {
                                return .01 > c(o - n) / n
                            }
                            ,
                            a.prototype.canForward = function(n, o) {
                                return !this.isBalance(n, o) && o < n
                            }
                            ,
                            a.prototype.canReverse = function(n, o) {
                                return !this.isBalance(n, o) && o > n
                            }
                            ,
                            a.prototype.calcK = function(n, o, s) {
                                var r = this.getConcentrationProduct(n, o.reactants, -s)
                                  , u = this.getConcentrationProduct(n, o.products, s)
                                  , d = u / r;
                                return d
                            }
                            ,
                            a.prototype.getConcentrationProduct = function(n, o, s) {
                                for (var r = 1, u = n.getVolumeL(), d = s / u, y = 0, g; y < o.length; y++)
                                    if (g = o[y],
                                    g.phaseType === n.phaseType && g.formula !== "H2O") {
                                        var C = n.getMolarConcentration(g.chemicalId) + d * g.coefficient
                                          , T = p(f(0, C), g.coefficient);
                                        r *= T
                                    }
                                return r
                            }
                            ,
                            a.prototype.canReactItem = function(n, o) {
                                return this.isHomogeneous(o) && this.checkConditions(n, o) && this.hasAllReactants(n, o.reactants)
                            }
                            ,
                            a.prototype.hasAllReactants = function(n, o) {
                                for (var s = 0; s < o.length; s++)
                                    if (!n.hasChemical(o[s].chemicalId))
                                        return !1;
                                return !0
                            }
                            ,
                            a.prototype.checkConditions = function(n, o) {
                                return !!this.checkTemperaturnCondition(n, o.conditions) && (!o.conditions.electrify || i.PhaseUtil.electrify(n)) && (!o.conditions.light || i.PhaseUtil.light(n))
                            }
                            ,
                            a
                        }(i.BaseReact);
                        i.SolutionReact = e
                    }
                    )(l.chemicalReaction || (l.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min;
                (function(f) {
                    (function(p) {
                        var c = function(l) {
                            function i() {
                                return l !== null && l.apply(this, arguments) || this
                            }
                            return U(i, l),
                            i.prototype.selfCalCulate = function() {
                                l.prototype.selfCalCulate.call(this),
                                this.world.sortByDensity(),
                                this.gasDissolve(),
                                this.solidDissolve(),
                                this.liquidDissolve(),
                                this.world.removeEmptyPhase()
                            }
                            ,
                            i.prototype.gasDissolve = function() {
                                var e = this
                                  , t = this.world.getPhaseByType("g")[0];
                                if (t) {
                                    var a = this.world.getPhaseByType("l")[0];
                                    a && (t.forEachChemical(function(n) {
                                        e.gasDissolveToSolution(n, a)
                                    }),
                                    t.removeEmptyChemical(),
                                    t.setDirty())
                                }
                            }
                            ,
                            i.prototype.liquidDissolve = function() {
                                for (var e = this.world.getPhaseByType("l"), t = 1; t < e.length; t++)
                                    this.liquidBalance(e[0], e[1])
                            }
                            ,
                            i.prototype.gasDissolveToSolution = function(e, t) {
                                e.solubility && this.dissolveBySolution(t, e)
                            }
                            ,
                            i.prototype.solidDissolve = function() {
                                var e = this.world.getPhaseByType("s");
                                if (e.length !== 0)
                                    for (var t = this.world.getPhaseByType("l"), a = 0, n; a < e.length; a++) {
                                        n = e[a];
                                        for (var o = t.map(function(r) {
                                            return {
                                                phase: r,
                                                per: 1
                                            }
                                        }), s = 0; s < o.length; s++)
                                            this.solidDissolveToSolution(n.chemicals[0], o[s].phase, o[s].per);
                                        n.removeEmptyChemical(),
                                        n.setDirty()
                                    }
                            }
                            ,
                            i.prototype.liquidBalance = function(e, t) {}
                            ,
                            i.prototype.getConnectPhase = function(e, t) {
                                var a = [];
                                return t.forEach(function(n) {
                                    var o = p.PhaseUtil.getContactArea(e, n);
                                    0 < o[2] && a.push({
                                        phase: n,
                                        per: o[2] / o[0]
                                    })
                                }),
                                a
                            }
                            ,
                            i.prototype.solidDissolveToSolution = function(e, t, a) {
                                switch (e.dissolveType) {
                                case p.DissolveType.Easy:
                                    this.dissolveBySolution(t, e, a);
                                    break;
                                case p.DissolveType.Hard:
                                    this.hardChemicalDissolve(e, t, a);
                                    break
                                }
                            }
                            ,
                            i.prototype.dissolveBySolution = function(e, t, a) {
                                a === void 0 && (a = 1);
                                var n = this.getSolubility(t)
                                  , o = p.PhaseUtil.getSolvent(e);
                                if (o) {
                                    var s = p.PhaseUtil.getTotalMol(e, o.chemicalId) * o.molecularMass
                                      , r = p.PhaseUtil.getTotalMol(e, t.chemicalId) * t.molecularMass
                                      , u = s * n;
                                    if (r < u) {
                                        var d = u - r;
                                        this.dissolve(e, t, d / t.molecularMass, a)
                                    }
                                }
                            }
                            ,
                            i.prototype.hardChemicalDissolve = function(e, t, a) {
                                var n = this.kabKsp(t, e, 1);
                                if (0 < n) {
                                    var o = t.getChemical(e.chemicalId);
                                    o && (n -= o.mol),
                                    0 < n && this.dissolve(t, e, n, a)
                                }
                            }
                            ,
                            i.prototype.dissolve = function(e, t, a, n) {
                                a = m(t.mol * n, a, t.mol),
                                e.addChemical(t.clone(a)),
                                t.mol -= a
                            }
                            ,
                            i
                        }(p.BaseCalculator);
                        p.DissolveCalculator = c
                    }
                    )(f.chemicalReaction || (f.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.sqrt;
                (function(p) {
                    (function(c) {
                        var l = h.utils.Constant
                          , i = function(e) {
                            function t() {
                                var a = e !== null && e.apply(this, arguments) || this;
                                return a.weakIonizeCalculater = new c.WeakChemicalIonize,
                                a.weakIonizeCalculaterOld = new c.WeakChemicalIonizeOld,
                                a.strongChemicalIonize = new c.StrongChemicalIonize,
                                a
                            }
                            return U(t, e),
                            t.prototype.destroy = function() {
                                this.weakIonizeCalculater.destroy(),
                                this.weakIonizeCalculaterOld.destroy(),
                                this.strongChemicalIonize.destroy(),
                                e.prototype.destroy.call(this)
                            }
                            ,
                            t.prototype.selfCalCulate = function() {
                                var a = this;
                                e.prototype.selfCalCulate.call(this),
                                this.world.forEachPhaseByType("l", function(n) {
                                    a.calCulateLiquid01(n)
                                })
                            }
                            ,
                            t.prototype.calCulateLiquid01 = function(a) {
                                var n = c.PhaseUtil.getSolvent(a);
                                n && (this.strongChemicalIonize.calculate(a),
                                this.weakIonizeCalculater.calculate(a),
                                this.weakIonizeCalculater.isSuccess ? (this.ionizeFeSCN3(a),
                                this.balanceByConcentration(a),
                                this.hardIonize(a),
                                this.h2oIonizeBalance(a),
                                this.freeHardIonize(a)) : this.weakIonizeCalculaterOld.calculate(a, n),
                                this.h2oIonizeBalance(a),
                                a.removeEmptyChemical())
                            }
                            ,
                            t.prototype.balanceByConcentration = function(a) {
                                for (var n = this.weakIonizeCalculater.targetConcentration, o = this.weakIonizeCalculater.chains, s = 0; s < o.length; s++) {
                                    var r = []
                                      , u = o[s]
                                      , d = u.chemicals[0].formula
                                      , y = this.engine.reactionDataManager.getReverseItem(d);
                                    y && r.push(this.getItemByReaction(n, d, y));
                                    for (var g = 0; g < u.chemicals.length - 1; g++)
                                        r.push(this.getItemByIonize(n, u.chemicals[g], u.chemicals[g + 1]));
                                    this.chemicalTransfer(a, r)
                                }
                            }
                            ,
                            t.prototype.chemicalTransfer = function(a, n) {
                                for (var o = 0, s = 0, r = 0; r < n.length; r++)
                                    n[r].mol0 > s && (o = r,
                                    s = n[r].mol0);
                                n[n.length - 1].mol1 > s && (o = n.length);
                                for (var r = 0; r < o; r++)
                                    this.ionizeReactForward(a, n[r]);
                                for (var r = o; r < n.length; r++)
                                    this.ionizeReactReverce(a, n[r])
                            }
                            ,
                            t.prototype.ionizeReactReverce = function(a, n) {
                                for (var o = this.getChemical(a, n.chemical1.formula, n.chemical1.valence), s = o.mol, r = n.mol1, u = r - s, d = 0; d < n.reactants.length; d++) {
                                    var y = n.reactants[d]
                                      , g = this.getChemical(a, y.formula, y.valence);
                                    g.mol -= u
                                }
                                for (var d = 0; d < n.products.length; d++) {
                                    var C = n.products[d]
                                      , g = this.getChemical(a, C.formula, C.valence);
                                    g.mol += u
                                }
                            }
                            ,
                            t.prototype.ionizeReactForward = function(a, n) {
                                for (var o = this.getChemical(a, n.chemical0.formula, n.chemical0.valence), s = o.mol, r = n.mol0, u = s - r, d = 0; d < n.reactants.length; d++) {
                                    var y = n.reactants[d]
                                      , g = this.getChemical(a, y.formula, y.valence);
                                    g.mol -= u
                                }
                                for (var d = 0; d < n.products.length; d++) {
                                    var C = n.products[d]
                                      , g = this.getChemical(a, C.formula, C.valence);
                                    g.mol += u
                                }
                            }
                            ,
                            t.prototype.getChemical = function(a, n, o) {
                                var s = a.getChemicalByFormula(n, o);
                                return s || (s = c.PhaseUtil.createChemicalData(a, n, o, a.phaseType, 0),
                                s.phase = a,
                                a.chemicals.push(s)),
                                s
                            }
                            ,
                            t.prototype.getItemByIonize = function(a, n, o) {
                                for (var s = {
                                    formula: n.formula,
                                    valence: n.valence,
                                    chemicalId: n.chemicalId,
                                    phaseType: "l",
                                    coefficient: 1
                                }, r = [], u = 0, d; u < n.ions.length; u++)
                                    d = n.ions[u],
                                    r.push({
                                        formula: d.formula,
                                        valence: d.valence,
                                        chemicalId: d.chemicalId,
                                        phaseType: "l",
                                        coefficient: d.count
                                    });
                                return {
                                    chemical0: {
                                        formula: n.formula,
                                        valence: n.valence,
                                        chemicalId: n.chemicalId,
                                        phaseType: "l"
                                    },
                                    chemical1: {
                                        formula: o.formula,
                                        valence: o.valence,
                                        chemicalId: o.chemicalId,
                                        phaseType: "l"
                                    },
                                    reactants: [s],
                                    products: r,
                                    mol0: a[n.chemicalId].mol,
                                    mol1: a[o.chemicalId].mol
                                }
                            }
                            ,
                            t.prototype.getItemByReaction = function(a, n, o) {
                                var s = c.ChemicalUtil.createChemicalId(n, 0)
                                  , r = c.ChemicalUtil.createChemicalId(o.formula, 0);
                                return {
                                    chemical0: {
                                        formula: o.formula,
                                        valence: 0,
                                        chemicalId: r,
                                        phaseType: "l"
                                    },
                                    chemical1: {
                                        formula: n,
                                        valence: 0,
                                        chemicalId: s
                                    },
                                    reactants: o.reaction.reactants,
                                    products: o.reaction.products,
                                    mol0: a[s].mol / o.k,
                                    mol1: a[s].mol
                                }
                            }
                            ,
                            t.prototype.hardIonize = function(a) {
                                var n = this.weakIonizeCalculater.targetConcentration
                                  , o = this.weakIonizeCalculater.kspTargetConcentration;
                                for (var s in o)
                                    if (o.hasOwnProperty(s)) {
                                        for (var r = o[s], u = a.world.dataStructManager.getHardSolubleChemicals(r.chemicalId), d = 0, y; d < u.length; d++)
                                            if (y = u[d],
                                            c.PhaseUtil.hasAllIons(a, y.ions)) {
                                                var g = r.chemicalId === y.ions[0].chemicalId
                                                  , C = g ? y.ions[0] : y.ions[1]
                                                  , T = g ? y.ions[1] : y.ions[0]
                                                  , A = this.getChemical(a, C.formula, C.valence)
                                                  , S = this.getChemical(a, T.formula, T.valence)
                                                  , B = A.mol
                                                  , b = S.mol
                                                  , P = r.mol
                                                  , I = -1
                                                  , O = n[T.chemicalId];
                                                O && T.chemicalId !== c.ChemicalIdConstant.H && T.chemicalId !== c.ChemicalIdConstant.OH && (I = O.mol);
                                                var D = (B - P) / C.count
                                                  , w = (b - I) / T.count
                                                  , R = I === -1 ? D : m(D, w);
                                                if (0 < R) {
                                                    A.mol -= R * C.count,
                                                    S.mol -= R * T.count;
                                                    var L = this.getChemical(a, y.formula, y.valence);
                                                    L.mol += R
                                                }
                                            }
                                    }
                            }
                            ,
                            t.prototype.freeHardIonize = function(a) {
                                for (var n = this.weakIonizeCalculater.kspTargetConcentration, o = a.chemicals.length, s; 0 <= o; o--)
                                    if (s = a.chemicals[o],
                                    !!s && s.valence !== 0 && !n[s.chemicalId]) {
                                        var r = this.engine.dataStructManager.getHardSolubleChemicals(s.chemicalId);
                                        if (r.length !== 0)
                                            for (var u = 0; u < r.length; u++) {
                                                var d = r[u]
                                                  , y = 0 < d.ions[0].valence * s.valence ? d.ions[0] : d.ions[1]
                                                  , g = 0 < d.ions[0].valence * s.valence ? d.ions[1] : d.ions[0];
                                                a.hasChemical(g.chemicalId) && this.reverceIonizeByKsp(a, d, y, g)
                                            }
                                    }
                            }
                            ,
                            t.prototype.reverceIonizeByKsp = function(a, n, o, s) {
                                var r = a.getMolarConcentration(o.chemicalId)
                                  , u = a.getMolarConcentration(s.chemicalId)
                                  , d = n.ksp
                                  , y = 0;
                                if (y = o.count === 1 && s.count === 1 ? this.getBalanceDx(r, u, d) : c.CalculatorUtil.kspIterator(r, o.count, u, s.count, f(d), d),
                                0 > y) {
                                    y = -y,
                                    y *= a.getVolumeL(),
                                    a.addChemical(this.createChemicalData(n.formula, n.valence, y));
                                    var g = a.getChemical(o.chemicalId)
                                      , C = a.getChemical(s.chemicalId);
                                    g.mol -= y,
                                    C.mol -= y
                                }
                            }
                            ,
                            t.prototype.getBalanceDx = function(a, n, o) {
                                var s = this.oneVariableQuadraticEquation(a, n, o)
                                  , r = s[0];
                                return 0 > a + r && (r = s[1]),
                                r
                            }
                            ,
                            t.prototype.oneVariableQuadraticEquation = function(a, n, o) {
                                var s = a + n
                                  , r = a * n - o
                                  , u = s * s - 4 * r
                                  , d = f(u)
                                  , y = -s + d
                                  , g = -s - d;
                                if (y === 0 && a * n !== o) {
                                    var C = 4 * r / (s * s);
                                    y = -s * (.5 * C + .125 * C * C),
                                    g = -2 * s - y
                                }
                                var T = 1 / 2;
                                return [y * T, g * T]
                            }
                            ,
                            t.prototype.h2oIonizeBalance = function(a) {
                                var n = a.getChemicalByFormula("H2O", 0)
                                  , o = a.getMolarConcentrationByFormula("H", 1)
                                  , s = a.getMolarConcentrationByFormula("OH", -1)
                                  , r = this.getBalanceDx(o, s, l.Kw);
                                r *= a.getVolumeL(),
                                0 < r ? (a.reduceChemical(c.ChemicalIdConstant.H2O, r),
                                a.addChemical(c.PhaseUtil.createChemicalData(a, "H", 1, "l", r)),
                                a.addChemical(c.PhaseUtil.createChemicalData(a, "OH", -1, "l", r))) : 0 > r && (r = -r,
                                a.addChemical(n.clone(r)),
                                a.reduceChemical(c.ChemicalIdConstant.H, r),
                                a.reduceChemical(c.ChemicalIdConstant.OH, r))
                            }
                            ,
                            t.prototype.ionizeFeSCN3 = function(a) {
                                if (a.hasChemicalByFormula("Fe", 3) && a.hasChemicalByFormula("SCN", -1)) {
                                    var n = this.weakIonizeCalculater.tarSCN
                                      , o = a.getMolarConcentrationByFormula("Fe(SCN)3", 0)
                                      , s = a.getMolarConcentrationByFormula("SCN", -1) + 3 * o
                                      , r = (s - n) / 3
                                      , u = (r - o) * a.getVolumeL();
                                    if (0 < u) {
                                        a.addChemical(c.PhaseUtil.createChemicalData(a, "Fe(SCN)3", 0, "l", u));
                                        var d = a.getChemicalByFormula("Fe", 3)
                                          , y = a.getChemicalByFormula("SCN", -1);
                                        d.mol -= u,
                                        y.mol -= 3 * u
                                    } else
                                        console.log("\u5206\u89E3Fe(SCN)3")
                                }
                            }
                            ,
                            t
                        }(c.BaseCalculator);
                        c.IonizeCalculator = i
                    }
                    )(p.chemicalReaction || (p.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min;
                (function(f) {
                    (function(p) {
                        var c = function(l) {
                            function i() {
                                var e = l !== null && l.apply(this, arguments) || this;
                                return e.reactionResult = [],
                                e
                            }
                            return U(i, l),
                            i.prototype.selfCalCulate = function() {
                                var e;
                                this.dt = .016,
                                l.prototype.selfCalCulate.call(this),
                                this.reactionResult = [],
                                (e = this.reactionResult).push.apply(e, this.homogeneousReactions()),
                                this.reactionResult = this.filterReactionResult(this.reactionResult),
                                this.reduceByResult()
                            }
                            ,
                            Object.defineProperty(i.prototype, "reactStr", {
                                get: function() {
                                    var t = [];
                                    return this.reactionResult.forEach(function(a) {
                                        t.push([a.reaction.equation, a.type, a.reaction.reversed, a.mol.toExponential()].join("	"))
                                    }),
                                    t.join(`
`)
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            i.prototype.reduceByResult = function() {
                                for (var e = 0, t; e < this.reactionResult.length; e++)
                                    t = this.reactionResult[e],
                                    t.type === 0 ? this.homogeneousReduce(t) : this.heterogeneousReduce(t)
                            }
                            ,
                            i.prototype.homogeneousReduce = function(e) {
                                this.homogeneousSc(e);
                                var t = e.phases[0];
                                if (e.sc !== 0 && e.mol !== 0) {
                                    for (var a = e.mol * e.sc, n = 0, o; n < e.reaction.reactants.length; n++)
                                        o = e.reaction.reactants[n],
                                        t.reduceChemical(o.chemicalId, o.coefficient * a);
                                    for (var n = 0; n < e.reaction.products.length; n++) {
                                        var o = e.reaction.products[n]
                                          , s = this.engine.createChemicalData(o.formula, o.valence, o.phaseType, o.coefficient * a);
                                        this.world.addChemical(s)
                                    }
                                }
                            }
                            ,
                            i.prototype.homogeneousSc = function(e) {
                                for (var t = e.phases[0], a = 1, n = 0; n < e.reaction.reactants.length; n++) {
                                    var o = e.reaction.reactants[n]
                                      , s = t.getChemical(o.chemicalId);
                                    if (s) {
                                        var r = s.mol
                                          , u = e.mol * o.coefficient;
                                        a = m(a, r / u)
                                    } else {
                                        a = 0;
                                        break
                                    }
                                }
                                e.sc = a
                            }
                            ,
                            i.prototype.heterogeneousReduce = function(e) {
                                for (var t = e.phases[0], a = e.phases[0], n = 0; n < e.reaction.reactants.length; n++) {
                                    var o = e.reaction.reactants[n]
                                      , s = e.mol * o.coefficient;
                                    t.phaseType === o.phaseType && (s -= t.reduceChemical(o.chemicalId, s)),
                                    a.phaseType === o.phaseType && a.reduceChemical(o.chemicalId, s)
                                }
                                for (var n = 0; n < e.reaction.products.length; n++) {
                                    var o = e.reaction.products[n]
                                      , r = this.engine.createChemicalData(o.formula, o.valence, null, e.mol * o.coefficient);
                                    o.phaseType === "s" ? this.world.addChemical(r) : o.phaseType === t.phaseType ? t.addChemical(r) : o.phaseType === a.phaseType ? a.addChemical(r) : this.world.addChemical(r)
                                }
                            }
                            ,
                            i.prototype.filterReactionResult = function(e) {
                                for (var t = [], a = 0, n; a < e.length; a++)
                                    n = e[a],
                                    0 < n.mol && t.push(n);
                                return t
                            }
                            ,
                            i.prototype.homogeneousReactions = function() {
                                var e = new p.HomogeneousReact(this.world,this.dt)
                                  , t = e.getReactions();
                                return e.destroy(),
                                t
                            }
                            ,
                            i.prototype.heterogeneousReaction = function() {
                                var e = new p.HeterogeneousReact(this.world,this.dt)
                                  , t = e.getReactions();
                                return e.destroy(),
                                t
                            }
                            ,
                            i
                        }(p.BaseCalculator);
                        p.ReactCalculator = c
                    }
                    )(f.chemicalReaction || (f.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min;
                (function(f) {
                    (function(p) {
                        var c = function(l) {
                            function i() {
                                return l !== null && l.apply(this, arguments) || this
                            }
                            return U(i, l),
                            i.prototype.selfCalCulate = function() {
                                var e = this;
                                l.prototype.selfCalCulate.call(this),
                                this.world.forEachPhaseByType("l", function(t) {
                                    e.molecutesSeparateOut(t)
                                })
                            }
                            ,
                            i.prototype.molecutesSeparateOut = function(e) {
                                for (var t = p.PhaseUtil.getMolecules(e), a = 0, n, o; a < t.length; a++)
                                    n = t[a],
                                    o = n.dissolveType,
                                    o === p.DissolveType.None ? this.completeSeparateOut(e, n) : o === p.DissolveType.Easy ? this.separateOutBySolution(e, n) : this.completeSeparateOut(e, n)
                            }
                            ,
                            i.prototype.completeSeparateOut = function(e, t) {
                                var a = t.clone();
                                a.phaseType = a.dataStruct.defaultPhaseType,
                                e.world.addChemical(a),
                                e.removeChemical(t.chemicalId)
                            }
                            ,
                            i.prototype.separateOutBySolution = function(e, t) {
                                var a = this.getSolubility(t)
                                  , n = p.PhaseUtil.getSolvent(e);
                                if (n) {
                                    var o = p.PhaseUtil.getTotalMol(e, n.chemicalId) * n.molecularMass
                                      , s = p.PhaseUtil.getTotalMol(e, t.chemicalId) * t.molecularMass
                                      , r = o * a;
                                    if (s > r) {
                                        var u = s - r;
                                        this.separateOutChemical(e, t, u / t.molecularMass)
                                    }
                                }
                            }
                            ,
                            i.prototype.separateOutChemical = function(e, t, a) {
                                a = m(t.mol, a);
                                var n = t.clone(a);
                                n.phaseType = n.dataStruct.defaultPhaseType,
                                e.world.addChemical(n),
                                e.reduceChemical(t.chemicalId, a)
                            }
                            ,
                            i
                        }(p.BaseCalculator);
                        p.SeparateOutCalculator = c
                    }
                    )(f.chemicalReaction || (f.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function() {
                            function c() {}
                            return c.prototype.destroy = function() {}
                            ,
                            c.prototype.calculate = function(l) {
                                for (var i = f.PhaseUtil.getSolvent(l), e = 0, t; e < l.chemicals.length; e++)
                                    t = l.chemicals[e],
                                    i !== t && t.valence === 0 && t.ionizeType === f.IonizeType.Strong ? this.strongChemicalIonize(l, t) : t.formula === "Fe(SCN)3" && this.strongChemicalIonize(l, t)
                            }
                            ,
                            c.prototype.strongChemicalIonize = function(l, i) {
                                var e = this.getIonH(i.ions);
                                if (e) {
                                    var t = l.getChemicalByFormula("H2O", 0)
                                      , a = l.getChemicalByFormula("H", 1)
                                      , n = a ? a.mol : 0;
                                    t.mol - n > e.count * i.mol ? this.completeIonize(l, i) : this.incompleteIonize(l, i, (t.mol - n) / e.count)
                                } else
                                    this.completeIonize(l, i)
                            }
                            ,
                            c.prototype.incompleteIonize = function(l, i, e) {
                                i.ions.forEach(function(t) {
                                    var a = f.PhaseUtil.createChemicalData(l, t.formula, t.valence, "l", t.count * e);
                                    l.addChemical(a)
                                }),
                                l.reduceChemical(i.chemicalId, e)
                            }
                            ,
                            c.prototype.completeIonize = function(l, i) {
                                i.ions.forEach(function(e) {
                                    var t = f.PhaseUtil.createChemicalData(l, e.formula, e.valence, "l", e.count * i.mol);
                                    l.addChemical(t)
                                }),
                                l.removeChemical(i.chemicalId)
                            }
                            ,
                            c.prototype.getIonH = function(l) {
                                for (var i = 0; i < l.length; i++)
                                    if (f.ChemicalDataStructUtil.isH(l[i]))
                                        return l[i];
                                return null
                            }
                            ,
                            c
                        }();
                        f.StrongChemicalIonize = p
                    }
                    )(m.chemicalReaction || (m.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.max
                  , p = Math.pow
                  , c = Math.abs
                  , l = Math.sqrt;
                (function(i) {
                    (function(e) {
                        var t = h.utils.Constant
                          , a = function() {
                            function n() {
                                this.optimizeFlag = !0,
                                this.isSuccess = !1,
                                this.targetCH = 0,
                                this.targetNH = 0,
                                this.targetPH = 7,
                                this.tarSCN = 0,
                                this.targetConcentration = {},
                                this.targetConcentrationArr = [],
                                this.kspTargetConcentration = {},
                                this.chains = [],
                                this.cMap = {},
                                this.chemConnMap = {},
                                this.hardMap = {},
                                this.rangePH = 0
                            }
                            return n.prototype.destroy = function() {
                                this.dataStructManager = null,
                                this.reactionDataManager = null,
                                this.cMap = null,
                                this.chains = null,
                                this.targetConcentration = null,
                                this.kspTargetConcentration = null,
                                this.chemConnMap = null
                            }
                            ,
                            n.prototype.calculate = function(o) {
                                this.rangePH = 0,
                                this.hardMap = {},
                                this.cMap = {},
                                this.chains = [],
                                this.targetConcentration = {},
                                this.kspTargetConcentration = {},
                                this.chemConnMap = {},
                                this.isSuccess = !1,
                                this.dataStructManager = o.world.engine.dataStructManager,
                                this.reactionDataManager = o.world.engine.reactionDataManager,
                                this.ions = this.getPossibleIons(o),
                                this.initChanis(),
                                this.isBalanced(o) ? this.isSuccess = !0 : this.calculate02(o),
                                window.test && (window.test = !1,
                                this.test(o))
                            }
                            ,
                            n.prototype.hasWeak = function() {
                                for (var o = 0, s; o < this.ions.length; o++)
                                    if (s = this.ions[o],
                                    this.dataStructManager.getWeakAcidChain(s.chemicalId) || this.dataStructManager.getWeakAlkaliChain(s.chemicalId))
                                        return !0;
                                return !1
                            }
                            ,
                            n.prototype.calcTarget = function(o, s) {
                                this.isSuccess = !0,
                                this.targetPH = s,
                                this.targetCH = t.pH2c(s),
                                this.targetNH = this.targetCH * o.getVolumeL(),
                                this.calculateTargetConcentration(o, this.targetCH),
                                o.lastBalancePHRange[0] = s - this.rangePH,
                                o.lastBalancePHRange[1] = s + this.rangePH,
                                this.updateTargetConcentrationArr(),
                                this.tarSCN = this.getSCNMolarCon(o, this.targetCH)
                            }
                            ,
                            n.prototype.updateTargetConcentrationArr = function() {
                                for (var o in this.targetConcentrationArr = [],
                                this.targetConcentration)
                                    if (this.targetConcentration.hasOwnProperty(o)) {
                                        var s = this.targetConcentration[o];
                                        this.targetConcentrationArr.push(s)
                                    }
                                this.targetConcentrationArr.reverse()
                            }
                            ,
                            n.prototype.isBalanced = function(o) {
                                var s = o.getMolarConcentration(e.ChemicalIdConstant.H)
                                  , r = s === 0 ? 7 : t.c2pH(s)
                                  , u = this.getTotalConcentrationE(o, t.pH2c(r));
                                return 1e-17 > c(u) && (this.calcTarget(o, r),
                                !0)
                            }
                            ,
                            n.prototype.getPHRange = function(o) {
                                var s = o.lastBalancePHRange
                                  , r = s[0]
                                  , u = s[1]
                                  , d = (r + u) / 2
                                  , y = u - r == 0 ? 1e-15 : u - r
                                  , g = [];
                                if (this.optimizeFlag)
                                    for (var C = 1, T = 0; 4 > T; T++)
                                        g.push(f(-10, d - C * y), m(100, d + C * y)),
                                        C *= 10;
                                g.push(-10, 100);
                                for (var T = 0; T < g.length; T += 2) {
                                    var A = g[T]
                                      , S = g[T + 1]
                                      , B = this.getTotalConcentrationE(o, t.pH2c(A))
                                      , b = this.getTotalConcentrationE(o, t.pH2c(S));
                                    if (0 >= B * b)
                                        return B > b ? {
                                            cMinPH: S,
                                            cMaxPH: A
                                        } : {
                                            cMinPH: A,
                                            cMaxPH: S
                                        }
                                }
                                return null
                            }
                            ,
                            n.prototype.calculate02 = function(o) {
                                var s = this.getPHRange(o);
                                if (s) {
                                    var r = s.cMinPH, u = s.cMaxPH, d = 0, y, g, C;
                                    for (y = (r + u) / 2; ; ) {
                                        if (g = this.getTotalConcentrationE(o, t.pH2c(y)),
                                        0 < g ? u = y : r = y,
                                        y = (r + u) / 2,
                                        u - r != 0 && (this.rangePH = u - r),
                                        1e-17 > c(g) || C === y) {
                                            g = this.getTotalConcentrationE(o, t.pH2c(y)),
                                            this.calcTarget(o, y);
                                            break
                                        }
                                        if (C = y,
                                        d++,
                                        100 < d)
                                            break
                                    }
                                }
                            }
                            ,
                            n.prototype.calculate01 = function(o) {
                                for (var s = o.getMolarConcentration(e.ChemicalIdConstant.H), r = s === 0 ? 7 : t.c2pH(s), u = 0, d = .001; ; ) {
                                    var y = this.getTotalConcentrationE(o, t.pH2c(r))
                                      , g = this.getTotalConcentrationE(o, t.pH2c(r + d))
                                      , C = (g - y) / d;
                                    if (r -= y / C,
                                    1e-6 > c(y)) {
                                        this.calcTarget(o, r);
                                        break
                                    }
                                    if (isNaN(r) || !isFinite(r) || (u++,
                                    100 < u))
                                        break
                                }
                            }
                            ,
                            n.prototype.test = function(o) {
                                for (var s = [], r = 0, u; 14 > r; r += .1)
                                    u = p(10, -r),
                                    s.push([r, this.getTotalConcentrationE(o, u)].join("	"));
                                console.log(s.join(`
`))
                            }
                            ,
                            n.prototype.calculateTargetConcentration = function(o, s) {
                                for (var r = 0, u, d, y; r < this.chains.length; r++) {
                                    u = this.chains[r];
                                    for (var g = this.getC(o, u, s), C = u.chemicals.length - 1; 1 <= C; C--)
                                        d = u.chemicals[C],
                                        y = this.getWeakConcentration(o, d, u, s),
                                        this.pushTargetConcentration(o, d, y),
                                        g -= y;
                                    this.pushTargetConcentration(o, u.chemicals[0], g)
                                }
                                for (var r = 0, T; r < this.ions.length; r++)
                                    T = this.ions[r],
                                    this.hardMap[T.chemicalId] && (y = this.getIonConcentration(o, s, T),
                                    this.kspTargetConcentration[T.chemicalId] = {
                                        formula: T.formula,
                                        valence: T.valence,
                                        c: y,
                                        chemicalId: T.chemicalId,
                                        mol: y * o.getVolumeL()
                                    })
                            }
                            ,
                            n.prototype.getWeakConcentration = function(o, s, r, u) {
                                var d = 0;
                                return 0 < s.valence ? d = this.getAlkaliConcentration(o, s.valence, r, u) : 0 > s.valence ? d = this.getAcidConcentration(o, s.valence, r, u) : (d = 0,
                                console.log("\u51FA\u9519\u4E86\uFF0C\u5E94\u8BE5\u53EA\u6709\u79BB\u5B50\uFF0C\u51FA\u73B0\u4E86\u5206\u5B50")),
                                d
                            }
                            ,
                            n.prototype.pushTargetConcentration = function(o, s, r) {
                                this.targetConcentration[s.chemicalId] = {
                                    formula: s.formula,
                                    valence: s.valence,
                                    c: r,
                                    chemicalId: s.chemicalId,
                                    mol: r * o.getVolumeL()
                                }
                            }
                            ,
                            n.prototype.getIonConcentration = function(o, s, r) {
                                var u = this.getChain(r);
                                return u ? this.getWeakConcentration(o, r, u, s) : 0 < r.valence ? e.ChemicalDataStructUtil.isH(r) ? s : this.getStrongConcentrationP(o, r, s) : e.ChemicalDataStructUtil.isOH(r) ? t.Kw / s : this.getStrongConcentrationN(o, r, s)
                            }
                            ,
                            n.prototype.getTotalConcentrationE = function(o, s) {
                                this.cMap = {};
                                for (var r = 0, u = 0; u < this.ions.length; u++)
                                    r += this.getIonConcentration(o, s, this.ions[u]) * this.ions[u].valence;
                                return r
                            }
                            ,
                            n.prototype.initChanis = function() {
                                for (var o = {}, s = 0; s < this.ions.length; s++) {
                                    var r = this.ions[s]
                                      , u = this.getChain(r);
                                    u && !o[u.uid] && (this.chains.push(u),
                                    o[u.uid] = !0)
                                }
                            }
                            ,
                            n.prototype.getStrongConcentrationP = function(o, s, r) {
                                var u = this.getHardItem(o, s);
                                if (u && u.hardChemical) {
                                    var d = u.ionA
                                      , y = u.ionB
                                      , g = 0;
                                    g = e.ChemicalDataStructUtil.isOH(y) ? t.Kw / r : this.getAcidConcentration(o, s.valence, u.chain, r);
                                    var C = m(p(u.ksp / p(g, y.count), 1 / d.count), this.getChemConn(o, s.chemicalId));
                                    return this.cMap[d.chemicalId] || (this.cMap[d.chemicalId] = o.getMolarConcentration(d.chemicalId)),
                                    C
                                }
                                return o.getMolarConcentration(s.chemicalId)
                            }
                            ,
                            n.prototype.getChemConn = function(o, s) {
                                var r = this.chemConnMap[s];
                                return isNaN(r) && (r = o.getMolarConcentration(s),
                                this.chemConnMap[s] = r),
                                r
                            }
                            ,
                            n.prototype.getStrongConcentrationN = function(o, s, r) {
                                var u = this.getHardItem(o, s);
                                if (u) {
                                    if (u.hardChemical) {
                                        var d = u.ionA
                                          , y = u.ionB
                                          , g = 0;
                                        g = e.ChemicalDataStructUtil.isH(y) ? r : this.getAlkaliConcentration(o, s.valence, u.chain, r);
                                        var C = m(p(u.ksp / p(g, y.count), 1 / d.count), this.getChemConn(o, s.chemicalId));
                                        return this.cMap[d.chemicalId] || (this.cMap[d.chemicalId] = o.getMolarConcentration(d.chemicalId)),
                                        C
                                    }
                                } else if (s.formula === "SCN" && o.hasChemicalByFormula("Fe", 3)) {
                                    var g = this.getSCNMolarCon(o, r);
                                    if (0 < g)
                                        return g
                                }
                                return o.getMolarConcentration(s.chemicalId)
                            }
                            ,
                            n.prototype.getSCNMolarCon = function(o, s) {
                                var r = this.getStrongConcentrationP(o, this.dataStructManager.getChemical("Fe", 3), s)
                                  , u = o.getMolarConcentrationByFormula("SCN", -1) + 3 * o.getMolarConcentrationByFormula("Fe(SCN)3", 0)
                                  , d = this.dataStructManager.getChemical("Fe(SCN)3", 0)
                                  , y = d.kab
                                  , g = u
                                  , C = y / r / 3
                                  , T = C
                                  , A = -C * g
                                  , S = A / 2
                                  , B = T / 3
                                  , b = l(S * S + B * B * B)
                                  , P = this.mathCube1(-S + b) + this.mathCube1(-S - b);
                                return P
                            }
                            ,
                            n.prototype.mathCube1 = function(o) {
                                return 0 <= o ? p(o, 1 / 3) : -p(-o, 1 / 3)
                            }
                            ,
                            n.prototype.getIonByType = function(o, s) {
                                for (var r = 0, u; r < o.length; r++)
                                    if (u = o[r],
                                    0 < u.valence * s)
                                        return u;
                                return null
                            }
                            ,
                            n.prototype.getHardItem = function(o, s) {
                                if (!this.hardMap[s.chemicalId])
                                    for (var r = {
                                        ionA: null,
                                        ionB: null,
                                        chain: null,
                                        hardChemical: null,
                                        ksp: 0
                                    }, u = this.dataStructManager.getHardSolubleChemicals(s.chemicalId), d = 0; d < u.length; d++) {
                                        var y = u[d]
                                          , g = 0 < y.ions[0].valence * s.valence ? y.ions[0] : y.ions[1]
                                          , C = 0 < y.ions[0].valence * s.valence ? y.ions[1] : y.ions[0];
                                        if (e.ChemicalDataStructUtil.isOH(C) || e.ChemicalDataStructUtil.isH(C)) {
                                            r.ionA = g,
                                            r.ionB = C,
                                            r.hardChemical = y,
                                            r.ksp = y.ksp,
                                            this.hardMap[s.chemicalId] = r;
                                            break
                                        } else if (o.hasChemical(C.chemicalId)) {
                                            var T = this.getChain(C);
                                            if (T) {
                                                r.chain = T,
                                                r.ionA = g,
                                                r.ionB = C,
                                                r.hardChemical = y,
                                                r.ksp = y.ksp,
                                                this.hardMap[s.chemicalId] = r;
                                                break
                                            }
                                        }
                                    }
                                return this.hardMap[s.chemicalId]
                            }
                            ,
                            n.prototype.getPossibleIons = function(o) {
                                for (var s = {}, r = [], u = e.PhaseUtil.getPossibleIons(o), d = 0; d < u.length; d++) {
                                    var y = u[d]
                                      , g = this.getChain(y);
                                    if (g)
                                        for (var C = 0, T; C < g.chemicals.length; C++)
                                            T = g.chemicals[C],
                                            T.valence === 0 || s[T.chemicalId] || (s[T.chemicalId] = !0,
                                            r.push(T));
                                    else {
                                        var T = this.dataStructManager.getChemical(y.formula, y.valence);
                                        s[T.chemicalId] = !0,
                                        r.push(T)
                                    }
                                }
                                return r
                            }
                            ,
                            n.prototype.getAcidConcentration = function(o, s, r, u) {
                                var d = this.getC(o, r, u);
                                return d * e.WeakIonizeUtil.getAcidDelta(r.n, s, u, r.kab)
                            }
                            ,
                            n.prototype.getAlkaliConcentration = function(o, s, r, u) {
                                var d = this.getC(o, r, u);
                                return d * e.WeakIonizeUtil.getAlkaliDelta(r.n, s, u, r.kab)
                            }
                            ,
                            n.prototype.getC = function(o, s, r) {
                                if (this.cMap[s.uid])
                                    return this.cMap[s.uid];
                                for (var u = 0, d = 0, y; d < s.chemicals.length; d++)
                                    y = s.chemicals[d],
                                    u += o.getMolarConcentration(y.chemicalId);
                                return u = this.getC0(u, o, s, r),
                                this.cMap[s.uid] = u,
                                u
                            }
                            ,
                            n.prototype.getC0 = function(o, s, r, u) {
                                var d = r.chemicals[0].formula
                                  , y = this.reactionDataManager.getReverseItem(d);
                                if (!y)
                                    return o;
                                o += s.getMolarConcentrationByFormula(y.formula, 0);
                                var g = e.WeakIonizeUtil.getDelta(y.type === 0, r.n, 0, u, r.kab);
                                return e.WeakIonizeUtil.calcC0(o, y.k, y.m, g)
                            }
                            ,
                            n.prototype.getChain = function(o) {
                                var s;
                                return s = 0 < o.valence ? this.dataStructManager.getWeakAlkaliChain(o.chemicalId) : this.dataStructManager.getWeakAcidChain(o.chemicalId),
                                s
                            }
                            ,
                            n
                        }();
                        e.WeakChemicalIonize = a
                    }
                    )(i.chemicalReaction || (i.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.sqrt;
                (function(p) {
                    (function(c) {
                        var l = function() {
                            function i() {}
                            return i.prototype.destroy = function() {}
                            ,
                            i.prototype.calculate = function(e, t) {
                                for (var a = 0, n; a < e.chemicals.length; a++)
                                    n = e.chemicals[a],
                                    t !== n && n.valence === 0 && n.ionizeType === c.IonizeType.Weak && this.weakChemicalIonize(e, n);
                                for (var a = 0; a < e.chemicals.length; a++)
                                    n = e.chemicals[a],
                                    t !== n && n.valence !== 0 && n.ions.length && this.weakChemicalIonize(e, n);
                                this.solventIonize(e, t)
                            }
                            ,
                            i.prototype.solventIonize = function(e, t) {
                                this.ionize(e, t, 1)
                            }
                            ,
                            i.prototype.weakChemicalIonize = function(e, t) {
                                this.ionize(e, t, 0)
                            }
                            ,
                            i.prototype.ionize = function(e, t, a) {
                                var n = e.getVolumeL(), o = 1 / n, s = t.ions[0], r = t.ions[1], u = s.count, d = r.count, y = s.chemicalId, g = r.chemicalId, C = e.getChemical(y) || c.PhaseUtil.createChemicalData(e, s.formula, s.valence, "l", 0), T = C.mol * o, A = e.getChemical(g) || c.PhaseUtil.createChemicalData(e, r.formula, r.valence, "l", 0), S = A.mol * o, B;
                                if (a === 0) {
                                    var b = t.dataStruct.kab
                                      , P = e.getMolarConcentration(t.chemicalId)
                                      , I = 0;
                                    B = c.CalculatorUtil.kabIterator(P, T, u, S, d, I, b)
                                } else if (a === 1) {
                                    var O = c.ChemicalDataStructUtil.isH2O(t) ? t.kab : t.ksp
                                      , I = T === 0 && S === 0 ? f(O) : 0;
                                    B = c.CalculatorUtil.kspIterator(T, u, S, d, I, O)
                                } else
                                    return;
                                var D = B * n;
                                if (0 < D) {
                                    var w = 0;
                                    D >= t.mol ? (w = t.mol,
                                    e.removeChemical(t.chemicalId)) : (w = D,
                                    t.mol -= w),
                                    e.addChemical(C.clone(w * u)),
                                    e.addChemical(A.clone(w * d))
                                } else if (0 > D) {
                                    var w = m(-D, C.mol / u, A.mol / d);
                                    0 < w && (t.mol += w,
                                    e.reduceChemical(C.chemicalId, w * u),
                                    e.reduceChemical(A.chemicalId, w * d))
                                }
                                e.removeEmptyChemical(),
                                e.setDirty()
                            }
                            ,
                            i
                        }();
                        c.WeakChemicalIonizeOld = l
                    }
                    )(p.chemicalReaction || (p.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.abs;
                (function(f) {
                    (function(p) {
                        var c = h.utils.Constant
                          , l = function() {
                            function i() {}
                            return i.calcC0 = function(e, t, a, n) {
                                var o = e * n / (t + n);
                                return o > a && (o = a),
                                o * t / n
                            }
                            ,
                            i.getDelta = function(e, t, a, n, o) {
                                return e ? i.getAcidDelta(t, a, n, o) : i.getAlkaliDelta(t, a, n, o)
                            }
                            ,
                            i.getAcidDelta = function(e, t, a, n) {
                                var o = -m(t) + e
                                  , s = i.acidFuncs[e - 1][o];
                                return s(a, n[0], n[1], n[2])
                            }
                            ,
                            i.getAlkaliDelta = function(e, t, a, n) {
                                var o = -m(t) + e
                                  , s = i.acidFuncs[e - 1][o];
                                return s(c.Kw / a, n[0], n[1], n[2])
                            }
                            ,
                            i.weakAcidOne0 = function(e, t) {
                                return t / (e + t)
                            }
                            ,
                            i.weakAcidOne1 = function(e, t) {
                                return e / (e + t)
                            }
                            ,
                            i.weakAcidTwo0 = function(e, t, a) {
                                return t * a / (e * e + t * e + t * a)
                            }
                            ,
                            i.weakAcidTwo1 = function(e, t, a) {
                                return t * e / (e * e + t * e + t * a)
                            }
                            ,
                            i.weakAcidTwo2 = function(e, t, a) {
                                return e * e / (e * e + t * e + t * a)
                            }
                            ,
                            i.weakAcidThree0 = function(e, t, a, n) {
                                return t * a * n / (e * e * e + t * e * e + t * a * e + t * a * n)
                            }
                            ,
                            i.weakAcidThree1 = function(e, t, a, n) {
                                return t * a * e / (e * e * e + t * e * e + t * a * e + t * a * n)
                            }
                            ,
                            i.weakAcidThree2 = function(e, t, a, n) {
                                return t * e * e / (e * e * e + t * e * e + t * a * e + t * a * n)
                            }
                            ,
                            i.weakAcidThree3 = function(e, t, a, n) {
                                return e * e * e / (e * e * e + t * e * e + t * a * e + t * a * n)
                            }
                            ,
                            i.acidFuncs = [[i.weakAcidOne0, i.weakAcidOne1], [i.weakAcidTwo0, i.weakAcidTwo1, i.weakAcidTwo2], [i.weakAcidThree0, i.weakAcidThree1, i.weakAcidThree2, i.weakAcidThree3]],
                            i
                        }();
                        p.WeakIonizeUtil = l
                    }
                    )(f.chemicalReaction || (f.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        (function(p) {
                            p[p.Easy = 0] = "Easy",
                            p[p.Hard = 1] = "Hard",
                            p[p.None = 2] = "None"
                        }
                        )(f.DissolveType || (f.DissolveType = {})),
                        function(p) {
                            p[p.Strong = 0] = "Strong",
                            p[p.Weak = 1] = "Weak",
                            p[p.None = 2] = "None"
                        }(f.IonizeType || (f.IonizeType = {}))
                    }
                    )(m.chemicalReaction || (m.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.max;
                (function(f) {
                    (function(p) {
                        var c = function(l) {
                            function i() {
                                return l !== null && l.apply(this, arguments) || this
                            }
                            return U(i, l),
                            i.prototype.getReactions = function() {
                                var e = this
                                  , t = [];
                                return this.world.sortByDensity(),
                                this.phaseGroup = {
                                    gasPhase: this.world.getPhaseByType("g")[0],
                                    liquidPhases: this.world.getPhaseByType("l"),
                                    solidPhases: this.world.getPhaseByType("s")
                                },
                                this.engine.reactionDataManager.forEachItem(function(a) {
                                    if (!(0 < a.ionId)) {
                                        var n = e.canReactItem(a);
                                        if (n) {
                                            var o = {
                                                type: 1,
                                                reaction: a,
                                                mol: e.getReactMol(a, n),
                                                sc: 1,
                                                molecules: [],
                                                phases: [n.phase0, n.phase1]
                                            };
                                            t.push(o),
                                            e.calcIonMoleReact(o)
                                        }
                                    }
                                }),
                                t
                            }
                            ,
                            i.prototype.getReactType = function(e) {
                                return this.hasPhaseType(e, "l") ? this.hasPhaseType(e, "g") ? 0 : this.hasPhaseType(e, "s") ? 2 : 1 : this.hasPhaseType(e, "s") ? this.hasPhaseType(e, "g") ? 3 : 4 : void 0
                            }
                            ,
                            i.prototype.canReactItem = function(e) {
                                if (!this.isHeterogeneous(e))
                                    return null;
                                this.reactType = this.getReactType(e);
                                var t;
                                switch (this.reactType) {
                                case 0:
                                    t = this.canReactGasLiquid(e);
                                    break;
                                case 2:
                                    t = this.canReactSolidLiquid(e);
                                    break;
                                case 1:
                                    t = this.canReactLiquidLiquid(e);
                                    break;
                                case 3:
                                    t = this.canReactGasSolid(e);
                                    break;
                                case 4:
                                    t = this.canReactSolidSolid(e);
                                    break
                                }
                                return t && (this.checkTemperaturnCondition(t.phase0, e.conditions) || this.checkTemperaturnCondition(t.phase1, e.conditions)) ? t : null
                            }
                            ,
                            i.prototype.canReactItemPhase = function(e, t, a) {
                                if (!t || !a)
                                    return null;
                                for (var n = 0; n < e.reactants.length; n++) {
                                    var o = e.reactants[n]
                                      , s = o.chemicalId;
                                    if (!(t.phaseType === o.phaseType && t.hasChemical(s)) && !(a.phaseType === o.phaseType && a.hasChemical(s)))
                                        return null
                                }
                                return {
                                    phase0: t,
                                    phase1: a
                                }
                            }
                            ,
                            i.prototype.canReactGasLiquid = function(e) {
                                return this.canReactItemPhase(e, this.phaseGroup.gasPhase, this.phaseGroup.liquidPhases[0])
                            }
                            ,
                            i.prototype.canReactSolidLiquid = function(e) {
                                for (var t = 0, a, n, o; t < this.phaseGroup.liquidPhases.length; t++) {
                                    n = this.phaseGroup.liquidPhases[t];
                                    for (var s = 0; s < this.phaseGroup.solidPhases.length; s++)
                                        if (o = this.phaseGroup.solidPhases[s],
                                        a = this.canReactItemPhase(e, n, o),
                                        a && this.isContact(n, o))
                                            return a
                                }
                                return null
                            }
                            ,
                            i.prototype.canReactLiquidLiquid = function(e) {
                                for (var t = 1, a, n, o; t < this.phaseGroup.liquidPhases.length; t++)
                                    if (n = this.phaseGroup.liquidPhases[t - 1],
                                    o = this.phaseGroup.liquidPhases[t],
                                    a = this.canReactItemPhase(e, n, o),
                                    a)
                                        return a;
                                return null
                            }
                            ,
                            i.prototype.canReactGasSolid = function(e) {
                                for (var t = this.phaseGroup.gasPhase, a = 0, n, o; a < this.phaseGroup.solidPhases.length; a++)
                                    if (o = this.phaseGroup.solidPhases[a],
                                    n = this.canReactItemPhase(e, t, o),
                                    n && this.isContact(t, o))
                                        return n;
                                return null
                            }
                            ,
                            i.prototype.canReactSolidSolid = function(e) {
                                for (var t = 0, a, n, o; t < this.phaseGroup.solidPhases.length; t++) {
                                    n = this.phaseGroup.liquidPhases[t];
                                    for (var s = t + 1; s < this.phaseGroup.solidPhases.length; s++)
                                        if (o = this.phaseGroup.solidPhases[s],
                                        a = this.canReactItemPhase(e, n, o),
                                        a && this.isContact(n, o))
                                            return a
                                }
                                return null
                            }
                            ,
                            i.prototype.isContact = function(e, t) {
                                return p.PhaseUtil.isConnect(e, t)
                            }
                            ,
                            i.prototype.isHeterogeneous = function(e) {
                                return !this.isHomogeneous(e)
                            }
                            ,
                            i.prototype.hasPhaseType = function(e, t) {
                                for (var a = 0; a < e.reactants.length; a++)
                                    if (e.reactants[a].phaseType === t)
                                        return !0;
                                return !1
                            }
                            ,
                            i.prototype.getReactMol = function(e, t) {
                                for (var a = m(t.phase0.temperature, t.phase1.temperature), n = {
                                    c0: e.reactionRate.C0,
                                    k: e.reactionRate.k,
                                    dt: this.dt,
                                    temperature: a,
                                    per: 1,
                                    reactants: []
                                }, o = 0; o < e.reactants.length; o++) {
                                    var s = e.reactants[o]
                                      , r = this.getChemicalMolVolume(t, s);
                                    n.reactants[o] = {
                                        mol: r[0],
                                        v: r[1],
                                        n: e.reactants[o].coefficient
                                    }
                                }
                                return this.getReactionRate(e.reactionRate.type, n)
                            }
                            ,
                            i.prototype.getChemicalMolVolume = function(e, t) {
                                var a = 0
                                  , n = t.chemicalId
                                  , o = this.getMol(e.phase0, t.phaseType, n);
                                o && (a += e.phase0.getVolumeL());
                                var s = this.getMol(e.phase1, t.phaseType, n);
                                return s && (a += e.phase1.getVolumeL()),
                                t.phaseType === "s" && (a = 1),
                                [o + s, a]
                            }
                            ,
                            i.prototype.getMol = function(e, t, a) {
                                if (e.phaseType === t) {
                                    var n = e.getChemical(a);
                                    if (n)
                                        return n.mol
                                }
                                return 0
                            }
                            ,
                            i
                        }(p.BaseReact);
                        p.HeterogeneousReact = c
                    }
                    )(f.chemicalReaction || (f.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.max
                  , f = Math.pow
                  , p = Math.abs;
                (function(c) {
                    (function(l) {
                        var i = function(e) {
                            function t() {
                                return e !== null && e.apply(this, arguments) || this
                            }
                            return U(t, e),
                            t.prototype.getReactions = function() {
                                var a = this
                                  , n = [];
                                return this.world.forEachPhase(function(o) {
                                    a.engine.reactionDataManager.forEachItem(function(s) {
                                        0 < s.ionId || (a.isReverseReact(s) ? a.reverseReact(n, o, s) : a.generalReact(n, o, s))
                                    })
                                }),
                                n
                            }
                            ,
                            t.prototype.generalReact = function(a, n, o) {
                                this.canReactItem(n, o) && this.generateResult(a, n, o)
                            }
                            ,
                            t.prototype.generateResult = function(a, n, o) {
                                var s = {
                                    type: 0,
                                    reaction: o,
                                    mol: this.getReactMol(n, o),
                                    sc: 1,
                                    molecules: [],
                                    phases: [n]
                                };
                                return a.push(s),
                                this.calcIonMoleReact(s),
                                s
                            }
                            ,
                            t.prototype.reverseReact = function(a, n, o) {
                                if (n.phaseType === "l" && this.isHomogeneous(o) && this.checkConditions(n, o)) {
                                    var s = this.hasAllReactants(n, o.reactants, o.minMol, !0)
                                      , r = this.hasAllReactants(n, o.products, o.minMol, !0);
                                    if (s || r) {
                                        var u = o.reverseCoefficient
                                          , d = this.calcK(n, o, 0);
                                        if (!this.isEqualK(u, d)) {
                                            if (d < u) {
                                                if (s) {
                                                    var y = this.generateResult(a, n, o);
                                                    y.mol = this.limmitReverseMol(n, o, y.mol, 1)
                                                }
                                            } else if (r) {
                                                var g = this.getReverseReactStructItem(o)
                                                  , y = this.generateResult(a, n, g);
                                                y.mol = this.limmitReverseMol(n, o, y.mol, -1)
                                            }
                                        }
                                    }
                                }
                            }
                            ,
                            t.prototype.isEqualK = function(a, n) {
                                return .01 > p(n - a) / a
                            }
                            ,
                            t.prototype.calcK = function(a, n, o) {
                                var s = this.getConcentrationProduct(a, n.reactants, -o)
                                  , r = this.getConcentrationProduct(a, n.products, o)
                                  , u = r / s;
                                return u
                            }
                            ,
                            t.prototype.limmitReverseMol = function(a, n, o, s, r) {
                                r === void 0 && (r = 0);
                                var u = n.reverseCoefficient
                                  , d = this.calcK(a, n, o);
                                return o === 0 || 100 < r || this.isEqualK(u, d) || 0 < (u - d) * s ? o : this.limmitReverseMol(a, n, o / 2, s, r + 1)
                            }
                            ,
                            t.prototype.getReverseReactStructItem = function(a) {
                                var n = {};
                                for (var o in a)
                                    a.hasOwnProperty(o) && (n[o] = a[o]);
                                return n.reactants = a.products,
                                n.products = a.reactants,
                                n.reversed = !0,
                                n
                            }
                            ,
                            t.prototype.getConcentrationProduct = function(a, n, o) {
                                for (var s = 1, r = a.getVolumeL(), u = o / r, d = 0, y; d < n.length; d++)
                                    if (y = n[d],
                                    y.phaseType === a.phaseType && y.formula !== "H2O") {
                                        var g = a.getMolarConcentration(y.chemicalId) + u * y.coefficient
                                          , C = f(m(0, g), y.coefficient);
                                        s *= C
                                    }
                                return s
                            }
                            ,
                            t.prototype.canReactItem = function(a, n) {
                                return this.isHomogeneous(n) && this.checkConditions(a, n) && this.hasAllReactants(a, n.reactants, n.minMol)
                            }
                            ,
                            t.prototype.hasAllReactants = function(a, n, o, s) {
                                s === void 0 && (s = !1);
                                for (var r = 0, u; r < n.length; r++) {
                                    if (u = a.getChemical(n[r].chemicalId),
                                    !u)
                                        return !1;
                                    if (!l.ChemicalDataStructUtil.isH2O(u) && !s) {
                                        if (u.phaseType === "l") {
                                            var d = u.mol / a.getVolumeL();
                                            if (d < o)
                                                return !1
                                        } else if (u.mol < o)
                                            return !1
                                    }
                                }
                                return !0
                            }
                            ,
                            t.prototype.checkConditions = function(a, n) {
                                return !!this.checkTemperaturnCondition(a, n.conditions) && (!n.conditions.electrify || l.PhaseUtil.electrify(a)) && (!n.conditions.light || l.PhaseUtil.light(a))
                            }
                            ,
                            t.prototype.getReactMol = function(a, n) {
                                var o = {
                                    c0: n.reactionRate.C0,
                                    k: n.reactionRate.k,
                                    dt: this.dt,
                                    temperature: a.temperature,
                                    per: 1,
                                    reactants: []
                                };
                                if (n.reactionRate.type === 0)
                                    for (var s = 0; s < n.reactants.length; s++) {
                                        var r = n.reactants[s]
                                          , u = a.getChemical(r.chemicalId);
                                        o.reactants[s] = {
                                            mol: u.mol,
                                            v: 1,
                                            n: n.reactants[s].coefficient
                                        }
                                    }
                                else
                                    for (var s = 0; s < n.reactants.length; s++) {
                                        var r = n.reactants[s]
                                          , u = a.getChemical(r.chemicalId);
                                        n.reactants.length === 1 && l.ChemicalDataStructUtil.isH2O(u) ? o.reactants.push({
                                            mol: u.mol,
                                            v: 1,
                                            n: n.reactants[s].coefficient
                                        }) : !l.ChemicalDataStructUtil.isH2O(u) && o.reactants.push({
                                            mol: u.mol,
                                            v: a.getVolumeL(),
                                            n: n.reactants[s].coefficient
                                        })
                                    }
                                return this.getReactionRate(n.reactionRate.type, o)
                            }
                            ,
                            t
                        }(l.BaseReact);
                        l.HomogeneousReact = i
                    }
                    )(c.chemicalReaction || (c.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.max;
                (function(f) {
                    (function(p) {
                        var c = function() {
                            function l(i) {
                                this.engine = i
                            }
                            return l.prototype.destroy = function() {
                                this.engine = null
                            }
                            ,
                            l.prototype.getReactionsInTwoPhase = function(i, e, t) {
                                var a = this;
                                t === void 0 && (t = .016);
                                var n = this.engine
                                  , o = [];
                                return n.reactionDataManager.forEachItem(function(s) {
                                    if (!(0 < s.ionId) && a.canReactInTwoPhase(i, e, s)) {
                                        var r = {
                                            type: 1,
                                            reaction: s,
                                            mol: a.getReactMol(i, e, s, t),
                                            sc: 1,
                                            molecules: [],
                                            phases: [i, e]
                                        };
                                        o.push(r),
                                        a.calcIonMoleReact(n, r)
                                    }
                                }),
                                o
                            }
                            ,
                            l.prototype.getReactMol = function(i, e, t, a) {
                                for (var n = m(i.temperature, e.temperature), o = {
                                    c0: t.reactionRate.C0,
                                    k: t.reactionRate.k,
                                    dt: a,
                                    temperature: n,
                                    per: 1,
                                    reactants: []
                                }, s = t.reactionRate.type === 0, r = 0, u; r < t.reactants.length; r++)
                                    if (u = t.reactants[r],
                                    !p.ChemicalDataStructUtil.isH2O(u)) {
                                        var d = this.getChemicalMolVolume(i, e, u);
                                        o.reactants[r] = {
                                            mol: d[0],
                                            v: s ? 1 : d[1],
                                            n: t.reactants[r].coefficient
                                        }
                                    }
                                return this.getReactionRate(t.reactionRate.type, o)
                            }
                            ,
                            l.prototype.getReactionRate = function(i, e) {
                                var t = 0;
                                switch (i) {
                                case 0:
                                    t = p.ReactionRateUtil.getConstantRate(e);
                                    break;
                                case 1:
                                    t = p.ReactionRateUtil.getLinearRate(e);
                                    break;
                                case 2:
                                    t = p.ReactionRateUtil.getExpRate(e);
                                    break;
                                case 3:
                                    t = p.ReactionRateUtil.getInverseRate(e);
                                    break
                                }
                                return t
                            }
                            ,
                            l.prototype.getChemicalMolVolume = function(i, e, t) {
                                var a = t.chemicalId
                                  , n = this.getMol(i, t.phaseType, a);
                                return 0 < n ? [n, i.getVolumeL()] : [this.getMol(e, t.phaseType, a), e.getVolumeL()]
                            }
                            ,
                            l.prototype.getMol = function(i, e, t) {
                                if (i.phaseType === e) {
                                    var a = i.getChemical(t);
                                    if (a)
                                        return a.mol
                                }
                                return 0
                            }
                            ,
                            l.prototype.calcIonMoleReact = function(i, e) {
                                var t = this;
                                if (e.reaction.isIon) {
                                    var a = i.reactionDataManager.getItemsByIonId(e.reaction.uid);
                                    a.forEach(function(n) {
                                        t.canReactInTwoPhase(e.phases[0], e.phases[1], n, !0) && e.molecules.push(n)
                                    })
                                }
                            }
                            ,
                            l.prototype.canReactInTwoPhase = function(i, e, t, a) {
                                a === void 0 && (a = !1);
                                for (var n = !1, o = !1, s = 0; s < t.reactants.length; s++) {
                                    var r = t.reactants[s]
                                      , u = r.chemicalId;
                                    if (i.phaseType === r.phaseType && i.hasChemical(u))
                                        n = !0;
                                    else if (e.phaseType === r.phaseType && e.hasChemical(u))
                                        o = !0;
                                    else
                                        return !1
                                }
                                return !!(n && o) && (!!a || this.checkTemperaturnCondition(i, t.conditions) || this.checkTemperaturnCondition(e, t.conditions))
                            }
                            ,
                            l.prototype.checkCondition = function(i, e) {
                                return this.checkTemperaturnCondition(i, e)
                            }
                            ,
                            l.prototype.checkTemperaturnCondition = function(i, e) {
                                return i.temperature >= e.temperature[0] && i.temperature <= e.temperature[1]
                            }
                            ,
                            l
                        }();
                        p.ReactUtil = c
                    }
                    )(f.chemicalReaction || (f.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = h.dataStruct.ListNode
                          , c = h.utils.NBArrayUtil
                          , l = function() {
                            function i(e) {
                                this.node = new p(this),
                                this.userData = {},
                                this.enabled = !1,
                                this.phases = [],
                                this.reactionResult = [],
                                this.engine = e,
                                this.engine.addReactionWorld(this)
                            }
                            return Object.defineProperty(i.prototype, "chemicalStrs", {
                                get: function() {
                                    var t = [];
                                    return this.forEachChemical(function(a) {
                                        t.push([a.chemicalId, a.phaseType, a.mol, a.mol / a.phase.getVolumeL()].join("	"))
                                    }),
                                    t
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            i.prototype.destroy = function() {
                                this.clear(),
                                this.phases = null,
                                this.engine.removeReactionWorld(this),
                                this.engine = null,
                                this.node.destroy(),
                                this.node = null,
                                this.userData = null
                            }
                            ,
                            i.prototype.update = function(e) {}
                            ,
                            i.prototype.setReactionResult = function(e) {
                                this.reactionResult = e
                            }
                            ,
                            i.prototype.getReactionResult = function() {
                                return this.reactionResult
                            }
                            ,
                            i.prototype.clear = function() {
                                this.phases.forEach(function(e) {
                                    e.destroy()
                                }),
                                this.phases = []
                            }
                            ,
                            Object.defineProperty(i.prototype, "dataStructManager", {
                                get: function() {
                                    return this.engine.dataStructManager
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            i.prototype.addChemical = function(e) {
                                var t = this.getCanAddedPhase(e);
                                t ? t.addChemical(e) : (t = new f.PhaseData(this.engine,e.phaseType),
                                t.world = this,
                                t.addChemical(e),
                                this.phases.push(t))
                            }
                            ,
                            i.prototype.addChemicalByFormula = function(e, t, a, n) {
                                var o = this.engine.createChemicalData(e, t, a, n);
                                this.addChemical(o)
                            }
                            ,
                            i.prototype.reduceChemical = function(e) {
                                var t = this.getBelongToPhase(e);
                                t ? (t.reduceChemical(e.chemicalId, e.mol),
                                this.tryRemovePhase(t)) : console.log("\u6CA1\u6709\u627E\u5230\u836F\u54C1\uFF1A" + e.chemicalId)
                            }
                            ,
                            i.prototype.removeChemical = function(e) {
                                var t = this.getBelongToPhase(e);
                                t ? (t.removeChemical(e.chemicalId),
                                this.tryRemovePhase(t)) : console.log("\u6CA1\u6709\u627E\u5230\u836F\u54C1\uFF1A" + e.chemicalId)
                            }
                            ,
                            i.prototype.reduceLiquid = function(e) {
                                return this.getTopLiquid(e, !0)
                            }
                            ,
                            i.prototype.getTopLiquid = function(e, t) {
                                t === void 0 && (t = !0);
                                var a = [];
                                t && this.sortByDensity();
                                var n = this.getPhaseByType("l"), o, s;
                                if (!t)
                                    return s = n[0].clone(),
                                    s.volume = e,
                                    a.push(s),
                                    a;
                                for (var r = 0; r < n.length; r++)
                                    if (o = n[r],
                                    s = o.clone(),
                                    a.push(s),
                                    o.volume < e)
                                        e -= o.volume,
                                        o.volume = 0;
                                    else {
                                        s.volume = e,
                                        o.volume -= e,
                                        e = 0;
                                        break
                                    }
                                return this.removeEmptyPhase(),
                                a
                            }
                            ,
                            i.prototype.addPhasesData = function(e) {
                                var t = this;
                                e.forEach(function(a) {
                                    var n = t.getCanMergePhase(a);
                                    n ? f.PhaseUtil.mergePhase(a, n) : (n = a.clone(),
                                    n.world = t,
                                    t.phases.push(n))
                                })
                            }
                            ,
                            i.prototype.transferLiquid = function(e, t, a) {
                                a === void 0 && (a = !0);
                                var n = this.getTopLiquid(t, a);
                                e && e.addPhasesData(n)
                            }
                            ,
                            i.prototype.sortByDensity = function() {
                                this.phases.sort(function(e, t) {
                                    return e.getDensity() - t.getDensity()
                                })
                            }
                            ,
                            i.prototype.forEachPhase = function(e) {
                                this.phases.forEach(e)
                            }
                            ,
                            i.prototype.getPhaseByType = function(e) {
                                var t = [];
                                return this.forEachPhaseByType(e, function(a) {
                                    t.push(a)
                                }),
                                t
                            }
                            ,
                            i.prototype.forEachPhaseByType = function(e, t) {
                                for (var a = 0; a < this.phases.length; a++)
                                    this.phases[a].phaseType === e && t(this.phases[a])
                            }
                            ,
                            i.prototype.forEachChemical = function(e) {
                                this.phases.forEach(function(t) {
                                    t.forEachChemical(e)
                                })
                            }
                            ,
                            i.prototype.findPhase = function(e) {
                                return c.find(this.phases, e)
                            }
                            ,
                            i.prototype.getLiquidV = function() {
                                var e = 0;
                                return this.forEachPhaseByType("l", function(t) {
                                    e += t.volume
                                }),
                                e
                            }
                            ,
                            i.prototype.getLiquidMessage = function() {
                                this.sortByDensity();
                                var e = [];
                                return this.forEachPhaseByType("l", function(t) {
                                    e.push({
                                        uid: t.UID,
                                        vol: t.volume,
                                        color: t.getColor()
                                    })
                                }),
                                e
                            }
                            ,
                            i.prototype.isEmpty = function() {
                                return this.phases.length === 0
                            }
                            ,
                            i.prototype.prepareSolution = function(e, t) {
                                t === void 0 && (t = 200);
                                for (var a = 0; a < this.phases.length; a++)
                                    this.phases[a].phaseType === "l" && (this.phases[a].mol = 0);
                                this.removeEmptyPhase();
                                var n = f.WorldUtil.createSolution(this.engine, e, t);
                                n.world = this,
                                this.phases.push(n),
                                this.engine.ionizeCalculator.calCulate(this, 0),
                                n.volume = t
                            }
                            ,
                            i.prototype.tryRemovePhase = function(e) {
                                e.isEmpty() && (c.remove(this.phases, e),
                                e.destroy())
                            }
                            ,
                            i.prototype.removeEmptyPhase = function() {
                                for (var e = this.phases.length - 1; 0 <= e; e--)
                                    this.tryRemovePhase(this.phases[e])
                            }
                            ,
                            i.prototype.getData = function(e) {
                                e === void 0 && (e = !1);
                                var t = {
                                    phases: []
                                };
                                return this.forEachPhase(function(a) {
                                    e && a.phaseType === "g" || t.phases.push(a.getData())
                                }),
                                t
                            }
                            ,
                            i.prototype.setData = function(e) {
                                var t = this;
                                this.clear(),
                                e.phases.forEach(function(a) {
                                    var n = new f.PhaseData(t.engine,a.phaseType);
                                    t.phases.push(n),
                                    n.world = t,
                                    n.setData(a)
                                })
                            }
                            ,
                            i.prototype.getChemical = function(e, t) {
                                for (var a = 0, n, o; a < this.phases.length && (n = this.phases[a],
                                !(n.phaseType === e && (o = n.getChemical(t),
                                o))); a++)
                                    ;
                                return o
                            }
                            ,
                            i.prototype.getBelongToPhase = function(e) {
                                return e.phase && e.phase.world === this ? e.phase : c.find(this.phases, function(t) {
                                    return t.phaseType === e.phaseType && t.hasChemical(e.chemicalId)
                                })
                            }
                            ,
                            i.prototype.getCanAddedPhase = function(e) {
                                return c.find(this.phases, function(t) {
                                    return f.PhaseUtil.canAddChemical(t, e)
                                })
                            }
                            ,
                            i.prototype.getCanMergePhase = function(e) {
                                return c.find(this.phases, function(t) {
                                    return f.PhaseUtil.canMergePhase(e, t)
                                })
                            }
                            ,
                            i
                        }();
                        f.ReactionWorld = l
                    }
                    )(m.chemicalReaction || (m.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function() {
                            function c(l, i, e, t) {
                                this.engine = l,
                                this.dataStruct = i,
                                this.phaseType = e || i.defaultPhaseType,
                                this.mol = isNaN(t) ? 1 : t
                            }
                            return c.prototype.destroy = function() {
                                this.dataStruct = null,
                                this.phase = null,
                                this.engine = null
                            }
                            ,
                            c.prototype.clone = function(l) {
                                return new c(this.engine,this.dataStruct,this.phaseType,isNaN(l) ? this.mol : l)
                            }
                            ,
                            Object.defineProperty(c.prototype, "isSolvent", {
                                get: function() {
                                    return this.dataStruct.isSolvent
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(c.prototype, "solubility", {
                                get: function() {
                                    return this.dataStruct.solubilitySi
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(c.prototype, "chemicalId", {
                                get: function() {
                                    return this.dataStruct.chemicalId
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(c.prototype, "formula", {
                                get: function() {
                                    return this.dataStruct.formula
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(c.prototype, "valence", {
                                get: function() {
                                    return this.dataStruct.valence
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(c.prototype, "mass", {
                                get: function() {
                                    return this.dataStruct.getMass(this.mol)
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(c.prototype, "molecularMass", {
                                get: function() {
                                    return this.dataStruct.molecularMass
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(c.prototype, "ksp", {
                                get: function() {
                                    return this.dataStruct.ksp
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(c.prototype, "kab", {
                                get: function() {
                                    return this.dataStruct.kab
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(c.prototype, "density", {
                                get: function() {
                                    return this.dataStruct.getDensity(this.phaseType)
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(c.prototype, "heatCapacity", {
                                get: function() {
                                    return this.dataStruct.getHeatCapacity(this.phaseType)
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(c.prototype, "color", {
                                get: function() {
                                    return this.dataStruct.getColor(this.phaseType)
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(c.prototype, "ions", {
                                get: function() {
                                    return this.dataStruct.ions
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(c.prototype, "isEmpty", {
                                get: function() {
                                    return 16611295681063124e-40 >= this.mol
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(c.prototype, "dissolveType", {
                                get: function() {
                                    return this.valence === 0 ? this.solubility ? f.DissolveType.Easy : this.ksp ? f.DissolveType.Hard : f.DissolveType.None : f.DissolveType.Easy
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(c.prototype, "ionizeType", {
                                get: function() {
                                    return this.ions.length ? this.kab ? f.IonizeType.Weak : f.IonizeType.Strong : f.IonizeType.None
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(c.prototype, "molarVolume", {
                                get: function() {
                                    return this.dataStruct.molarVolume
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            c.prototype.getColor = function(l) {
                                var i = this.color
                                  , e = {
                                    color: i.color,
                                    alpha: 0
                                };
                                if (this.phase) {
                                    if (this.formula === "C7H7O4N") {
                                        var t = f.PhaseUtil.getPhasePH(this.phase);
                                        return e.color = 5.5 > t ? 16711680 : 6.5 > t ? 16636125 : 7.5 > t ? 9784761 : 8.5 > t ? 11184861 : 6711005,
                                        e.alpha = 1,
                                        e
                                    }
                                    if (this.formula === "C20H14O4") {
                                        var t = f.PhaseUtil.getPhasePH(this.phase);
                                        return e.alpha = 1,
                                        8 > t ? (e.color = 16777215,
                                        e.alpha = .2) : 9 > t ? (e.color = 15556522,
                                        e.alpha = .8) : e.color = 15556522,
                                        e
                                    }
                                    if (this.formula === "(C6H10O5)n" && this.phaseType === "l" && this.phase.hasChemicalByFormula("I2", 0))
                                        return e.color = 1915797,
                                        e.alpha = 1,
                                        e
                                }
                                var a = i.alpha[0]
                                  , n = i.alpha[1]
                                  , o = i.alpha[2]
                                  , s = i.alpha[3];
                                return e.alpha = l > o ? s : l > a ? n + (l - a) * (s - n) / (o - a) : l * n / a,
                                e
                            }
                            ,
                            c
                        }();
                        f.ChemicalData = p
                    }
                    )(m.chemicalReaction || (m.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function() {
                            function c(l) {
                                this.id = 0,
                                this.chemicalId = "",
                                this.formula = "",
                                this.chemicalName = "",
                                this.defaultPhaseType = "l",
                                this.valence = 0,
                                this.isSolvent = !1,
                                this.molecularMass = 18.02,
                                this.burningPoint = 1 / 0,
                                this.decomposePoint = 1 / 0,
                                this.volatilizeSpeed = 0,
                                this.solubility = 1 / 0,
                                this.dissolveColor = 16777215,
                                this.dissolveAlpha = [0, 0, 0, 0],
                                this.solutionHeat = 0,
                                this.molarVolume = 0,
                                this.kab = 0,
                                this.ksp = 0,
                                this.heatCapacityGas = 7,
                                this.gasColor = 16777215,
                                this.gasAlpha = [0, 0, 0, 0],
                                this.vaporizationHeat = 40800,
                                this.heatCapacityLiquid = 4200,
                                this.densityLiquid = 0,
                                this.boilingPoint = 100,
                                this.liquidColor = 16777215,
                                this.liquidAlpha = [0, 0, 0, 0],
                                this.heatCapacitySolid = 2100,
                                this.densitySolid = 0,
                                this.meltingPoint = 0,
                                this.solidColor = 16777215,
                                this.solidAlpha = [0, 0, 0, 0],
                                this.ionColor = 16777215,
                                this.ionAlpha = [0, 0, 0, 0],
                                this.ions = [],
                                this.data = l,
                                this.parseData(l),
                                this.chemicalId = f.ChemicalUtil.createChemicalId(this.formula, this.valence),
                                this.molecularMass /= 1e3,
                                this.densityLiquid *= 1e3,
                                this.densitySolid *= 1e3,
                                this.ions.forEach(function(i) {
                                    i.chemicalId = f.ChemicalUtil.createChemicalId(i.formula, i.valence)
                                }),
                                this.molarVolume = 1e-6 * this.molarVolume || 0,
                                this.maxPreConc = this.getMaxConc()
                            }
                            return c.prototype.destroy = function() {
                                this.data = null
                            }
                            ,
                            Object.defineProperty(c.prototype, "solubilitySi", {
                                get: function() {
                                    return this.solubility / 100
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            c.prototype.getMass = function(l) {
                                return l * this.molecularMass
                            }
                            ,
                            c.prototype.getDensity = function(l) {
                                switch (l) {
                                case "g":
                                    return console.error("\u6C14\u6001\u7269\u8D28\u4E0D\u80FD\u76F4\u63A5\u83B7\u53D6\u5BC6\u5EA6"),
                                    0;
                                case "l":
                                    return this.densityLiquid;
                                case "s":
                                    return this.densitySolid
                                }
                                return 0
                            }
                            ,
                            c.prototype.getHeatCapacity = function(l) {
                                switch (l) {
                                case "g":
                                    return this.heatCapacityGas;
                                case "l":
                                    return this.heatCapacityLiquid;
                                case "s":
                                    return this.heatCapacitySolid
                                }
                                return 0
                            }
                            ,
                            c.prototype.getColor = function(l) {
                                var i = {
                                    color: 0,
                                    alpha: [0, 0, 0, 0]
                                };
                                if (this.valence !== 0)
                                    i.color = this.ionColor,
                                    i.alpha = this.ionAlpha;
                                else
                                    switch (l) {
                                    case "g":
                                        i.color = this.gasColor,
                                        i.alpha = this.gasAlpha;
                                        break;
                                    case "l":
                                        i.color = this.liquidColor,
                                        i.alpha = this.liquidAlpha;
                                        break;
                                    case "s":
                                        i.color = this.solidColor,
                                        i.alpha = this.solidAlpha;
                                        break
                                    }
                                return i
                            }
                            ,
                            c.prototype.getMaxConc = function() {
                                var l = this.formula, i = this.solubilitySi, e;
                                return e = l === "CH3COOH" ? 17.47 : l === "H2SO4" ? 18.4 : l === "HCl" ? 12 : l === "NaHCO3" ? 1.142 : i === f.ChemicalAttrConstant.MAX_SOLUBILITY || i === 99.99 ? 20 : i / this.molecularMass,
                                parseFloat(e.toFixed(3))
                            }
                            ,
                            c.prototype.parseData = function(l) {
                                var i;
                                for (var e in l)
                                    e && l.hasOwnProperty(e) && this.hasOwnProperty(e) && (i = l[e],
                                    this[e] = i === "Infinity" ? 1 / 0 : i)
                            }
                            ,
                            c
                        }();
                        f.ChemicalDataStruct = p
                    }
                    )(m.chemicalReaction || (m.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function() {
                            function c() {
                                this.molarVolumeMap = {},
                                this.dataArr = [],
                                this.dataMap = {},
                                this.moleculeArr = [],
                                this.moleculeMap = {},
                                this.ionArr = [],
                                this.ionMap = {},
                                this.ionData = {},
                                this.weakAcidMap = {},
                                this.weakAlkaliMap = {},
                                this.weakSaltMap = {},
                                this.hardSolubleMap = {}
                            }
                            return c.prototype.destroy = function() {
                                this.dataArr = null,
                                this.dataMap = null,
                                this.moleculeArr = null,
                                this.moleculeMap = null,
                                this.ionArr = null,
                                this.ionMap = null,
                                this.weakAcidMap = null,
                                this.weakAlkaliMap = null,
                                this.weakSaltMap = null,
                                this.ionData = null,
                                this.hardSolubleMap = null,
                                this.molarVolumeMap = null
                            }
                            ,
                            c.prototype.getChemical = function(l, i) {
                                var e = f.ChemicalUtil.createChemicalId(l, i);
                                return this.dataMap[e]
                            }
                            ,
                            c.prototype.getChemicalByUID = function(l) {
                                return this.dataMap[l]
                            }
                            ,
                            c.prototype.getReverseIonize = function(l, i) {
                                var e = this.serializeIons([l, i]);
                                return this.ionData[e]
                            }
                            ,
                            c.prototype.getWeakAcidChain = function(l) {
                                return this.weakAcidMap[l]
                            }
                            ,
                            c.prototype.getWeakAlkaliChain = function(l) {
                                return this.weakAlkaliMap[l]
                            }
                            ,
                            c.prototype.getWeakSaltChain = function(l) {
                                return this.weakSaltMap[l]
                            }
                            ,
                            c.prototype.getHardSolubleChemicals = function(l) {
                                return this.hardSolubleMap[l] || []
                            }
                            ,
                            c.prototype.forEachChemicalData = function(l) {
                                this.dataArr.forEach(l)
                            }
                            ,
                            c.prototype.parseData = function(l) {
                                var i = this;
                                l.forEach(function(e) {
                                    var t = new f.ChemicalDataStruct(e);
                                    t.molarVolume && (i.molarVolumeMap[t.chemicalId] = t.molarVolume),
                                    i.dataArr.push(t),
                                    i.dataMap[t.chemicalId] = t,
                                    t.valence === 0 ? (i.moleculeArr.push(t),
                                    i.moleculeMap[t.chemicalId] = t) : (i.ionArr.push(t),
                                    i.ionMap[t.chemicalId] = t);
                                    var a = i.serializeIons(t.ions);
                                    a === "" || i.ionData[a] || (i.ionData[a] = t)
                                }),
                                this.initWeakChainMap(),
                                this.initHardSoluble()
                            }
                            ,
                            c.prototype.initWeakChainMap = function() {
                                var l = this;
                                this.moleculeArr.forEach(function(i) {
                                    i.kab && i.formula !== "H2O" && (f.ChemicalDataStructUtil.isAcid(i) ? l.getIonizeChain(null, i, 0) : f.ChemicalDataStructUtil.isAlkali(i) ? l.getIonizeChain(null, i, 1) : l.getIonizeChain(null, i, 2))
                                }),
                                this.filter(this.weakAcidMap),
                                this.filter(this.weakAlkaliMap)
                            }
                            ,
                            c.prototype.filter = function(l) {
                                for (var i in l)
                                    if (l.hasOwnProperty(i)) {
                                        var e = l[i];
                                        e.chemicals.length === 1 && (console.log(this.chainsToString({
                                            key: e
                                        })),
                                        delete l[i])
                                    }
                            }
                            ,
                            c.prototype.initHardSoluble = function() {
                                var l = this;
                                this.moleculeArr.forEach(function(i) {
                                    i.ksp && (l.hardSolubleMap[i.chemicalId] = [i],
                                    i.ions.forEach(function(e) {
                                        var t = e.chemicalId;
                                        l.hardSolubleMap[t] = l.hardSolubleMap[t] || [],
                                        l.hardSolubleMap[t].push(i)
                                    }))
                                })
                            }
                            ,
                            c.prototype.chainsToString = function(l) {
                                var i = [];
                                for (var e in l)
                                    if (l.hasOwnProperty(e)) {
                                        var t = l[e];
                                        i.push([t.chemicals.map(function(a) {
                                            return a.chemicalId
                                        }).join("->"), t.n, t.kab.join(",")].join("	"))
                                    }
                                return i.join(`
`)
                            }
                            ,
                            c.prototype.getInitChain = function(l, i) {
                                return {
                                    chemicals: [],
                                    kab: [],
                                    type: i,
                                    uid: l,
                                    n: 0
                                }
                            }
                            ,
                            c.prototype.getIonizeChain = function(l, i, e) {
                                if (i) {
                                    l || (l = this.getInitChain(i.chemicalId, e)),
                                    l.chemicals.push(i),
                                    l.kab.push(i.kab || 0),
                                    e === 0 ? this.weakAcidMap[i.chemicalId] = l : e === 1 ? this.weakAlkaliMap[i.chemicalId] = l : this.weakSaltMap[i.chemicalId] = l;
                                    for (var t = 0, a; t < i.ions.length; t++)
                                        if (a = i.ions[t],
                                        f.ChemicalDataStructUtil.isOH(a) || f.ChemicalDataStructUtil.isH(a))
                                            l.n += a.count;
                                        else {
                                            var n = this.getChemical(a.formula, a.valence);
                                            this.getIonizeChain(l, n, e)
                                        }
                                }
                            }
                            ,
                            c.prototype.serializeIons = function(l) {
                                for (var i = [], e = 0; e < l.length; e++)
                                    i.push(l[e].chemicalId);
                                return i.sort(),
                                i.join("+")
                            }
                            ,
                            c
                        }();
                        f.ChemicalDataStructManager = p
                    }
                    )(m.chemicalReaction || (m.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min;
                (function(f) {
                    (function(p) {
                        var c = function() {
                            function l(i, e) {
                                this.UID = l.COUNTING++,
                                this.userData = {
                                    view: null
                                },
                                this.chemicals = [],
                                this.lastBalancePHRange = [0, 14],
                                this.R = 8.314,
                                this._phaseType = "g",
                                this._temperature = 300,
                                this._volume = 0,
                                this.vDirty = !0,
                                this._mol = 0,
                                this.nDirty = !0,
                                this._mass = 0,
                                this.mDirty = !0,
                                this.engine = i,
                                this._phaseType = e
                            }
                            return Object.defineProperty(l.prototype, "chemicalStrs", {
                                get: function() {
                                    var e = this
                                      , t = [];
                                    return this.forEachChemical(function(a) {
                                        t.push([a.chemicalId, a.phaseType, a.mol, a.mol / e.getVolumeL()].join("	"))
                                    }),
                                    t
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            l.prototype.destroy = function() {
                                this.clear(),
                                this.chemicals = null,
                                this.world = null,
                                this.engine = null,
                                this.userData = null
                            }
                            ,
                            l.prototype.clear = function() {
                                this.chemicals.forEach(function(i) {
                                    i.destroy()
                                }),
                                this.chemicals = [],
                                this.setDirty()
                            }
                            ,
                            l.prototype.setDirty = function() {
                                this.nDirty = !0,
                                this.mDirty = !0,
                                this.vDirty = !0
                            }
                            ,
                            l.prototype.getChemicals = function() {
                                return this.chemicals.concat()
                            }
                            ,
                            l.prototype.isEmpty = function() {
                                return this.chemicals.length === 0 || this.mass === 0
                            }
                            ,
                            l.prototype.addChemical = function(i) {
                                var e = this.getChemical(i.chemicalId);
                                e ? e.mol += i.mol : (e = i.clone(),
                                e.phase = this,
                                e.phaseType = this.phaseType,
                                this.chemicals.push(e)),
                                this.setDirty()
                            }
                            ,
                            l.prototype.reduceChemical = function(i, e) {
                                var t = this.getChemical(i);
                                if (!t || 0 >= t.mol)
                                    return console.warn("\u5F53\u524D\u7CFB\u7EDF\u4E2D\u4E0D\u5B58\u5728\u8981\u51CF\u5C11\u7684\u7269\u8D28\uFF1A", i),
                                    0;
                                var a = e;
                                if (t.mol < e) {
                                    var n = (e - t.mol) / t.mol;
                                    1e-10 > n || console.warn("\u8981\u51CF\u5C11\u7684\u7269\u8D28\u7684\u91CF\u591A\u4E8E\u5F53\u524D\u7CFB\u7EDF\u4E2D\u8BE5\u7269\u8D28\u7684\u91CF\uFF1A", e, t.mol),
                                    a = t.mol,
                                    t.mol = 0
                                } else
                                    t.mol -= e;
                                return t.mol === 0 && this.removeChemical(i),
                                this.setDirty(),
                                a
                            }
                            ,
                            l.prototype.removeChemical = function(i) {
                                for (var e = 0; e < this.chemicals.length; e++)
                                    if (this.chemicals[e].chemicalId === i)
                                        return this.chemicals[e].destroy(),
                                        this.chemicals.splice(e, 1),
                                        void this.setDirty()
                            }
                            ,
                            l.prototype.getChemical = function(i) {
                                for (var e = 0; e < this.chemicals.length; e++)
                                    if (this.chemicals[e].chemicalId === i)
                                        return this.chemicals[e];
                                return null
                            }
                            ,
                            l.prototype.getChemicalByFormula = function(i, e) {
                                return this.getChemical(p.ChemicalUtil.createChemicalId(i, e))
                            }
                            ,
                            l.prototype.hasChemical = function(i) {
                                return !!this.getChemical(i)
                            }
                            ,
                            l.prototype.hasChemicalByFormula = function(i, e) {
                                return !!this.getChemicalByFormula(i, e)
                            }
                            ,
                            Object.defineProperty(l.prototype, "phaseType", {
                                get: function() {
                                    return this._phaseType
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(l.prototype, "mol", {
                                get: function() {
                                    if (l.useCache && !this.nDirty)
                                        return this._mol;
                                    for (var e = 0, t = 0; t < this.chemicals.length; t++)
                                        e += this.chemicals[t].mol;
                                    return this._mol = e,
                                    this.nDirty = !1,
                                    e
                                },
                                set: function(e) {
                                    this.scaleN(e / this.mol)
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(l.prototype, "molecular", {
                                get: function() {
                                    return this.mass / this.mol
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(l.prototype, "mass", {
                                get: function() {
                                    if (l.useCache && !this.mDirty)
                                        return this._mass;
                                    for (var e = 0, t = 0; t < this.chemicals.length; t++)
                                        e += this.chemicals[t].mass;
                                    return this._mass = e,
                                    this.mDirty = !1,
                                    e
                                },
                                set: function(e) {
                                    this.scaleN(e / this.mass)
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(l.prototype, "density", {
                                get: function() {
                                    return this.mass / this.volume
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(l.prototype, "volume", {
                                get: function() {
                                    return this.phaseType === "g" ? this._volume : l.useCache && !this.vDirty ? this._volume : (this.vDirty = !1,
                                    this._volume = this.phaseType === "s" ? p.PhaseUtil.getSolidVolume(this) : p.PhaseUtil.getLiquidVolume(this),
                                    this._volume)
                                },
                                set: function(e) {
                                    this.phaseType === "g" ? this._volume = e : (this.scaleN(e / this.volume),
                                    this._volume = e)
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(l.prototype, "pressure", {
                                get: function() {
                                    return this.phaseType === "g" ? this.mol * this.R * this._temperature / this.volume : (console.error("\u5F53\u524D\u7CFB\u7EDF\u4E0D\u662F\u6C14\u6001\uFF0C\u4E0D\u80FD\u76F4\u63A5\u83B7\u53D6\u538B\u5F3A"),
                                    0)
                                },
                                set: function(e) {
                                    return this.phaseType === "g" ? void this.scaleN(e / this.pressure) : void console.error("\u5F53\u524D\u7CFB\u7EDF\u4E0D\u662F\u6C14\u6001\uFF0C\u4E0D\u80FD\u8BBE\u7F6E\u538B\u5F3A")
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            Object.defineProperty(l.prototype, "temperature", {
                                get: function() {
                                    return this._temperature
                                },
                                set: function(e) {
                                    this._temperature = e
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            l.prototype.getVolumeL = function() {
                                return 1e3 * this.volume
                            }
                            ,
                            l.prototype.getH2OVolumeL = function() {
                                var i = this.getChemicalByFormula("H", 1)
                                  , e = this.getChemicalByFormula("OH", -1)
                                  , t = this.getChemicalByFormula("H2O", 0)
                                  , a = (t ? t.mol : 0) + m(i ? i.mol : 0, e ? e.mol : 0);
                                return 1e3 * (a * t.molecularMass / t.density)
                            }
                            ,
                            l.prototype.getMolarConcentration = function(i) {
                                return this.getConcentration(this.getChemical(i))
                            }
                            ,
                            l.prototype.getMolarConcentrationByFormula = function(i, e) {
                                return this.getMolarConcentration(p.ChemicalUtil.createChemicalId(i, e))
                            }
                            ,
                            l.prototype.getConcentration = function(i) {
                                return i ? i.mol / this.getVolumeL() : 0
                            }
                            ,
                            l.prototype.getMassFraction = function(i) {
                                var e = this.getChemical(i);
                                return e ? e.mass / this.mass : 0
                            }
                            ,
                            l.prototype.getDensity = function() {
                                return this.mass / this.volume
                            }
                            ,
                            l.prototype.scaleN = function(i) {
                                for (var e = 0; e < this.chemicals.length; e++)
                                    this.chemicals[e].mol *= i;
                                this._mol *= i,
                                this._mass *= i,
                                this.phaseType !== "g" && (this._volume *= i)
                            }
                            ,
                            l.prototype.getColor = function() {
                                return this.getRealColor()
                            }
                            ,
                            l.prototype.getRealColor = function() {
                                for (var i = [], e = this.getVolumeL(), t = 0, a; t < this.chemicals.length; t++) {
                                    a = this.chemicals[t];
                                    var n = a.getColor(a.mol / e);
                                    n.alpha = l.alphaSc * n.alpha,
                                    i.push(n)
                                }
                                return p.ColorUtil.mixColor(i)
                            }
                            ,
                            l.prototype.clone = function() {
                                var i = new l(this.engine,this.phaseType);
                                return this.chemicals.forEach(function(e) {
                                    var t = e.clone();
                                    t.phase = i,
                                    i.chemicals.push(t)
                                }),
                                i.temperature = this.temperature,
                                this.phaseType === "g" && (i.volume = this.volume),
                                i
                            }
                            ,
                            l.prototype.forEachChemical = function(i) {
                                this.chemicals.forEach(i)
                            }
                            ,
                            l.prototype.removeEmptyChemical = function() {
                                for (var i = this.chemicals.length - 1; 0 <= i; i--)
                                    this.tryRemoveChemical(this.chemicals[i])
                            }
                            ,
                            l.prototype.tryRemoveChemical = function(i) {
                                if (i.isEmpty) {
                                    var e = this.chemicals.indexOf(i);
                                    e !== -1 && (this.chemicals.splice(e, 1),
                                    i.destroy(),
                                    this.setDirty())
                                }
                            }
                            ,
                            l.prototype.getData = function() {
                                var i = {
                                    phaseType: this.phaseType,
                                    temperature: this.temperature,
                                    chemicals: []
                                };
                                return this.forEachChemical(function(e) {
                                    i.chemicals.push({
                                        formula: e.formula,
                                        valence: e.valence,
                                        mol: e.mol
                                    })
                                }),
                                i
                            }
                            ,
                            l.prototype.setData = function(i) {
                                var e = this;
                                this.clear(),
                                this.temperature = i.temperature,
                                i.chemicals.forEach(function(t) {
                                    try {
                                        var a = e.world.engine.createChemicalData(t.formula, t.valence, i.phaseType, t.mol);
                                        e.chemicals.push(a),
                                        a.phase = e
                                    } catch (n) {
                                        console.log("\u6062\u590D\u6570\u636E\u521B\u5EFA\u836F\u54C1\u51FA\u9519\uFF1A", i.phaseType, t.formula, t.valence, n.message)
                                    }
                                })
                            }
                            ,
                            l.prototype.getMolRatioByChemicalId = function(i) {
                                var e = this.getChemical(i);
                                return !e || 0 >= e.mol || this.isEmpty() ? 0 : e.mol / this.mol
                            }
                            ,
                            l.useCache = !1,
                            l.alphaSc = 1,
                            l.COUNTING = 1,
                            l
                        }();
                        p.PhaseData = c
                    }
                    )(f.chemicalReaction || (f.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function() {
                            function c() {}
                            return c.MAX_SOLUBILITY = 1 / 0,
                            c
                        }();
                        f.ChemicalAttrConstant = p
                    }
                    )(m.chemicalReaction || (m.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function() {
                            function c() {}
                            return c.H = f.ChemicalUtil.createChemicalId("H", 1),
                            c.OH = f.ChemicalUtil.createChemicalId("OH", -1),
                            c.H2O = f.ChemicalUtil.createChemicalId("H2O", 0),
                            c
                        }();
                        f.ChemicalIdConstant = p
                    }
                    )(m.chemicalReaction || (m.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function() {
                            function c() {}
                            return c
                        }();
                        f.ReactionData = p
                    }
                    )(m.chemicalReaction || (m.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = h.utils.Constant
                          , c = function() {
                            function l() {
                                this.reverseMap = {
                                    H2CO3: {
                                        formula: "CO2",
                                        k: .00166,
                                        m: .03409,
                                        type: 0,
                                        reaction: null
                                    },
                                    NH3\u00B7H2O: {
                                        formula: "NH3",
                                        k: 4,
                                        m: 6.2353,
                                        type: 1,
                                        reaction: null
                                    },
                                    H2SO3: {
                                        formula: "SO2",
                                        k: 1,
                                        m: 1.56006,
                                        type: 0,
                                        reaction: null
                                    }
                                },
                                this.data = [],
                                this.map = {},
                                this.ionMap = {},
                                this.equationCalculater = new f.EquationCalculater
                            }
                            return l.prototype.destroy = function() {
                                this.data = null,
                                this.map = null,
                                this.ionMap = null,
                                this.equationCalculater = null
                            }
                            ,
                            l.prototype.parseData = function(i) {
                                this.data = i;
                                for (var e = 0, t; e < this.data.length; e++)
                                    if (t = this.data[e],
                                    this.parseReactStructItem(t),
                                    t.sid = e,
                                    !t.isIon && t.products.length === 1) {
                                        var a = this.reverseMap[t.products[0].formula];
                                        a && (a.reaction = t)
                                    }
                                this.initMap()
                            }
                            ,
                            l.prototype.getReverseItem = function(i) {
                                return this.reverseMap[i]
                            }
                            ,
                            l.prototype.forEachItem = function(i) {
                                this.data.forEach(i)
                            }
                            ,
                            l.prototype.getItemByUid = function(i) {
                                return this.map[i]
                            }
                            ,
                            l.prototype.getItemsByIonId = function(i) {
                                return this.ionMap[i]
                            }
                            ,
                            l.prototype.initMap = function() {
                                var i = this;
                                this.data.forEach(function(e) {
                                    i.map[e.uid] = e
                                }),
                                this.data.forEach(function(e) {
                                    e.ionId && (!i.ionMap[e.ionId] && (i.ionMap[e.ionId] = []),
                                    i.ionMap[e.ionId].push(e))
                                })
                            }
                            ,
                            l.prototype.parseReactStructItem = function(i) {
                                i.reactionRate.C0 = 1,
                                i.conditions.temperature[0] = p.T2K(i.conditions.temperature[0]),
                                i.conditions.temperature[1] = p.T2K(i.conditions.temperature[1]),
                                i.minMol = 1e-6,
                                i.isIon || (i.uid += 1e3),
                                i.equation = this.equationCalculater.calculate(i),
                                i.reactants.forEach(function(e) {
                                    e.chemicalId = f.ChemicalUtil.createChemicalId(e.formula, e.valence)
                                }),
                                i.products.forEach(function(e) {
                                    e.chemicalId = f.ChemicalUtil.createChemicalId(e.formula, e.valence)
                                })
                            }
                            ,
                            l
                        }();
                        f.ReactionDataStructManager = c
                    }
                    )(m.chemicalReaction || (m.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.pow;
                (function(f) {
                    (function(p) {
                        var c = h.utils.NBNumerical
                          , l = function() {
                            function i() {}
                            return i.kabIterator = function(e, t, a, n, o, s, r) {
                                var u = function(g) {
                                    return m(t + a * g, a) * m(n + o * g, o) - r * (e - g)
                                }
                                  , d = function(g) {
                                    return a * a * m(t + a * g, a - 1) * m(n + o * g, o) + o * o * m(n + o * g, o - 1) * m(t + a * g, a) + r
                                };
                                return c.newtonIterator(s, u, d, 100, 1e-20 * r)
                            }
                            ,
                            i.kspIterator = function(e, t, a, n, o, s) {
                                var r = function(y) {
                                    return m(e + t * y, t) * m(a + n * y, n) - s
                                }
                                  , u = function(y) {
                                    return t * t * m(e + t * y, t - 1) * m(a + n * y, n) + n * n * m(a + n * y, n - 1) * m(e + t * y, t)
                                };
                                return c.newtonIterator(o, r, u, 100, 1e-6 * s)
                            }
                            ,
                            i
                        }();
                        p.CalculatorUtil = l
                    }
                    )(f.chemicalReaction || (f.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        (function(p) {
                            p[p.Combination = 0] = "Combination",
                            p[p.Decomposition = 1] = "Decomposition",
                            p[p.Displacement = 2] = "Displacement",
                            p[p.DoubleDecomposition = 3] = "DoubleDecomposition"
                        }
                        )(f.IReactionType || (f.IReactionType = {}))
                    }
                    )(m.chemicalReaction || (m.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = h.dataStruct.List
                          , c = function() {
                            function l() {
                                this.dataStructManager = new f.ChemicalDataStructManager,
                                this.reactionDataManager = new f.ReactionDataStructManager,
                                this.worldList = new p,
                                this.dissolveCalculator = new f.DissolveCalculator,
                                this.ionizeCalculator = new f.IonizeCalculator,
                                this.reactCalculator = new f.ReactCalculator,
                                this.separateOutCalculator = new f.SeparateOutCalculator,
                                this.reactUtil = new f.ReactUtil(this),
                                console.log("ChemicalReactionEngine")
                            }
                            return l.prototype.destroy = function() {
                                this.worldList.getAllUserData().forEach(function(i) {
                                    i.destroy()
                                }),
                                this.worldList.destroy(),
                                this.worldList = null,
                                this.dataStructManager.destroy(),
                                this.dataStructManager = null,
                                this.reactionDataManager.destroy(),
                                this.reactionDataManager = null,
                                this.dissolveCalculator.destroy(),
                                this.dissolveCalculator = null,
                                this.ionizeCalculator.destroy(),
                                this.ionizeCalculator = null,
                                this.reactCalculator.destroy(),
                                this.reactCalculator = null,
                                this.separateOutCalculator.destroy(),
                                this.separateOutCalculator = null,
                                this.reactUtil.destroy(),
                                this.reactUtil = null
                            }
                            ,
                            l.prototype.initData = function(i, e) {
                                this.dataStructManager.parseData(i),
                                this.reactionDataManager.parseData(e)
                            }
                            ,
                            l.prototype.createChemicalData = function(i, e, t, a) {
                                var n = this.dataStructManager.getChemical(i, e);
                                return n ? new f.ChemicalData(this,n,t,a) : null
                            }
                            ,
                            l.prototype.createChemicalData0 = function(i, e, t) {
                                var a = this.dataStructManager.getChemicalByUID(i);
                                return a ? new f.ChemicalData(this,a,e,t) : null
                            }
                            ,
                            l.prototype.update = function(i) {
                                var e = this;
                                this.getAllReactionWorld().forEach(function(t) {
                                    t.enabled ? (e.dissolveCalculator.calCulate(t, i),
                                    e.ionizeCalculator.calCulate(t, i),
                                    e.reactCalculator.calCulate(t, i),
                                    e.ionizeCalculator.calCulate(t, i),
                                    e.separateOutCalculator.calCulate(t, i)) : e.reactCalculator.reactionResult = [],
                                    t.setReactionResult(e.reactCalculator.reactionResult),
                                    t.update(i)
                                })
                            }
                            ,
                            l.prototype.addReactionWorld = function(i) {
                                this.worldList.add(i.node)
                            }
                            ,
                            l.prototype.removeReactionWorld = function(i) {
                                this.worldList.remove(i.node)
                            }
                            ,
                            l.prototype.getAllReactionWorld = function() {
                                return this.worldList.getAllUserData()
                            }
                            ,
                            l
                        }();
                        f.ChemicalReactionEngine = c
                    }
                    )(m.chemicalReaction || (m.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function() {
                            function l() {}
                            return l.mixColor = function(i) {
                                for (var e = new c, t = 0; t < i.length; t++)
                                    e = l.mixColor1(e, l.toNBColor(i[t].color, i[t].alpha));
                                return l.toIColor(e)
                            }
                            ,
                            l.mixColor1 = function(i, e) {
                                var t = new c;
                                return t.a = l.mixa1(i.a, e.a),
                                t.a !== 0 && (t.R = l.mix1(i.a, i.R, e.a, e.R),
                                t.G = l.mix1(i.a, i.G, e.a, e.G),
                                t.B = l.mix1(i.a, i.B, e.a, e.B)),
                                t
                            }
                            ,
                            l.toNBColor = function(i, e) {
                                return new c(255 & i >> 16,255 & i >> 8,255 & i >> 0,e)
                            }
                            ,
                            l.toIColor = function(i) {
                                return {
                                    alpha: i.a,
                                    color: i.getColor()
                                }
                            }
                            ,
                            l.mixa1 = function(i, e) {
                                return i + e - i * e
                            }
                            ,
                            l.mix1 = function(i, e, t, a) {
                                return (e * i * (1 - t) + a * t) / (i + t - i * t)
                            }
                            ,
                            l
                        }();
                        f.ColorUtil = p;
                        var c = function() {
                            function l(i, e, t, a) {
                                i === void 0 && (i = 0),
                                e === void 0 && (e = 0),
                                t === void 0 && (t = 0),
                                a === void 0 && (a = 0),
                                this.R = i,
                                this.G = e,
                                this.B = t,
                                this.a = a
                            }
                            return l.prototype.clone = function() {
                                return new l(this.R,this.G,this.B,this.a)
                            }
                            ,
                            l.prototype.getColor = function() {
                                return this.R << 16 | this.G << 8 | this.B << 0
                            }
                            ,
                            l
                        }();
                        f.NBColor = c
                    }
                    )(m.chemicalReaction || (m.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.abs;
                (function(f) {
                    (function(p) {
                        var c = function() {
                            function l() {
                                this.subStr = "\u2080\u2081\u2082\u2083\u2084\u2085\u2086\u2087\u2088\u2089",
                                this.supStr = "\u2070\xB9\xB2\xB3\u2074\u2075\u2076\u2077\u2078\u2079"
                            }
                            return l.prototype.calculate = function(i) {
                                var e = i.reactants
                                  , t = i.products;
                                return [this.fywscw(e, !1, !1), this.fywscw(t, !this.hasGas(e) && this.hasGas(t), !this.hasSolid(e) && this.hasSolid(t))].join("->")
                            }
                            ,
                            l.prototype.hasGas = function(i) {
                                return this.hasGasSolid(i, "g")
                            }
                            ,
                            l.prototype.hasSolid = function(i) {
                                return this.hasGasSolid(i, "s")
                            }
                            ,
                            l.prototype.hasGasSolid = function(i, e) {
                                for (var t = 0; t < i.length; t++)
                                    if (i[t].phaseType === e)
                                        return !0;
                                return !1
                            }
                            ,
                            l.prototype.fywscw = function(i, e, t) {
                                for (var a = [], n = 0, o; n < i.length; n++)
                                    o = i[n],
                                    a.push([1 < o.coefficient ? o.coefficient : "", this.formatFormula(o.formula), this.getSup(o.valence), o.valence === 0 ? "" : 0 < o.valence ? "\u207A" : "\u207B", o.phaseType === "g" && e ? "\u2191" : "", o.phaseType === "s" && t ? "\u2193" : ""].join(""));
                                return a.join("+")
                            }
                            ,
                            l.prototype.formatFormula = function(i) {
                                for (var e = [], t = 0; t < i.length; t++) {
                                    var a = i.charAt(t)
                                      , n = parseInt(a, 10);
                                    isNaN(n) ? (e.push(a),
                                    a === "\xB7" && (t++,
                                    e.push(i.charAt(t)))) : e.push(this.subStr[n])
                                }
                                return e.join("")
                            }
                            ,
                            l.prototype.getSup = function(i) {
                                return i = m(i),
                                2 > i ? "" : this.supStr.charAt(i)
                            }
                            ,
                            l
                        }();
                        p.EquationCalculater = c
                    }
                    )(f.chemicalReaction || (f.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min;
                (function(f) {
                    (function(p) {
                        var c = h.utils.Constant
                          , l = function() {
                            function i() {}
                            return i.createChemicalData = function(e, t, a, n, o) {
                                return o === void 0 && (o = 0),
                                e && e.world ? p.WorldUtil.createChemicalData(e.world, t, a, n, o) : null
                            }
                            ,
                            i.createChemicalData0 = function(e, t, a, n) {
                                return n === void 0 && (n = 0),
                                e && e.world ? p.WorldUtil.createChemicalData0(e.world, t, a, n) : null
                            }
                            ,
                            i.getMolecules = function(e) {
                                for (var t = [], a = 0, n; a < e.chemicals.length; a++)
                                    n = e.chemicals[a],
                                    n.valence === 0 && t.push(n);
                                return t
                            }
                            ,
                            i.getIons = function(e) {
                                for (var t = [], a = 0, n; a < e.chemicals.length; a++)
                                    n = e.chemicals[a],
                                    n.valence !== 0 && t.push(n);
                                return t
                            }
                            ,
                            i.getPossibleIons = function(e) {
                                for (var t = [], a = {}, n = 0, o, s, r; n < e.chemicals.length; n++)
                                    if (o = e.chemicals[n],
                                    o.valence === 0)
                                        for (var u = 0; u < o.ions.length; u++)
                                            s = o.ions[u],
                                            r = s.chemicalId,
                                            a[r] || (a[r] = !0,
                                            t.push({
                                                formula: s.formula,
                                                valence: s.valence,
                                                chemicalId: s.chemicalId
                                            }));
                                    else
                                        a[o.chemicalId] || (a[o.chemicalId] = !0,
                                        t.push({
                                            formula: o.formula,
                                            valence: o.valence,
                                            chemicalId: o.chemicalId
                                        }));
                                return t
                            }
                            ,
                            i.canAddChemical = function(e, t) {
                                return t.phaseType === e.phaseType && (e.phaseType === "g" || (e.phaseType === "l" ? t.valence !== 0 || i.canSolubleInPhase(e, t) : e.phaseType === "s" && e.hasChemical(t.chemicalId)))
                            }
                            ,
                            i.getPhasePH = function(e) {
                                if (e && e.phaseType === "l") {
                                    var t = e.getMolarConcentrationByFormula("H", 1);
                                    return c.c2pH(t)
                                }
                                return 7
                            }
                            ,
                            i.canSolubleInPhase = function(e, t) {
                                var a = i.getSolvent(e);
                                if (a)
                                    return i.canSolubleIn(t, a);
                                for (var n = 0; n < e.chemicals.length; n++)
                                    if (i.canSolubleIn(t, e.chemicals[n]))
                                        return !0;
                                return !1
                            }
                            ,
                            i.canSolubleIn = function(e, t) {
                                return !!(e && t) && (e.chemicalId === t.chemicalId || e.dissolveType !== p.DissolveType.None)
                            }
                            ,
                            i.canMergePhase = function(e, t) {
                                if (e.phaseType !== t.phaseType)
                                    return !1;
                                if (e.phaseType === "g")
                                    return !0;
                                if (e.phaseType === "l") {
                                    var a = i.getSolvent(e)
                                      , n = i.getSolvent(t);
                                    return a && n ? i.canSolubleIn(a, n) || i.canSolubleIn(n, a) : a ? i.canPhaseSolubleIn(t, a) : n ? i.canPhaseSolubleIn(e, n) : i.canPhaseSolubleInPhase(e, t)
                                }
                                return e.phaseType === "s" && e.hasChemical(t.getChemicals()[0].chemicalId)
                            }
                            ,
                            i.mergePhase = function(e, t) {
                                e.forEachChemical(function(a) {
                                    t.addChemical(a)
                                })
                            }
                            ,
                            i.getSolvent = function(e) {
                                var t;
                                return e.forEachChemical(function(a) {
                                    a.isSolvent && (t ? 0 > p.ChemicalUtil.getSolventPolarity(a) - p.ChemicalUtil.getSolventPolarity(t) && (t = a) : t = a)
                                }),
                                t
                            }
                            ,
                            i.getMolarConcentration = function(e, t) {
                                var a = e.getChemical(t);
                                return a ? a.mol / e.getVolumeL() : 0
                            }
                            ,
                            i.getMolarConcentrationOfH2O = function(e, t) {
                                return i.getSoluteMolConOfSolvent(e, t, p.ChemicalIdConstant.H2O)
                            }
                            ,
                            i.getSoluteMolConOfSolvent = function(e, t, a) {
                                var n = e.getChemical(t)
                                  , o = e.getChemical(a);
                                return n && o && 0 < o.density && 0 < n.mass ? n.mol / n.mass * n.density : 0
                            }
                            ,
                            i.getMolarConcentration0 = function(e, t, a) {
                                return i.getMolarConcentration(e, p.ChemicalUtil.createChemicalId(t, a))
                            }
                            ,
                            i.getTotalMol = function(e, t) {
                                var a = e.getChemical(t)
                                  , n = a ? a.mol : 0
                                  , o = e.world.engine.dataStructManager.getChemicalByUID(t)
                                  , s = [];
                                if (o)
                                    for (var r = 0; r < o.ions.length; r++) {
                                        var u = o.ions[r]
                                          , d = e.getChemical(u.chemicalId);
                                        d ? s.push(d.mol / u.count) : s.push(0)
                                    }
                                return n + (s.length ? m.apply(Math, s) : 0)
                            }
                            ,
                            i.getIonMol = function(e, t) {
                                var a = e.getChemical(t.chemicalId);
                                return a ? a.mol : 0
                            }
                            ,
                            i.getContactArea = function(e, t) {
                                return e.userData.view && t.userData.view ? [e.userData.view.area, t.userData.view.area, e.userData.view.connectArea(t.userData.view)] : [1, 1, 1]
                            }
                            ,
                            i.isConnect = function(e, t) {
                                return !!(e.userData.view && t.userData.view) && e.userData.view.isConnect(t.userData.view)
                            }
                            ,
                            i.electrify = function(e) {
                                return !!e.userData.view && e.userData.view.electrify()
                            }
                            ,
                            i.light = function(e) {
                                return e.userData.view && e.userData.view.light(),
                                !1
                            }
                            ,
                            i.hasAllIons = function(e, t) {
                                for (var a = 0, n; a < t.length; a++)
                                    if (n = t[a],
                                    !e.hasChemical(n.chemicalId))
                                        return !1;
                                return !0
                            }
                            ,
                            i.getGasPartialPressure = function(e, t) {
                                var a = e.getChemical(t);
                                return a ? e.pressure * a.mol / e.mol : 0
                            }
                            ,
                            i.getSolidVolume = function(e) {
                                for (var t = 0, a = 0, n; a < e.chemicals.length; a++)
                                    n = e.chemicals[a].density,
                                    n !== 0 && (t += e.chemicals[a].mass / n);
                                return t
                            }
                            ,
                            i.getLiquidVolume = function(e) {
                                for (var t = 0, a = 0, n; a < e.chemicals.length; a++)
                                    n = e.chemicals[a],
                                    t += n.mol * n.molarVolume,
                                    n.valence === 0 && n.molarVolume === 0 && n.dataStruct.defaultPhaseType === "l" && (t += n.mass / n.density);
                                for (var o = {}, a = 0, n; a < e.chemicals.length; a++)
                                    n = e.chemicals[a],
                                    n.valence !== 0 && (o[n.chemicalId] = n.mol);
                                var s = e.engine.dataStructManager.molarVolumeMap
                                  , r = function(y) {
                                    if (s.hasOwnProperty(y)) {
                                        var g = e.engine.dataStructManager.getChemicalByUID(y);
                                        if (g.ions.length) {
                                            var C = i.getTotalIonMol(g.ions, o);
                                            C && (t += s[y] * C,
                                            g.ions.forEach(function(T) {
                                                o[T.chemicalId] -= C * T.count
                                            }))
                                        }
                                    }
                                };
                                for (var u in s)
                                    r(u);
                                return t
                            }
                            ,
                            i.getTotalIonMol = function(e, t) {
                                for (var a = [], n = 0, o; n < e.length; n++)
                                    if (o = e[n],
                                    t[o.chemicalId])
                                        a.push(t[o.chemicalId] / o.count);
                                    else
                                        return 0;
                                return a.length ? m.apply(Math, a) : 0
                            }
                            ,
                            i.canPhaseSolubleIn = function(e, t) {
                                for (var a = 0; a < e.chemicals.length; a++)
                                    if (i.canSolubleIn(e.chemicals[a], t))
                                        return !0;
                                return !1
                            }
                            ,
                            i.canPhaseSolubleInPhase = function(e, t) {
                                for (var a = 0; a < e.chemicals.length; a++)
                                    if (i.canPhaseSolubleIn(t, e.chemicals[a]))
                                        return !0;
                                return !1
                            }
                            ,
                            i
                        }();
                        p.PhaseUtil = l
                    }
                    )(f.chemicalReaction || (f.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.log;
                (function(f) {
                    (function(p) {
                        var c = function() {
                            function l() {}
                            return l.getConstantRate = function(i) {
                                return l.getRate(i, l.getConstantT, l.getConstantC)
                            }
                            ,
                            l.getLinearRate = function(i) {
                                return l.getRate(i, l.getLinearT, l.getLinearC)
                            }
                            ,
                            l.getExpRate = function(i) {
                                return l.getRate(i, l.getExpT, l.getExpC)
                            }
                            ,
                            l.getInverseRate = function(i) {
                                return l.getRate(i, l.getInverseT, l.getInverseC)
                            }
                            ,
                            l.getConstantT = function(i, e, t) {
                                return (i - t) / e
                            }
                            ,
                            l.getConstantC = function(i, e, t) {
                                return i - e * t
                            }
                            ,
                            l.getLinearT = function(i, e, t) {
                                return (i - t) / e
                            }
                            ,
                            l.getLinearC = function(i, e, t) {
                                return i - e * t
                            }
                            ,
                            l.getExpT = function(i, e, t) {
                                return -m(t / i) / e
                            }
                            ,
                            l.getExpC = function(i, e, t) {
                                var a = Math.exp;
                                return i * a(-e * t)
                            }
                            ,
                            l.getInverseT = function(i, e, t) {
                                return (1 / t - 1 / i) / e
                            }
                            ,
                            l.getInverseC = function(i, e, t) {
                                return 1 / (1 / i + e * t)
                            }
                            ,
                            l.getRate = function(i, e, t) {
                                for (var a = i.c0, n = i.k, o = i.dt, s = [], r = 0; r < i.reactants.length; r++) {
                                    var u = i.reactants[r]
                                      , d = u.mol
                                      , y = u.v
                                      , g = e(a, n, d / y)
                                      , C = t(a, n, g + o)
                                      , T = d - C * y;
                                    s[r] = T
                                }
                                for (var A = 1 / 0, r = 0, S; r < s.length; r++)
                                    S = s[r] / i.reactants[r].n,
                                    S < A && (A = S);
                                return A
                            }
                            ,
                            l
                        }();
                        p.ReactionRateUtil = c
                    }
                    )(f.chemicalReaction || (f.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function() {
                            function c() {}
                            return c.createChemicalData = function(l, i, e, t, a) {
                                if (a === void 0 && (a = 0),
                                l && l.engine) {
                                    var n = l.engine.createChemicalData(i, e, t, a);
                                    if (n)
                                        return n;
                                    console.log("\u836F\u54C1\u4E0D\u5B58\u5728\uFF0C\u9700\u8981\u5728\u836F\u54C1\u8868\u91CC\u914D\u7F6E\uFF1A", i, e)
                                }
                                return null
                            }
                            ,
                            c.createChemicalData0 = function(l, i, e, t) {
                                if (t === void 0 && (t = 0),
                                l && l.engine) {
                                    var a = l.engine.createChemicalData0(i, e, t);
                                    if (a)
                                        return a;
                                    console.log("\u836F\u54C1\u4E0D\u5B58\u5728\uFF0C\u9700\u8981\u5728\u836F\u54C1\u8868\u91CC\u914D\u7F6E\uFF1A", i)
                                }
                                return null
                            }
                            ,
                            c.getAirPhase = function(l, i, e, t) {
                                i === void 0 && (i = 200),
                                e === void 0 && (e = 101e3),
                                t === void 0 && (t = 300);
                                var a = new f.PhaseData(l,"g")
                                  , n = l.createChemicalData("O2", 0, null, 1)
                                  , o = l.createChemicalData("N2", 0, null, 4);
                                return a.addChemical(n),
                                a.addChemical(o),
                                a.temperature = t,
                                a.volume = i,
                                a.pressure = e,
                                a
                            }
                            ,
                            c.createSolution = function(l, i, e) {
                                e === void 0 && (e = 2e-4);
                                var t = c.createSolutionByConcentration(l, i);
                                return t.scaleN(e / 1e3),
                                t
                            }
                            ,
                            c.hasChemical = function(l, i, e) {
                                e === void 0 && (e = 0);
                                var t = !1;
                                return l.forEachChemical(function(a) {
                                    !t && f.ChemicalUtil.equal(a, i) && a.mol > e && (t = !0)
                                }),
                                t
                            }
                            ,
                            c.getChemical = function(l, i) {
                                var e = [];
                                return l.forEachChemical(function(t) {
                                    f.ChemicalUtil.equal(t, i) && e.push(t)
                                }),
                                e
                            }
                            ,
                            c.getSolution = function(l, i) {
                                for (var e = f.ChemicalUtil.createChemicalId(i, 0), t = l.getPhaseByType("l"), a = 0, n; a < t.length; a++)
                                    if (n = t[a],
                                    n.hasChemical(e))
                                        return n;
                                return null
                            }
                            ,
                            c.createSolutionByConcentration = function(l, i) {
                                var e = l.createChemicalData(i.solvent, 0, null, 1)
                                  , t = new f.PhaseData(l,e.phaseType);
                                t.addChemical(e);
                                var a = i.solute;
                                if (a) {
                                    var n = l.createChemicalData(a.formula, 0, e.phaseType, a.concentration);
                                    t.volume = .001 - n.mol * n.molarVolume,
                                    t.addChemical(n)
                                } else
                                    t.volume = .001;
                                return t
                            }
                            ,
                            c
                        }();
                        f.WorldUtil = p
                    }
                    )(m.chemicalReaction || (m.chemicalReaction = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var U = function() {
                var h = function(f, p) {
                    return h = Object.setPrototypeOf || {
                        __proto__: []
                    }instanceof Array && function(c, l) {
                        c.__proto__ = l
                    }
                    || function(c, l) {
                        for (var i in l)
                            l.hasOwnProperty(i) && (c[i] = l[i])
                    }
                    ,
                    h(f, p)
                };
                return function(m, f) {
                    function p() {
                        this.constructor = m
                    }
                    h(m, f),
                    m.prototype = f === null ? Object.create(f) : (p.prototype = f.prototype,
                    new p)
                }
            }(), v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function() {
                            function c(l, i) {
                                this.UID = c.COUNTING++,
                                this.name = "",
                                this.disabled = !1,
                                this.targetID = -1,
                                this.assembleData = i,
                                this.engine = l,
                                this.name = "AssembleBaseInstance_" + this.UID
                            }
                            return c.prototype.destroy = function() {
                                this.assembleData.destroy(),
                                this.assembleData = null,
                                this.engine = null
                            }
                            ,
                            c.COUNTING = 1,
                            c
                        }();
                        f.AssembleBase = p
                    }
                    )(m.assemble || (m.assemble = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.sqrt;
                (function(f) {
                    (function(p) {
                        var c = h.dataStruct.List
                          , l = function() {
                            function i(e) {
                                this.cardList = new c,
                                this.slotList = new c,
                                this.view = e
                            }
                            return i.prototype.destroy = function() {
                                this.cardList.destroy(),
                                this.cardList = null,
                                this.slotList.destroy(),
                                this.slotList = null
                            }
                            ,
                            i.prototype.addCard = function(e) {
                                this.cardList.add(e.node)
                            }
                            ,
                            i.prototype.removeCard = function(e) {
                                this.cardList.remove(e.node)
                            }
                            ,
                            i.prototype.addSlot = function(e) {
                                this.slotList.add(e.node)
                            }
                            ,
                            i.prototype.removeSlot = function(e) {
                                this.slotList.remove(e.node)
                            }
                            ,
                            i.prototype.getAllCards = function() {
                                return this.cardList.getAllUserData()
                            }
                            ,
                            i.prototype.getAllSlots = function() {
                                return this.slotList.getAllUserData()
                            }
                            ,
                            i.prototype.checkCollision = function(e) {
                                if (e.disabled || !e.isFree())
                                    return null;
                                for (var t = this.getAllSlots(), a = null, n = 1 / 0, o = 0, s, r; o < t.length; o++)
                                    s = t[o],
                                    s.canAddCard(e) && e.canAddTo(s) && this.hitTest(s, e) && (r = this.distance(s, e),
                                    r < n && (n = r,
                                    a = s));
                                return a
                            }
                            ,
                            i.prototype.checkSlotCollision = function(e) {
                                if (e.disabled || e.isFull())
                                    return null;
                                for (var t = this.getAllCards(), a = null, n = 1 / 0, o = 0, s, r; o < t.length; o++)
                                    s = t[o],
                                    e.canAddCard(s) && s.canAddTo(e) && this.hitTest(e, s) && (r = this.distance(e, s),
                                    r < n && (n = r,
                                    a = s));
                                return a
                            }
                            ,
                            i.prototype.update = function(e) {
                                var t = this;
                                this.getAllCards().sort(function(a, n) {
                                    return a.priority - n.priority
                                }).forEach(function(a) {
                                    t.cardFollow(a)
                                })
                            }
                            ,
                            i.prototype.cardFollow = function(e) {
                                if (e.state === p.AssembleState.WORK && e.slot) {
                                    var t = e.assembleData.view
                                      , a = this.getP(t.parent, e.assembleData)
                                      , n = this.getP(t.parent, e.slot.assembleData);
                                    t.x += n.x - a.x,
                                    t.y += n.y - a.y
                                }
                            }
                            ,
                            i.prototype.slotFollowCard = function(e) {
                                if (e.state === p.AssembleState.WORK && e.slot) {
                                    var t = e.slot.assembleData.view
                                      , a = this.getP(t.parent, e.assembleData)
                                      , n = this.getP(t.parent, e.slot.assembleData);
                                    t.x += a.x - n.x,
                                    t.y += a.y - n.y
                                }
                            }
                            ,
                            i.prototype.getP = function(e, t) {
                                return e.toLocal(t.p0, t.hitArea)
                            }
                            ,
                            i.prototype.isEqualP = function(e, t) {
                                var a = e.x - t.x
                                  , n = e.y - t.y;
                                return 1e-8 > a * a + n * n
                            }
                            ,
                            i.prototype.distance = function(e, t) {
                                var a = t.assembleData.hitArea.toGlobal(t.assembleData.p0)
                                  , n = e.assembleData.hitArea.toGlobal(e.assembleData.p0)
                                  , o = a.x - n.x
                                  , s = a.y - n.y;
                                return m(o * o + s * s)
                            }
                            ,
                            i.prototype.hitTest = function(e, t) {
                                return e.assembleData.hitArea.hitTest(t.assembleData.hitArea)
                            }
                            ,
                            i
                        }();
                        p.AssembleEngine = l
                    }
                    )(f.assemble || (f.assemble = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        (function(p) {
                            p.FREE = "FREE",
                            p.HOLD = "HOLD",
                            p.WORK = "WORK"
                        }
                        )(f.AssembleState || (f.AssembleState = {}))
                    }
                    )(m.assemble || (m.assemble = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = h.dataStruct.ListNode
                          , c = function(l) {
                            function i(e, t, a) {
                                a === void 0 && (a = -1);
                                var n = l.call(this, e, t) || this;
                                return n.mask = -1,
                                n.priority = 0,
                                n.state = f.AssembleState.FREE,
                                n.userData = {},
                                n.name = "CardInstance_" + n.UID,
                                n.mask = a,
                                n.node = new p(n),
                                n.engine.addCard(n),
                                n
                            }
                            return U(i, l),
                            i.prototype.destroy = function() {
                                this.free(),
                                this.slot = null,
                                this.engine.removeCard(this),
                                this.node.destroy(),
                                this.node = null,
                                this.userData = null,
                                l.prototype.destroy.call(this)
                            }
                            ,
                            i.prototype.isFree = function() {
                                return this.state === f.AssembleState.FREE && !this.slot
                            }
                            ,
                            i.prototype.free = function() {
                                this.slot && this.slot.removeCard(this)
                            }
                            ,
                            i.prototype.checkCollision = function() {
                                return this.engine.checkCollision(this)
                            }
                            ,
                            i.prototype.follow = function() {
                                this.engine.cardFollow(this)
                            }
                            ,
                            i.prototype.canAddTo = function(e) {
                                return e.assembleData.owner !== this.assembleData.owner && !this.disabled && this.isFree() && (this.mask & e.group) != 0 && (this.targetID === -1 || this.targetID === e.UID)
                            }
                            ,
                            i
                        }(f.AssembleBase);
                        f.Card = c
                    }
                    )(m.assemble || (m.assemble = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = h.dataStruct.ListNode
                          , c = function(l) {
                            function i(e, t, a, n) {
                                a === void 0 && (a = -1),
                                n === void 0 && (n = 1);
                                var o = l.call(this, e, t) || this;
                                return o.group = -1,
                                o.userData = {},
                                o.cards = [],
                                o.maxCards = 1,
                                o.holdCnt = 0,
                                o.name = "SlotInstance_" + o.UID,
                                o.group = a,
                                o.maxCards = n,
                                o.node = new p(o),
                                o.engine.addSlot(o),
                                o
                            }
                            return U(i, l),
                            i.prototype.destroy = function() {
                                this.engine.removeSlot(this),
                                this.node.destroy(),
                                this.node = null,
                                this.cards.forEach(function(e) {
                                    e.slot = null,
                                    e.state = f.AssembleState.FREE
                                }),
                                this.cards = null,
                                this.holdCnt = 0,
                                this.userData = null,
                                l.prototype.destroy.call(this)
                            }
                            ,
                            i.prototype.getCards = function() {
                                return this.cards
                            }
                            ,
                            i.prototype.forEachCard = function(e) {
                                this.cards.slice().forEach(e)
                            }
                            ,
                            i.prototype.isEmpty = function() {
                                return this.cards.length + this.holdCnt === 0
                            }
                            ,
                            i.prototype.isFull = function() {
                                return this.holdCnt + this.cards.length >= this.maxCards
                            }
                            ,
                            i.prototype.canAddCard = function(e) {
                                return e.assembleData.owner !== this.assembleData.owner && !this.disabled && !this.hasCard(e) && !this.isFull() && (this.group & e.mask) != 0 && (this.targetID === -1 || this.targetID === e.UID)
                            }
                            ,
                            i.prototype.hasCard = function(e) {
                                return e.slot === this
                            }
                            ,
                            i.prototype.addCard = function(e) {
                                e.slot && e.slot.removeCard(e),
                                this.cards.push(e),
                                e.slot = this,
                                e.state = f.AssembleState.WORK
                            }
                            ,
                            i.prototype.removeCard = function(e) {
                                var t = this.cards.indexOf(e);
                                t !== -1 && (this.cards.splice(t, 1),
                                e.state = f.AssembleState.FREE,
                                e.slot = null)
                            }
                            ,
                            i.prototype.removeAllCards = function() {
                                for (var e = this.cards.length, t; e--; )
                                    t = this.cards.pop(),
                                    t.state = f.AssembleState.FREE,
                                    t.slot = null
                            }
                            ,
                            i.prototype.checkCollision = function() {
                                return this.engine.checkSlotCollision(this)
                            }
                            ,
                            i.prototype.follow = function(e) {
                                this.engine.slotFollowCard(e)
                            }
                            ,
                            i.prototype.updateHoldCnt = function(e) {
                                e ? ++this.holdCnt : --this.holdCnt,
                                (this.holdCnt > this.maxCards || 0 > this.holdCnt) && console.error("updateBusyCnt err >> busyCnt: " + this.holdCnt + ", cardLen: " + this.cards.length + ", isAdd: " + e)
                            }
                            ,
                            i
                        }(f.AssembleBase);
                        f.Slot = c
                    }
                    )(m.assemble || (m.assemble = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = PIXI.Point
                          , c = function() {
                            function l(i, e, t, a, n, o) {
                                this.owner = i,
                                this.view = e,
                                this.hitArea = t,
                                this.p0 = a || new p(0,0),
                                this.p1 = n || new p(0,-1),
                                this.data = o
                            }
                            return l.prototype.destroy = function() {
                                this.owner = null,
                                this.view = null,
                                this.hitArea = null,
                                this.p0 = null,
                                this.p1 = null,
                                this.data = null
                            }
                            ,
                            l
                        }();
                        f.AssembleAble = c
                    }
                    )(m.assemble || (m.assemble = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = PIXI.Graphics
                          , c = function() {
                            function l() {}
                            return l.getCircle = function(i, e, t, a) {
                                var n = new p;
                                return n.beginFill(16711680, .3),
                                n.drawCircle(0, 0, i),
                                n.endFill(),
                                l.initShape(e, t, a, n),
                                n
                            }
                            ,
                            l.getRect = function(i, e, t, a, n, o, s) {
                                o === void 0 && (o = 0),
                                s === void 0 && (s = 0);
                                var r = new p;
                                return r.beginFill(16711680, .3),
                                r.drawRect(o, s, i, e),
                                r.endFill(),
                                l.initShape(t, a, n, r),
                                r
                            }
                            ,
                            l.getBox = function(i, e, t, a, n) {
                                var o = new p;
                                return o.beginFill(16711680, .3),
                                o.drawRect(-i / 2, -e / 2, i, e),
                                o.endFill(),
                                l.initShape(t, a, n, o),
                                o
                            }
                            ,
                            l.getPolygon = function(i, e, t, a) {
                                var n = new p;
                                n.beginFill(16711680, .3);
                                for (var o = 0; o < i.length; o++)
                                    o == 0 ? n.moveTo(i[o].x, i[o].y) : n.lineTo(i[o].x, i[o].y);
                                return n.closePath(),
                                n.endFill(),
                                l.initShape(e, t, a, n),
                                n
                            }
                            ,
                            l.initShape = function(i, e, t, a) {
                                i.addChild(a),
                                a.x = e,
                                a.y = t,
                                a.name = "AssembleShape",
                                l.DEBUG || (a.visible = !1)
                            }
                            ,
                            l.DEBUG = !1,
                            l
                        }();
                        f.AssembleShape = c
                    }
                    )(m.assemble || (m.assemble = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = h.dataStruct.List
                          , c = function() {
                            function l() {
                                this.poleList = new p
                            }
                            return l.prototype.destroy = function() {
                                this.poleList.destroy(),
                                this.poleList = null
                            }
                            ,
                            l.prototype.addPole = function(i) {
                                this.poleList.add(i.node)
                            }
                            ,
                            l.prototype.removePole = function(i) {
                                this.poleList.remove(i.node)
                            }
                            ,
                            l.prototype.getAllPoles = function() {
                                return this.poleList.getAllUserData()
                            }
                            ,
                            l.prototype.calculate = function(i) {
                                this.getAllPoles().forEach(function(e) {
                                    e.calculate()
                                })
                            }
                            ,
                            l
                        }();
                        f.PoleManager = c
                    }
                    )(m.electroChemistry || (m.electroChemistry = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function() {
                            function c() {
                                this.elecWorld = new f.World,
                                this.dataManager = new f.DataManager,
                                this.poleManager = new f.PoleManager
                            }
                            return c.prototype.destroy = function() {
                                this.elecWorld.destroy(),
                                this.elecWorld = null,
                                this.dataManager.destroy(),
                                this.dataManager = null,
                                this.poleManager.destroy(),
                                this.poleManager = null
                            }
                            ,
                            c.prototype.update = function(l) {
                                this.poleManager.calculate(!0),
                                this.elecWorld.calculate(!0, l)
                            }
                            ,
                            c
                        }();
                        f.ElectroChemistryEngine = p
                    }
                    )(m.electroChemistry || (m.electroChemistry = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.log
                  , f = Math.abs;
                (function(p) {
                    (function(c) {
                        var l = h.dataStruct.ListNode
                          , i = function() {
                            function e(t, a, n) {
                                this.uid = e.COUNTING++,
                                this.reactType = h.ElectroReactType.N,
                                this.node = new l(this),
                                this.formula = "",
                                this.reacts = [],
                                this.pH = 7,
                                this.engine = t,
                                t.poleManager.addPole(this),
                                this.userData = n,
                                this.vertex = a
                            }
                            return Object.defineProperty(e.prototype, "resultStr", {
                                get: function() {
                                    var a = ["uid	\u7535\u52BF	\u7C7B\u578B	\u65B9\u7A0B\u5F0F	\u78B1	\u4E2D\u6027"];
                                    return this.reacts.forEach(function(n) {
                                        a.push([n.react.uid, n.U, n.type, n.react.equation, n.react.acid, n.react.neutral].join("	"))
                                    }),
                                    a.join(`
`)
                                },
                                enumerable: !0,
                                configurable: !0
                            }),
                            e.prototype.destroy = function() {
                                this.engine.poleManager.removePole(this),
                                this.engine = null,
                                this.reacts = null,
                                this.node = null,
                                this.userData = null,
                                this.vertex = null
                            }
                            ,
                            e.prototype.calculate = function() {
                                var t = this;
                                this.react(),
                                this.reactN = null,
                                this.reactP = null;
                                var a = -Infinity
                                  , n = 1 / 0;
                                this.reacts.forEach(function(o) {
                                    o.type === h.ElectroReactType.N ? o.U > a && (a = o.U,
                                    t.reactN = o) : o.U < n && (n = o.U,
                                    t.reactP = o)
                                }),
                                this.vertex.SUN = this.getUN(),
                                this.vertex.SUP = this.getUP()
                            }
                            ,
                            e.prototype.getUN = function() {
                                return this.reactN ? this.reactN.U : 0
                            }
                            ,
                            e.prototype.getUP = function() {
                                return this.reactP ? this.reactP.U : 0
                            }
                            ,
                            e.prototype.getReaction = function() {
                                return this.reactType === h.ElectroReactType.P && this.getReactionP(),
                                this.getReactionN()
                            }
                            ,
                            e.prototype.getReactionN = function() {
                                return this.reactN
                            }
                            ,
                            e.prototype.getReactionP = function() {
                                return this.reactP
                            }
                            ,
                            e.prototype.react = function() {
                                this.pH = this.getPH();
                                for (var t = [], a = this.engine.dataManager.getReactData(), n = 0, o; n < a.length; n++)
                                    o = a[n],
                                    this.canReactItem(o) && t.push({
                                        react: o,
                                        U: this.getReactU(o),
                                        type: o.type
                                    });
                                this.reacts = t
                            }
                            ,
                            e.prototype.getReactU = function(t) {
                                var a = this
                                  , n = t.E
                                  , o = this.getECoefficient(t.reactants);
                                return t.reactants.forEach(function(s) {
                                    n += a.calculateU(s, 1, o)
                                }),
                                t.products.forEach(function(s) {
                                    n += a.calculateU(s, -1, o)
                                }),
                                n += this.getOffsetU(t),
                                n
                            }
                            ,
                            e.prototype.getECoefficient = function(t) {
                                for (var a = 0; a < t.length; a++)
                                    if (t[a].phaseType === "e")
                                        return t[a].coefficient;
                                return 0
                            }
                            ,
                            e.prototype.calculateU = function(t, a, n) {
                                var o = Math.LN10;
                                if (t.phaseType === "g")
                                    return 0;
                                if (t.phaseType === "l") {
                                    if (t.formula === "H2O")
                                        return 0;
                                    var s = 0 < n * a ? 1 : -1
                                      , r = this.getConcentration(t);
                                    return r === 0 && (r = 1e-6),
                                    .059 * s * t.coefficient * m(r) / o / f(n)
                                }
                                return 0
                            }
                            ,
                            e.prototype.canReactItem = function(t) {
                                if (1e-6 > f(this.pH - 7)) {
                                    if (t.neutral !== 1)
                                        return !1
                                } else if (7 < this.pH) {
                                    if (t.acid === 0)
                                        return !1
                                } else if (t.acid === 1)
                                    return !1;
                                for (var a = 0, n; a < t.reactants.length; a++)
                                    if (n = t.reactants[a],
                                    !this.hasChemical(n))
                                        return !1;
                                return !0
                            }
                            ,
                            e.prototype.hasChemical = function(t) {
                                return t.formula === "e" || this.userData.hasChemical(t, this.uid)
                            }
                            ,
                            e.prototype.getConcentration = function(t) {
                                return this.userData.getConcentration(t)
                            }
                            ,
                            e.prototype.getPH = function() {
                                return this.userData.getPH()
                            }
                            ,
                            e.prototype.getOffsetU = function(t) {
                                return t.superE[this.formula] || 0
                            }
                            ,
                            e.COUNTING = 0,
                            e
                        }();
                        c.DPole = i
                    }
                    )(p.electroChemistry || (p.electroChemistry = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function() {
                            function c() {
                                this.data = []
                            }
                            return c.prototype.destroy = function() {
                                this.data = null
                            }
                            ,
                            c.prototype.initData = function(l) {
                                var i = this
                                  , e = new f.EquationCalculater;
                                this.data = l.concat(),
                                this.data.forEach(function(t, a) {
                                    t.eNum = i.getENumInReact(t),
                                    t.reactants.forEach(function(n) {
                                        n.chemicalId = i.createChemicalId(n.formula, n.valence)
                                    }),
                                    t.products.forEach(function(n) {
                                        n.chemicalId = i.createChemicalId(n.formula, n.valence)
                                    }),
                                    t.equation = e.calculate(t)
                                })
                            }
                            ,
                            c.prototype.createChemicalId = function(l, i) {
                                return l + "_" + i
                            }
                            ,
                            c.prototype.getReactData = function() {
                                return this.data
                            }
                            ,
                            c.prototype.getENumInReact = function(l) {
                                for (var i = 0, e; i < l.reactants.length; i++)
                                    if (e = l.reactants[i],
                                    e.formula === "e")
                                        return e.coefficient;
                                return 1
                            }
                            ,
                            c
                        }();
                        f.DataManager = p
                    }
                    )(m.electroChemistry || (m.electroChemistry = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.abs;
                (function(f) {
                    (function(p) {
                        var c = function() {
                            function l() {
                                this.subStr = "\u2080\u2081\u2082\u2083\u2084\u2085\u2086\u2087\u2088\u2089",
                                this.supStr = "\u2070\xB9\xB2\xB3\u2074\u2075\u2076\u2077\u2078\u2079"
                            }
                            return l.prototype.calculate = function(i) {
                                var e = i.reactants
                                  , t = i.products;
                                return [this.fywscw(e, !1, !1), this.fywscw(t, !this.hasGas(e), !1)].join("->")
                            }
                            ,
                            l.prototype.hasGas = function(i) {
                                return this.hasGasSolid(i, "g")
                            }
                            ,
                            l.prototype.hasSolid = function(i) {
                                return this.hasGasSolid(i, "s")
                            }
                            ,
                            l.prototype.hasGasSolid = function(i, e) {
                                for (var t = 0; t < i.length; t++)
                                    if (i[t].phaseType === e)
                                        return !0;
                                return !1
                            }
                            ,
                            l.prototype.fywscw = function(i, e, t) {
                                for (var a = [], n = 0, o; n < i.length; n++)
                                    o = i[n],
                                    a.push([n == 0 ? "" : 0 < o.coefficient ? "+" : "-", 1 < m(o.coefficient) ? m(o.coefficient) : "", this.formatFormula(o.formula), this.getSup(o.valence), o.valence === 0 ? "" : 0 < o.valence ? "\u207A" : "\u207B", o.phaseType === "g" && e ? "\u2191" : "", o.phaseType === "s" && t ? "\u2193" : ""].join(""));
                                return a.join("")
                            }
                            ,
                            l.prototype.formatFormula = function(i) {
                                for (var e = [], t = 0; t < i.length; t++) {
                                    var a = i.charAt(t)
                                      , n = parseInt(a, 10);
                                    isNaN(n) ? (e.push(a),
                                    a === "\xB7" && (t++,
                                    e.push(i.charAt(t)))) : e.push(this.subStr[n])
                                }
                                return e.join("")
                            }
                            ,
                            l.prototype.getSup = function(i) {
                                return i = m(i),
                                2 > i ? "" : this.supStr.charAt(i)
                            }
                            ,
                            l
                        }();
                        p.EquationCalculater = c
                    }
                    )(f.electroChemistry || (f.electroChemistry = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    m[m.N = 0] = "N",
                    m[m.P = 1] = "P"
                }
                )(h.ElectroReactType || (h.ElectroReactType = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function() {
                            function c() {}
                            return c.MIN_I = 1e-10,
                            c
                        }();
                        f.EleConst = p
                    }
                    )(m.electroChemistry || (m.electroChemistry = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.max;
                (function(f) {
                    (function(p) {
                        var c = function() {
                            function l() {
                                this.dt = .016
                            }
                            return l.prototype.calculate = function(i, e) {
                                var t = this;
                                this.dt = e;
                                var a = i.getVertexs()
                                  , n = i.getEdges();
                                n.forEach(function(s) {
                                    s.flag = !0,
                                    s.U = 0,
                                    s.I = 0,
                                    s.SU = 0,
                                    s.Q = 0
                                }),
                                a.forEach(function(s) {
                                    s.U = 0
                                });
                                var o = [];
                                n.forEach(function(s) {
                                    if (s.flag) {
                                        var r = new p.Graph;
                                        r.addEdge(s),
                                        o.push(r)
                                    }
                                }),
                                o.forEach(function(s) {
                                    s.isLoop() && t.calculateGraph(s)
                                })
                            }
                            ,
                            l.prototype.calculateGraph = function(i) {
                                var e = i.getPower(!0)
                                  , t = i.getPower(!1);
                                if (e !== t) {
                                    var a = m(e, t);
                                    if (!(0 >= a)) {
                                        var n = i.getR()
                                          , o = a / n;
                                        a === e ? i.setIU(o, !0) : i.setIU(o, !1),
                                        i.setQ(this.dt)
                                    }
                                }
                            }
                            ,
                            l
                        }();
                        p.Calculater = c
                    }
                    )(f.electroChemistry || (f.electroChemistry = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.abs;
                (function(f) {
                    (function(p) {
                        var c = h.dataStruct.ListNode
                          , l = function() {
                            function i(e) {
                                this.UID = i.COUNTING++,
                                this.name = "Edge_" + this.UID,
                                this.R = 0,
                                this.U = 0,
                                this.I = 0,
                                this.SU = 0,
                                this.Q = 0,
                                this.isBreak = !1,
                                this.node = new c(this),
                                this.flag = !0,
                                this.userData = {
                                    getMaxQ: function() {
                                        return 1e6
                                    }
                                },
                                this.world = e,
                                e.addEdge(this),
                                this.vertex0 = new p.Vertex(e,this),
                                this.vertex1 = new p.Vertex(e,this),
                                this.vertex0.brother = this.vertex1,
                                this.vertex1.brother = this.vertex0
                            }
                            return i.prototype.hasI = function() {
                                return m(this.I) > p.EleConst.MIN_I
                            }
                            ,
                            i.prototype.destroy = function() {
                                this.vertex0.destroy(),
                                this.vertex0 = null,
                                this.vertex1.destroy(),
                                this.vertex1 = null,
                                this.world.removeEdge(this),
                                this.world = null,
                                this.node.destroy(),
                                this.node = null,
                                this.userData = null
                            }
                            ,
                            i.COUNTING = 0,
                            i
                        }();
                        p.Edge = l
                    }
                    )(f.electroChemistry || (f.electroChemistry = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.abs;
                (function(f) {
                    (function(p) {
                        var c = function() {
                            function l() {
                                this.vertexs = [],
                                this.edges = []
                            }
                            return l.prototype.addEdge = function(i) {
                                i.flag && (this.vertexs.push(i.vertex0, i.vertex1),
                                this.edges.push(i),
                                i.flag = !1,
                                i.vertex0.friend && this.addEdge(i.vertex0.friend.edge),
                                i.vertex1.friend && this.addEdge(i.vertex1.friend.edge))
                            }
                            ,
                            l.prototype.isLoop = function() {
                                for (var i = 0; i < this.vertexs.length; i++)
                                    if (!this.vertexs[i].friend)
                                        return !1;
                                for (var i = 0; i < this.edges.length; i++)
                                    if (this.edges[i].isBreak)
                                        return !1;
                                return !0
                            }
                            ,
                            l.prototype.getPower = function(i) {
                                var e = this
                                  , t = 0;
                                return this.forEachVertex(function(a) {
                                    var n = e.getSU(a, i);
                                    t += n
                                }),
                                t
                            }
                            ,
                            l.prototype.getR = function() {
                                var i = 0;
                                return this.edges.forEach(function(e) {
                                    i += e.R
                                }),
                                i
                            }
                            ,
                            l.prototype.setIU = function(i, e) {
                                var t = this
                                  , a = 0
                                  , n = 0;
                                this.forEachVertex(function(o) {
                                    var s = t.getSU(o, e)
                                      , r = (e ? 1 : -1) * i * o.edge.R;
                                    o.U = a,
                                    a += s - r,
                                    o.brother.U = a,
                                    a < n && (n = a);
                                    var u = o.edge
                                      , d = o === o.edge.vertex1 ? 1 : -1;
                                    u.U = u.vertex1.U - u.vertex0.U,
                                    u.I = d * (e ? 1 : -1) * i,
                                    u.SU = d * s
                                }),
                                this.vertexs.forEach(function(o) {
                                    o.U -= n
                                })
                            }
                            ,
                            l.prototype.setQ = function(i) {
                                for (var e = i, t = 0; t < this.edges.length; t++) {
                                    var a = this.edges[t]
                                      , n = a.userData.getMaxQ()
                                      , o = m(n / a.I);
                                    o < e && (e = o)
                                }
                                for (var t = 0, a; t < this.edges.length; t++)
                                    a = this.edges[t],
                                    a.Q = a.I * e
                            }
                            ,
                            l.prototype.getSU = function(i, e) {
                                return e ? -(i.brother.SUP - i.SUN) : +(i.brother.SUN - i.SUP)
                            }
                            ,
                            l.prototype.forEachVertex = function(i) {
                                for (var e = this.edges[0].vertex0, t = e; i(t),
                                t = t.brother.friend,
                                t !== e; )
                                    ;
                            }
                            ,
                            l
                        }();
                        p.Graph = c
                    }
                    )(f.electroChemistry || (f.electroChemistry = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = h.dataStruct.ListNode
                          , c = function() {
                            function l(i, e) {
                                this.UID = l.COUNTING++,
                                this.name = "Vertex_" + this.UID,
                                this.U = 0,
                                this.node = new p(this),
                                this.SUN = 0,
                                this.SUP = 0,
                                this.userData = {},
                                this.world = i,
                                i.addVertex(this),
                                this.edge = e
                            }
                            return l.prototype.destroy = function() {
                                this.disConnect(),
                                this.edge = null,
                                this.brother = null,
                                this.world.removeVertex(this),
                                this.world = null,
                                this.node.destroy(),
                                this.node = null,
                                this.userData = null
                            }
                            ,
                            l.prototype.connect = function(i) {
                                this.disConnect(),
                                this.friend = i,
                                i.friend = this
                            }
                            ,
                            l.prototype.disConnect = function() {
                                this.friend && (this.friend.friend = null,
                                this.friend = null)
                            }
                            ,
                            l.COUNTING = 0,
                            l
                        }();
                        f.Vertex = c
                    }
                    )(m.electroChemistry || (m.electroChemistry = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = h.dataStruct.List
                          , c = function() {
                            function l() {
                                this.vertexList = new p,
                                this.edgeList = new p,
                                this.calculater = new f.Calculater,
                                this.userData = {}
                            }
                            return l.prototype.destroy = function() {
                                this.vertexList.destroy(),
                                this.vertexList = null,
                                this.edgeList.destroy(),
                                this.edgeList = null,
                                this.calculater = null,
                                this.userData = null
                            }
                            ,
                            l.prototype.addVertex = function(i) {
                                this.vertexList.add(i.node)
                            }
                            ,
                            l.prototype.removeVertex = function(i) {
                                this.vertexList.remove(i.node)
                            }
                            ,
                            l.prototype.addEdge = function(i) {
                                this.edgeList.add(i.node)
                            }
                            ,
                            l.prototype.removeEdge = function(i) {
                                this.edgeList.remove(i.node)
                            }
                            ,
                            l.prototype.getVertexs = function() {
                                return this.vertexList.getAllUserData()
                            }
                            ,
                            l.prototype.getEdges = function() {
                                return this.edgeList.getAllUserData()
                            }
                            ,
                            l.prototype.calculate = function(i, e) {
                                this.calculater.calculate(this, e)
                            }
                            ,
                            l
                        }();
                        f.World = c
                    }
                    )(m.electroChemistry || (m.electroChemistry = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {
                            console.log("HeatEngine")
                        }
                        return p
                    }();
                    m.HeatEngine = f
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {
                            console.log("MechanicsEngine")
                        }
                        return p
                    }();
                    m.MechanicsEngine = f
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var U = function() {
                var h = function(f, p) {
                    return h = Object.setPrototypeOf || {
                        __proto__: []
                    }instanceof Array && function(c, l) {
                        c.__proto__ = l
                    }
                    || function(c, l) {
                        for (var i in l)
                            l.hasOwnProperty(i) && (c[i] = l[i])
                    }
                    ,
                    h(f, p)
                };
                return function(m, f) {
                    function p() {
                        this.constructor = m
                    }
                    h(m, f),
                    m.prototype = f === null ? Object.create(f) : (p.prototype = f.prototype,
                    new p)
                }
            }(), v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function() {
                            function c(l) {
                                this.uid = "" + c.COUNTING++,
                                this.name = "",
                                this.engine = l
                            }
                            return c.prototype.destroy = function() {
                                this.engine = null
                            }
                            ,
                            c.COUNTING = 0,
                            c
                        }();
                        f.PObject = p
                    }
                    )(m.pressure || (m.pressure = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = h.utils.NBMatrixMath
                          , c = function() {
                            function l() {
                                this.traceFlag = !1,
                                this.dt = .016,
                                this.type = h.FluidType.gas
                            }
                            return l.prototype.destroy = function() {}
                            ,
                            l.prototype.trace = function() {
                                for (var i = [], e = 0; e < arguments.length; e++)
                                    i[e] = arguments[e];
                                this.traceFlag && console.log.apply(console, i)
                            }
                            ,
                            l.prototype.traceMatrix = function(i) {
                                this.traceFlag && p.traceMatrix(i)
                            }
                            ,
                            l.prototype.calculate = function(i) {
                                this.initFlagIndex(i);
                                var e = i.getAllContainers()
                                  , t = i.getAllTubes()
                                  , a = this.getEdgeVertex(e, t)
                                  , n = a.edgeArr
                                  , o = a.vertexArr;
                                this.updateParam(n, o),
                                this.updateIsBreak(n),
                                this.calcBernoulliVelocity(n),
                                this.updateGasLiquidBv(n);
                                var s = this.getGraphs(n, o);
                                this.calcGraphs(s),
                                this.determineFinalV(s),
                                this.setMouseV(n)
                            }
                            ,
                            l.prototype.initFlag = function(i) {
                                i.forEach(function(e) {
                                    e.flag = !0
                                })
                            }
                            ,
                            l.prototype.initFlagIndex = function(i) {
                                i.getAllMouses().forEach(function(e) {
                                    e.flag = !0
                                }),
                                i.getAllTubes().forEach(function(e) {
                                    e.flag = !0
                                }),
                                i.getAllContainers().forEach(function(e) {
                                    e.index = -1
                                })
                            }
                            ,
                            l.prototype.getEdgeVertex = function(i, e) {
                                for (var t = [], a = [], n = 0; n < i.length; n++) {
                                    var o = i[n]
                                      , s = new f.PVertex(o);
                                    s.index = o.index = t.length,
                                    t.push(s)
                                }
                                for (var n = 0, r; n < e.length; n++)
                                    if (r = e[n],
                                    r.flag) {
                                        r.flag = !1;
                                        var u = new f.PEdge;
                                        u.mouse0 = this.getMouseEnd(r.mouse0),
                                        u.mouse1 = this.getMouseEnd(r.mouse1),
                                        u.vertex0 = this.getVertex(u.mouse0, t),
                                        u.vertex1 = this.getVertex(u.mouse1, t),
                                        u.index = a.length,
                                        a.push(u)
                                    }
                                return {
                                    edgeArr: a,
                                    vertexArr: t
                                }
                            }
                            ,
                            l.prototype.getEdge = function(i) {
                                var e = i
                                  , t = new f.PEdge;
                                t.mouse0 = i;
                                for (var a; i; )
                                    if (a = i.brother,
                                    i = a.friend,
                                    i === e) {
                                        console.log("\u5FAA\u73AF\u4E86");
                                        break
                                    }
                                return t.mouse1 = a,
                                t
                            }
                            ,
                            l.prototype.updateParam = function(i, e) {
                                for (var t = 0; t < i.length; t++)
                                    i[t].updateParam();
                                for (var t = 0; t < e.length; t++)
                                    e[t].updateParam()
                            }
                            ,
                            l.prototype.updateIsBreak = function(i) {
                                for (var e = 0; e < i.length; e++)
                                    i[e].updateIsBreak(this.type)
                            }
                            ,
                            l.prototype.calcBernoulliVelocity = function(i) {
                                for (var e = 0; e < i.length; e++)
                                    i[e].calcBernoulliVelocity()
                            }
                            ,
                            l.prototype.updateGasLiquidBv = function(i) {}
                            ,
                            l.prototype.getGraphs = function(i, e) {
                                for (var t = 0, a; t < i.length; t++)
                                    a = i[t],
                                    a.isBreak || a.vertex0.graphUFS.root === a.vertex1.graphUFS.root || (a.vertex0.graphUFS.root.root = a.vertex1.graphUFS.root);
                                for (var n = [], t = 0; t < e.length; t++) {
                                    var o = e[t]
                                      , s = o.graphUFS.root
                                      , r = void 0;
                                    s.index === -1 ? (r = new f.PGraph,
                                    s.index = n.length,
                                    n.push(r)) : r = n[s.index],
                                    o.graphIndex = r.vertexs.length,
                                    r.vertexs.push(o)
                                }
                                for (var t = 0, a; t < i.length; t++)
                                    if (a = i[t],
                                    !a.isBreak) {
                                        var s = a.vertex0.graphUFS.root
                                          , r = n[s.index];
                                        a.graphIndex = r.edges.length,
                                        r.edges.push(a)
                                    }
                                return n
                            }
                            ,
                            l.prototype.calcGraphs = function(i) {
                                for (var e = 0; e < i.length; e++)
                                    this.canIgnoreGraph(i[e]) || this.calcStateEquation(i[e])
                            }
                            ,
                            l.prototype.canIgnoreGraph = function(i) {
                                var e = i.edges
                                  , t = i.vertexs;
                                return e.length === 0 || 2 > t.length
                            }
                            ,
                            l.prototype.calcStateEquation = function(i) {
                                for (var e = i.edges, t = i.vertexs, a = e.length + 1, n = t.length, o = new p(a,n), s = new p(a,1), r = 0, u; r < e.length; r++)
                                    u = e[r],
                                    s.setElement(r, 0, this.getDp(u, e.length)),
                                    o.setElement(r, u.vertex0.graphIndex, u.vertex0.gasC),
                                    o.setElement(r, u.vertex1.graphIndex, -u.vertex1.gasC);
                                s.setElement(a - 1, 0, this.getTotalGasN(t));
                                for (var r = 0; r < n; r++)
                                    o.setElement(a - 1, r, 1);
                                var d = p.GaussSolution(o, s);
                                if (d.isError) {
                                    var y = o.transpose()
                                      , g = y.multiply(o)
                                      , C = y.multiply(s);
                                    d = p.GaussSolution(g, C)
                                }
                                for (var r = 0; r < n; r++)
                                    t[r].balanceN = d.getElement(r, 0);
                                for (var T = new p(n,1), A = new p(n,e.length), r = 0; r < n; r++)
                                    T.setElement(r, 0, t[r].balanceN - t[r].gasN);
                                for (var r = 0; r < e.length; r++)
                                    A.setElement(e[r].vertex0.graphIndex, r, -1),
                                    A.setElement(e[r].vertex1.graphIndex, r, 1);
                                var S = p.GaussSolution(A, T);
                                if (S.isError) {
                                    var B = A.transpose()
                                      , b = B.multiply(A)
                                      , P = B.multiply(T);
                                    S = p.GaussSolution(b, P)
                                }
                                if (S.isError)
                                    for (var r = 0; r < e.length; r++)
                                        e[r].transN = 0;
                                else
                                    for (var r = 0; r < e.length; r++)
                                        e[r].transN = S.getElement(r, 0)
                            }
                            ,
                            l.prototype.getTotalGasN = function(i) {
                                for (var e = 0, t = 0; t < i.length; t++)
                                    e += i[t].gasN;
                                return e
                            }
                            ,
                            l.prototype.determineFinalV = function(i) {
                                for (var e = 0; e < i.length; e++)
                                    this.canIgnoreGraph(i[e]) || this.determineGraphFinalV(i[e])
                            }
                            ,
                            l.prototype.determineGraphFinalV = function(i) {}
                            ,
                            l.prototype.setMouseV = function(i) {
                                for (var e = 0; e < i.length; e++)
                                    i[e].setMouseV(i[e].v)
                            }
                            ,
                            l.prototype.getVertex = function(i, e) {
                                if (!i.parent || i.parent.index === 0) {
                                    var t = new f.PVertex(e[0].container);
                                    return t.index = e.length,
                                    e.push(t),
                                    t
                                }
                                return e[i.parent.index]
                            }
                            ,
                            l.prototype.getMouseEnd = function(i) {
                                var e = i;
                                for (i.tube.flag = !1; i.friend; )
                                    if (i.friend.tube.flag = !1,
                                    i = i.friend.brother,
                                    i === e) {
                                        console.log("\u5FAA\u73AF\u4E86");
                                        break
                                    }
                                return i
                            }
                            ,
                            l.prototype.getDp = function(i, e) {
                                var t = i.vertex0.getGasP() - i.vertex1.getGasP()
                                  , a = t - i.dp;
                                return a === 0 || i.dp === 0 ? 0 : 0 < i.dp ? t > i.dp || 1 < e ? i.dp : t - i.dp : t < i.dp || 1 < e ? i.dp : t - i.dp
                            }
                            ,
                            l
                        }();
                        f.PCalculaterBase = c
                    }
                    )(m.pressure || (m.pressure = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    m[m.liquid = 0] = "liquid",
                    m[m.gas = 1] = "gas"
                }
                )(h.FluidType || (h.FluidType = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.pow
                  , f = Math.PI;
                (function(p) {
                    (function(c) {
                        var l = function(i) {
                            function e(t, a) {
                                var n = i.call(this, t) || this;
                                return n.dp = 0,
                                n.isBreak = !1,
                                n.flag = !0,
                                n.maxRho = 0,
                                n.S = f * m(.004, 2),
                                t.addTube(n),
                                n.mouse0 = new c.PMouse(t,n),
                                n.mouse1 = new c.PMouse(t,n),
                                n.mouse0.brother = n.mouse1,
                                n.mouse1.brother = n.mouse0,
                                n.userData = a || {},
                                n
                            }
                            return U(e, i),
                            e.prototype.destroy = function() {
                                this.mouse0.destroy(),
                                this.mouse0 = null,
                                this.mouse1.destroy(),
                                this.mouse1 = null,
                                this.engine.removeTube(this),
                                this.userData = null,
                                i.prototype.destroy.call(this)
                            }
                            ,
                            e
                        }(c.PObject);
                        c.PTube = l
                    }
                    )(p.pressure || (p.pressure = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.abs;
                (function(p) {
                    (function(c) {
                        var l = function(i) {
                            function e() {
                                var t = i.call(this) || this;
                                return t.type = h.FluidType.gas,
                                t
                            }
                            return U(e, i),
                            e.prototype.destroy = function() {
                                i.prototype.destroy.call(this)
                            }
                            ,
                            e.prototype.updateGasLiquidBv = function(t) {
                                for (var a = 0; a < t.length; a++)
                                    t[a].updateGasBv()
                            }
                            ,
                            e.prototype.determineGraphFinalV = function(t) {
                                this.solutionOne(t),
                                this.shuchu(t)
                            }
                            ,
                            e.prototype.limitTransN = function(t) {
                                for (var a = 1, n = 0, o; n < t.length; n++)
                                    o = t[n],
                                    0 < o.transN ? o.transN > o.vertex0.gasN && (a = o.vertex0.gasN / o.transN) : -o.transN > o.vertex1.gasN && (a = -o.vertex1.gasN / o.transN);
                                for (var n = 0; n < t.length; n++)
                                    o = t[n],
                                    o.transN *= a
                            }
                            ,
                            e.prototype.limitBvByFMA = function(t) {
                                for (var a = 1, n = 0, o; n < t.length; n++) {
                                    o = t[n];
                                    var s = .001 * (f(o.transN) * o.mouse0.fluid.molecular)
                                      , r = o.dp * o.S
                                      , u = r / s
                                      , d = u * this.dt;
                                    f(o.bV) > d && (a = m(a, d / f(o.bV)))
                                }
                                for (var n = 0; n < t.length; n++)
                                    o = t[n],
                                    o.bV *= a
                            }
                            ,
                            e.prototype.solutionTwo = function(t) {
                                for (var a = 0, n = 0, o = 0, s; o < t.length; o++)
                                    s = t[o],
                                    a += f(s.transN),
                                    n += f(s.gasBv * this.dt);
                                var r = 0
                                  , u = a / n;
                                console.log(this.dt / u),
                                u !== 0 && (r = this.dt / u),
                                console.log("solutionTwo: ", n, a, r);
                                for (var o = 0; o < t.length; o++)
                                    s = t[o],
                                    s.v = s.transN * r
                            }
                            ,
                            e.prototype.solutionOne = function(t) {
                                var a = t.edges, n = this.dt, o;
                                n = this.limitDtByTransN(t);
                                for (var s = 0; s < a.length; s++)
                                    o = a[s],
                                    o.v = o.gasBv * n
                            }
                            ,
                            e.prototype.limitDtByTransN = function(t) {
                                for (var a = t.edges, n = this.dt, o = 0, s; o < a.length; o++)
                                    s = a[o],
                                    0 <= s.transN * s.gasBv ? f(s.gasBv * n) > f(s.transN) && (n = s.transN / s.gasBv) : (this.trace("\u7B26\u53F7\u4E0D\u4E00\u6837\uFF1A", s.transN, s.gasBv),
                                    console.log("\u7B26\u53F7\u4E0D\u4E00\u6837\uFF1A", s.transN, s.gasBv));
                                return n
                            }
                            ,
                            e.prototype.getTotalTransN = function(t, a) {
                                for (var n = 0, o = 0, s; o < a.length; o++)
                                    s = a[o],
                                    s.vertex0 === t ? n += s.gasBv : s.vertex1 === t && (n -= s.gasBv);
                                return n
                            }
                            ,
                            e.prototype.shuchu = function(t) {
                                var a = this
                                  , n = []
                                  , o = []
                                  , s = []
                                  , r = [];
                                t.edges.forEach(function(u) {
                                    n.push(u.transN),
                                    o.push(u.bV * a.dt),
                                    s.push(u.gasBv),
                                    r.push(u.v)
                                }),
                                this.trace("====================="),
                                this.trace("transN: ", n),
                                this.trace("bV*dt: ", o),
                                this.trace("gasBv: ", s),
                                this.trace("v: ", r),
                                this.trace("===========end==========")
                            }
                            ,
                            e
                        }(c.PCalculaterBase);
                        c.PGasCalculater = l
                    }
                    )(p.pressure || (p.pressure = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.abs;
                (function(f) {
                    (function(p) {
                        var c = function(l) {
                            function i() {
                                var e = l.call(this) || this;
                                return e.mode = 1,
                                e.type = h.FluidType.liquid,
                                e
                            }
                            return U(i, l),
                            i.prototype.destroy = function() {
                                l.prototype.destroy.call(this)
                            }
                            ,
                            i.prototype.updateGasLiquidBv = function(e) {
                                for (var t = 0; t < e.length; t++)
                                    e[t].updateLiquidBv()
                            }
                            ,
                            i.prototype.determineGraphFinalV = function(e) {
                                this.mode === 1 ? this.determineVUseBernoulliAndState(e) : this.determineVOnlyUseBernoulli(e)
                            }
                            ,
                            i.prototype.determineVOnlyUseBernoulli = function(e) {
                                for (var t = e.edges, a = this.dt, n = 0, o; n < t.length; n++)
                                    o = t[n],
                                    o.v = o.liquidBv * a
                            }
                            ,
                            i.prototype.determineVUseBernoulliAndState = function(e) {
                                var t = e.edges, a = this.dt, n;
                                a = this.limitDtByTransN(e);
                                for (var o = 0; o < t.length; o++)
                                    n = t[o],
                                    n.v = n.liquidBv * a
                            }
                            ,
                            i.prototype.limitDtByTransN = function(e) {
                                for (var t = e.vertexs, a = e.edges, n = this.dt, o = 0, s; o < t.length; o++) {
                                    s = t[o];
                                    var r = s.getTransV()
                                      , u = this.getTotalTransV(s, a);
                                    0 <= r * u ? m(u * n) > m(r) && (n = r / u) : (this.trace("\u7B26\u53F7\u4E0D\u4E00\u6837\uFF1A", r, u),
                                    console.log("\u7B26\u53F7\u4E0D\u4E00\u6837\uFF1A", r, u))
                                }
                                return n
                            }
                            ,
                            i.prototype.getTotalTransV = function(e, t) {
                                for (var a = 0, n = 0, o; n < t.length; n++)
                                    o = t[n],
                                    o.vertex0 === e ? a += o.liquidBv : o.vertex1 === e && (a -= o.liquidBv);
                                return a
                            }
                            ,
                            i
                        }(p.PCalculaterBase);
                        p.PLiquidCalculater = c
                    }
                    )(f.pressure || (f.pressure = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function() {
                            function c() {
                                this.className = "PressureEngine",
                                this.dt = .016,
                                this.gasCalculater = new f.PGasCalculater,
                                this.liquidCalculater = new f.PLiquidCalculater,
                                this.mouseArr = [],
                                this.tubeArr = [],
                                this.containerArr = [],
                                this.mixCalculater = new f.PMixCalculater,
                                this.air = new f.PContainer(this),
                                this.air.name = "air"
                            }
                            return c.prototype.destroy = function() {
                                this.gasCalculater.destroy(),
                                this.gasCalculater = null,
                                this.liquidCalculater.destroy(),
                                this.liquidCalculater = null,
                                this.mouseArr = null,
                                this.tubeArr = null,
                                this.containerArr = null
                            }
                            ,
                            c.prototype.addMouse = function(l) {
                                this.mouseArr.push(l)
                            }
                            ,
                            c.prototype.removeMouse = function(l) {
                                this.remove(this.mouseArr, l)
                            }
                            ,
                            c.prototype.addTube = function(l) {
                                this.tubeArr.push(l)
                            }
                            ,
                            c.prototype.removeTube = function(l) {
                                this.remove(this.tubeArr, l)
                            }
                            ,
                            c.prototype.addContainer = function(l) {
                                this.containerArr.push(l)
                            }
                            ,
                            c.prototype.removeContainer = function(l) {
                                this.remove(this.containerArr, l)
                            }
                            ,
                            c.prototype.getAllMouses = function() {
                                return this.mouseArr
                            }
                            ,
                            c.prototype.getAllTubes = function() {
                                return this.tubeArr
                            }
                            ,
                            c.prototype.getAllContainers = function() {
                                return this.containerArr
                            }
                            ,
                            c.prototype.calculate = function(l) {
                                this.mixCalculater.dt = this.dt,
                                this.mixCalculater.calculate(this)
                            }
                            ,
                            c.prototype.calculateGas = function(l) {
                                this.gasCalculater.dt = this.dt,
                                this.gasCalculater.calculate(this)
                            }
                            ,
                            c.prototype.calculateLiquid = function(l) {
                                this.liquidCalculater.dt = this.dt,
                                this.liquidCalculater.calculate(this)
                            }
                            ,
                            c.prototype.remove = function(l, i) {
                                var e = l.indexOf(i);
                                e !== -1 && l.splice(e, 1)
                            }
                            ,
                            c
                        }();
                        f.PressureEngine = p
                    }
                    )(m.pressure || (m.pressure = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.max
                  , p = Math.pow
                  , c = Math.PI
                  , l = Math.sqrt;
                (function(i) {
                    (function(e) {
                        var t = function() {
                            function a() {
                                this.index = -1,
                                this.graphIndex = -1,
                                this.isBreak = !1,
                                this.dp = 0,
                                this.innerDp = 0,
                                this.bV = 0,
                                this.gasBv = 0,
                                this.liquidBv = 0,
                                this.transN = 0,
                                this.v = 0,
                                this.S = c * p(.004, 2),
                                this.isBlock = !1
                            }
                            return a.prototype.updateIsBreak = function(n) {
                                this.isBreak = !0,
                                this.isBlock || (this.isBreak = !(0 <= this.dp && this.mouse0.fluid.type === n || 0 >= this.dp && this.mouse1.fluid.type === n))
                            }
                            ,
                            a.prototype.calcBernoulliVelocity = function() {
                                if (this.isBlock)
                                    this.bV = 0;
                                else {
                                    var n = this.dp;
                                    if (n === 0)
                                        this.bV = 0;
                                    else if (0 < n) {
                                        var o = f(this.getMaxRho(), this.mouse0.fluid.rho);
                                        this.bV = l(n / o)
                                    } else {
                                        var o = f(this.getMaxRho(), this.mouse1.fluid.rho);
                                        this.bV = -l(-n / o)
                                    }
                                }
                            }
                            ,
                            a.prototype.updateGasBv = function() {
                                this.gasBv = this.bV === 0 ? 0 : 0 < this.bV ? this.vertex0.gasN * this.S * this.bV / this.vertex0.gasV : this.vertex1.gasN * this.S * this.bV / this.vertex1.gasV
                            }
                            ,
                            a.prototype.updateLiquidBv = function() {
                                this.liquidBv = this.S * this.bV
                            }
                            ,
                            a.prototype.updateParam = function() {
                                var n = this;
                                this.isBlock = this.getIsBlock(),
                                this.innerDp = this.getInnerDp(),
                                this.dp = this.mouse0.p - this.innerDp - this.mouse1.p,
                                this.S = 1,
                                this.forEachTube(function(o) {
                                    n.S = m(o.S, n.S)
                                })
                            }
                            ,
                            a.prototype.setMouseV = function(n) {
                                this.walkByMouse(this.mouse0, function(o) {
                                    o.v = n,
                                    o.brother.v = -n
                                })
                            }
                            ,
                            a.prototype.getIsBlock = function() {
                                var n = !1;
                                return this.walkByMouse(this.mouse0, function(o) {
                                    o.tube.isBreak && (n = !0)
                                }),
                                n
                            }
                            ,
                            a.prototype.getInnerDp = function() {
                                var n = 0;
                                return this.walkByMouse(this.mouse0, function(o) {
                                    o === o.tube.mouse0 ? n += o.tube.dp : n -= o.tube.dp
                                }),
                                n
                            }
                            ,
                            a.prototype.getMaxRho = function() {
                                var n = 0;
                                return this.walkByMouse(this.mouse0, function(o) {
                                    o.tube.maxRho > n && (n = o.tube.maxRho)
                                }),
                                0 * n
                            }
                            ,
                            a.prototype.forEachTube = function(n) {
                                this.walkByMouse(this.mouse0, function(o) {
                                    n(o.tube)
                                })
                            }
                            ,
                            a.prototype.walkByMouse = function(n, o) {
                                for (var s = n; n && (o(n),
                                n = n.brother.friend,
                                n !== s); )
                                    ;
                            }
                            ,
                            a
                        }();
                        e.PEdge = t
                    }
                    )(i.pressure || (i.pressure = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function() {
                            function c() {
                                this.edges = [],
                                this.vertexs = []
                            }
                            return c
                        }();
                        f.PGraph = p
                    }
                    )(m.pressure || (m.pressure = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = h.dataStruct.UnionFindSet
                          , c = 8.314
                          , l = function() {
                            function i(e) {
                                this.index = -1,
                                this.graphIndex = -1,
                                this.gasN = 0,
                                this.gasC = 0,
                                this.gasV = 0,
                                this.balanceN = 0,
                                this.container = e,
                                this.graphUFS = new p(this)
                            }
                            return i.prototype.updateParam = function() {
                                var e = this.container.gas;
                                this.gasN = e.n,
                                this.gasC = c * e.T / e.V,
                                this.gasV = e.V
                            }
                            ,
                            i.prototype.getGasP = function() {
                                return this.gasN * this.gasC
                            }
                            ,
                            i.prototype.getBalanceV = function() {
                                var e = this.container.gas;
                                return e.n * e.V / this.balanceN
                            }
                            ,
                            i.prototype.getTransV = function() {
                                var e = this.container.gas
                                  , t = e.n * e.V / this.balanceN;
                                return t - e.V
                            }
                            ,
                            i
                        }();
                        f.PVertex = l
                    }
                    )(m.pressure || (m.pressure = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function(c) {
                            function l(i, e) {
                                var t = c.call(this, i) || this;
                                return t.gas = {
                                    V: 24942e4 / 1e5,
                                    n: 1e5,
                                    T: 300
                                },
                                t.index = -1,
                                t.mouseArr = [],
                                i.addContainer(t),
                                t.userData = e || {},
                                t
                            }
                            return U(l, c),
                            l.prototype.destroy = function() {
                                this.removeAllMouse(),
                                this.engine.removeContainer(this),
                                this.userData = null,
                                c.prototype.destroy.call(this)
                            }
                            ,
                            l.prototype.addMouse = function(i) {
                                i.parent && i.parent.removeMouse(i),
                                this.mouseArr.push(i),
                                i.parent = this
                            }
                            ,
                            l.prototype.removeMouse = function(i) {
                                if (i.parent === this) {
                                    var e = this.mouseArr.indexOf(i);
                                    this.mouseArr.splice(e, 1),
                                    i.parent = null
                                }
                            }
                            ,
                            l.prototype.getAllMouse = function() {
                                return this.mouseArr
                            }
                            ,
                            l.prototype.removeAllMouse = function() {
                                for (var i = 0; i < this.mouseArr.length; i++)
                                    this.mouseArr[i].parent = null;
                                this.mouseArr = []
                            }
                            ,
                            l
                        }(f.PObject);
                        f.PContainer = p
                    }
                    )(m.pressure || (m.pressure = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function(c) {
                            function l(i, e, t) {
                                var a = c.call(this, i) || this;
                                return a.flag = !0,
                                a.p = 1e5,
                                a.v = 0,
                                a.fluid = {
                                    type: h.FluidType.gas,
                                    rho: 1,
                                    molecular: 1
                                },
                                i.addMouse(a),
                                a.tube = e,
                                a.userData = t || {},
                                a
                            }
                            return U(l, c),
                            l.prototype.destroy = function() {
                                this.tube = null,
                                this.brother = null,
                                this.disConnect(),
                                this.parent && this.parent.removeMouse(this),
                                this.engine.removeMouse(this),
                                this.userData = null,
                                c.prototype.destroy.call(this)
                            }
                            ,
                            l.prototype.connect = function(i) {
                                this.friend || i.friend ? console.log("PMouse cannot connect:", !!this.friend, !!i.friend) : (this.friend = i,
                                i.friend = this)
                            }
                            ,
                            l.prototype.disConnect = function() {
                                this.friend && (this.friend.friend = null,
                                this.friend = null)
                            }
                            ,
                            l
                        }(f.PObject);
                        f.PMouse = p
                    }
                    )(m.pressure || (m.pressure = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        var p = function(c) {
                            function l() {
                                return c.call(this) || this
                            }
                            return U(l, c),
                            l.prototype.calculate = function(i) {
                                this.initFlagIndex(i);
                                var e = i.getAllContainers()
                                  , t = i.getAllTubes()
                                  , a = this.getEdgeVertex(e, t)
                                  , n = a.edgeArr
                                  , o = a.vertexArr;
                                this.updateParam(n, o),
                                this.calcBernoulliVelocity(n),
                                this.updateGasLiquidBv(n),
                                this.setMouseV(n)
                            }
                            ,
                            l.prototype.updateGasLiquidBv = function(i) {
                                for (var e = this.dt, t = 0, a; t < i.length; t++)
                                    a = i[t],
                                    a.updateIsBreak(h.FluidType.gas),
                                    a.isBreak ? (a.updateIsBreak(h.FluidType.liquid),
                                    a.isBreak ? a.v = 0 : (a.updateLiquidBv(),
                                    a.v = a.liquidBv * e)) : (a.updateGasBv(),
                                    a.v = a.gasBv * e)
                            }
                            ,
                            l
                        }(f.PCalculaterBase);
                        f.PMixCalculater = p
                    }
                    )(m.pressure || (m.pressure = {}))
                }
                )(h.engines || (h.engines = {}))
            }
            )(v || (v = {}));
            var U = function() {
                var h = function(f, p) {
                    return h = Object.setPrototypeOf || {
                        __proto__: []
                    }instanceof Array && function(c, l) {
                        c.__proto__ = l
                    }
                    || function(c, l) {
                        for (var i in l)
                            l.hasOwnProperty(i) && (c[i] = l[i])
                    }
                    ,
                    h(f, p)
                };
                return function(m, f) {
                    function p() {
                        this.constructor = m
                    }
                    h(m, f),
                    m.prototype = f === null ? Object.create(f) : (p.prototype = f.prototype,
                    new p)
                }
            }(), v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {}
                        return p.BUTTON_RADIUS = 36,
                        p.UNICORN_LENGTH = 43,
                        p.BUTTON_TO_TOP = 80,
                        p.resourceName = "nbComSkin/components",
                        p.PIXELS_PER_ML = 100,
                        p.BUTTON_ROTATE_NAME = "nbComSkin/components.button.rotate",
                        p.BUTTON_ADJUST_NAME = "nbComSkin/components.button.adjust",
                        p.BUTTON_EXTEND_NAME = "nbComSkin/components.button.extend",
                        p.BUTTON_POUR_NAME = "nbComSkin/components.button.pour",
                        p
                    }();
                    m.NBComConst = f
                }
                )(h.components || (h.components = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.round
                  , f = Math.PI;
                (function(p) {
                    var c = PIXI.Container
                      , l = PIXI.Sprite
                      , i = PIXI.Texture
                      , e = PIXI.extras.AnimatedSprite
                      , t = PIXI.Graphics
                      , a = h.pixiExtras.NBDragUtil
                      , n = PIXI.Text
                      , o = function(s) {
                        function r(u, d, y, g) {
                            var C = s.call(this) || this;
                            return C.BLUR_NAME = "nbComSkin/components.button.blur",
                            C.ACTIVE_NAME = "nbComSkin/components.button.active",
                            C.dotNum = 20,
                            C.offset = 0,
                            C.arrowRot = 0,
                            C.iconSkin = "",
                            C.readerUnit = "\xB0",
                            C.enableReader = !1,
                            C.dragBtnCallback = d,
                            C.offset = y || 0,
                            C.iconSkin = u,
                            C.unicorn = new PIXI.Graphics,
                            g && (C.textEq = g),
                            C.addChild(C.unicorn),
                            C.setDotVisible(!1),
                            C.initButton(),
                            C.initReader(),
                            C.dragID = a.addDrag(C.button, null, C),
                            C
                        }
                        return U(r, s),
                        r.prototype.removed = function() {
                            a.removeDrag(this.dragID),
                            this.textEq && this.textEq.removeText(this.readerLabel),
                            this.parent.removeChild(this)
                        }
                        ,
                        r.prototype.setIconScale = function(u) {
                            this.button.scale.x = this.button.scale.y = u
                        }
                        ,
                        r.prototype.setDotVisible = function(u) {
                            this.unicorn.visible = u
                        }
                        ,
                        r.prototype.setBtnVisible = function(u) {
                            this.button.visible = u
                        }
                        ,
                        r.prototype.setDotNum = function(u) {
                            this.dotNum = u
                        }
                        ,
                        r.prototype.getPercent = function() {
                            return this.constraint.getPercent(this.button.position)
                        }
                        ,
                        r.prototype.setPercent = function(u) {
                            this.updateBtnPos(u),
                            this.updateUnicorn();
                            var d = this.getReaderNum(u);
                            this.updateReader(d)
                        }
                        ,
                        r.prototype.getReaderNum = function(u) {
                            return 0
                        }
                        ,
                        r.prototype.dragStart = function(u) {
                            u.stopPropagation(),
                            this.mc.gotoAndStop(1),
                            this.updateUnicorn(),
                            this.enableReader && (this.readerCon.visible = !0),
                            this.dragBtnCallback.btnStartDrag && this.dragBtnCallback.btnStartDrag(this.getPercent())
                        }
                        ,
                        r.prototype.dragMove = function(u) {
                            var d = this.constraint.getConstraintP(this.button.position)
                              , y = this.constraint.getPercent(d);
                            this.setPercent(y),
                            this.dragBtnCallback.btnDragMove && this.dragBtnCallback.btnDragMove(this.getPercent())
                        }
                        ,
                        r.prototype.dragEnd = function(u) {
                            u.stopPropagation(),
                            this.mc.gotoAndStop(0),
                            this.enableReader && (this.readerCon.visible = !1),
                            this.dragBtnCallback.btnStopDrag && this.dragBtnCallback.btnStopDrag(this.getPercent())
                        }
                        ,
                        r.prototype.updateArrowRot = function(u) {
                            this.mc.rotation = u - f / 2
                        }
                        ,
                        r.prototype.updateReader = function(u) {
                            this.readerLabel.text = this.getReaderTxt(u)
                        }
                        ,
                        r.prototype.updateIconTex = function(u) {
                            this.icon.texture = i.from(u)
                        }
                        ,
                        r.prototype.initButton = function() {
                            this.button = new c,
                            this.addChild(this.button);
                            var u = l.fromFrame(this.iconSkin);
                            u.anchor.x = .5,
                            u.anchor.y = .5;
                            var d = new e([i.fromFrame(this.BLUR_NAME), i.fromFrame(this.ACTIVE_NAME)]);
                            d.anchor.x = .5,
                            d.anchor.y = .5,
                            this.button.addChild(d),
                            this.button.addChild(u),
                            d.gotoAndStop(0),
                            this.mc = d,
                            this.icon = u,
                            this.updateArrowRot(this.arrowRot)
                        }
                        ,
                        r.prototype.updateBtnPos = function(u) {
                            var d = this.constraint.getPercentP(u, this.offset);
                            this.button.x = d.x,
                            this.button.y = d.y
                        }
                        ,
                        r.prototype.updateUnicorn = function() {
                            var u = this.getPercent()
                              , d = this.unicorn;
                            d.clear(),
                            d.lineStyle(0, 16777215, 0);
                            for (var y = 3, g = 1 / this.dotNum, C = .5 * g, T = 0, A; T < this.dotNum; T++)
                                A = this.constraint.getPercentP(C),
                                this.isDotLight(C, u) ? d.beginFill(16777215, 1) : (y = 2,
                                d.beginFill(0, 1)),
                                d.drawCircle(A.x, A.y, y),
                                d.endFill(),
                                C += g
                        }
                        ,
                        r.prototype.isDotLight = function(u, d) {
                            return u <= d
                        }
                        ,
                        r.prototype.initReader = function() {
                            this.readerCon = new c;
                            var u = new t;
                            u.beginFill(0),
                            u.drawRoundedRect(0, 0, 100, 40, 8),
                            u.position.set(-50, -20),
                            u.cacheAsBitmap = !0,
                            this.readerLabel = this.textEq ? this.textEq.getText("360", {
                                fill: 16777215,
                                fontSize: 20,
                                align: "center"
                            }) : new n("360\xB0",{
                                fill: 16777215,
                                fontSize: 20,
                                align: "center"
                            }),
                            this.readerLabel.anchor.set(.5, .5),
                            this.readerCon.addChild(u),
                            this.readerCon.addChild(this.readerLabel),
                            this.addChild(this.readerCon),
                            this.readerCon.visible = !1
                        }
                        ,
                        r.prototype.getReaderTxt = function(u) {
                            return u > f ? u -= 2 * f : u < -f && (u += 2 * f),
                            m(180 * u / f) + this.readerUnit
                        }
                        ,
                        r
                    }(c);
                    p.BaseButton = o
                }
                )(h.components || (h.components = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.atan2
                  , f = Math.PI
                  , p = Math.sin
                  , c = Math.cos;
                (function(l) {
                    var i = function() {
                        function e(t, a, n) {
                            n === void 0 && (n = 0),
                            this.p0 = t,
                            this.r = a,
                            this.sAngle = n
                        }
                        return e.prototype.getPercentP = function(t, a) {
                            return a === void 0 && (a = 0),
                            this.getAngP(this.r + a, this.getAngByPercent(t))
                        }
                        ,
                        e.prototype.getConstraintP = function(t) {
                            var a = this.getPercent(t);
                            return this.getPercentP(a)
                        }
                        ,
                        e.prototype.getPercent = function(t) {
                            var a = m(t.y - this.p0.y, t.x - this.p0.x);
                            return this.getPercentByAng(a)
                        }
                        ,
                        e.prototype.getPercentByAng = function(t) {
                            return t -= this.sAngle,
                            0 > t && (t += 2 * f),
                            t / (2 * f)
                        }
                        ,
                        e.prototype.getAngByPercent = function(t) {
                            return 2 * f * t + this.sAngle
                        }
                        ,
                        e.prototype.getAngP = function(t, a) {
                            return {
                                x: this.p0.x + t * c(a),
                                y: this.p0.y + t * p(a)
                            }
                        }
                        ,
                        e
                    }();
                    l.CircleConstraint = i
                }
                )(h.components || (h.components = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(l, i, e, t, a) {
                            var n = p.call(this, l, i, e, a) || this;
                            return n.dotNum = 10,
                            n.constraint = new m.HorizontalLineConstraint({
                                x: 0,
                                y: 0
                            },t),
                            n
                        }
                        return U(c, p),
                        c.prototype.flip = function() {
                            this.constraint.flip()
                        }
                        ,
                        c
                    }(m.BaseButton);
                    m.HorizontalLineButton = f
                }
                )(h.components || (h.components = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.pixiExtras.NBTouchUtil
                      , p = function() {
                        function l(i, e, t, a) {
                            var n = this;
                            this.interval = 60,
                            this.count = 0,
                            this.isDown = !1,
                            this.touchStart = function(o, s) {
                                n.isDown = !0,
                                n.count = 0,
                                n.interval = 30,
                                n.sp.gotoAndStop(n.downIndex),
                                n.callBack(c.Down, !0)
                            }
                            ,
                            this.touchMove = function(o, s, r) {}
                            ,
                            this.touchEnd = function(o) {
                                n.sp.gotoAndStop(n.upIndex),
                                n.isDown = !1
                            }
                            ,
                            this.touchTap = function(o) {
                                n.callBack && n.callBack(c.Click, !1)
                            }
                            ,
                            this.sp = i,
                            this.upIndex = e,
                            this.downIndex = t,
                            this.callBack = a,
                            this.touchId = f.addTouch(this.sp, this, {
                                tapDelay: 1 / 0
                            })
                        }
                        return l.prototype.destroy = function() {
                            f.removeTouch(this.touchId),
                            this.sp = null,
                            this.callBack = null
                        }
                        ,
                        l.prototype.update = function(i) {
                            this.isDown && (this.count++,
                            this.count >= this.interval && (this.count = 0,
                            this.interval = 6,
                            this.callBack && this.callBack(c.Down, !1)))
                        }
                        ,
                        l
                    }();
                    m.SimpleButton = p;
                    var c;
                    (function(l) {
                        l[l.Down = 0] = "Down",
                        l[l.Click = 1] = "Click"
                    }
                    )(c = m.MouseType || (m.MouseType = {}))
                }
                )(h.components || (h.components = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(l, i, e, t, a) {
                            var n = p.call(this, l, i, e, a) || this;
                            return n.constraint = new m.VerticalLineConstraint({
                                x: 0,
                                y: 0
                            },t),
                            n
                        }
                        return U(c, p),
                        c.prototype.setLength = function(l) {
                            this.constraint.length = l
                        }
                        ,
                        c
                    }(m.BaseButton);
                    m.VerticalLinearButton = f
                }
                )(h.components || (h.components = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.PI;
                (function(f) {
                    var p = PIXI.Point
                      , c = function(l) {
                        function i(e, t, a, n, o, s, r) {
                            var u = l.call(this, e, t, a, r) || this;
                            return u.dotStartPer = 0,
                            u.constraint = new f.ArcConstraint(new p,n,o,s),
                            u.enableReader = !0,
                            u
                        }
                        return U(i, l),
                        i.prototype.setDotStartAng = function(e) {
                            this.dotStartPer = this.constraint.getPercentByAng(e)
                        }
                        ,
                        i.prototype.setPercent = function(e) {
                            l.prototype.setPercent.call(this, e),
                            this.updateArrowRot(this.constraint.getAngByPercent(e) + m)
                        }
                        ,
                        i.prototype.updateReader = function(e) {
                            l.prototype.updateReader.call(this, e + m / 2);
                            var t = this.constraint.getAngP(this.constraint.r + 120, -m / 2);
                            this.readerCon.x = t.x,
                            this.readerCon.y = t.y
                        }
                        ,
                        i.prototype.getReaderNum = function(e) {
                            return this.constraint.getAngByPercent(e)
                        }
                        ,
                        i.prototype.isDotLight = function(e, t) {
                            var a = (e - this.dotStartPer) / (t - this.dotStartPer);
                            return 0 <= a && 1 >= a
                        }
                        ,
                        i
                    }(f.BaseButton);
                    f.ArcRotateButton = c
                }
                )(h.components || (h.components = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.atan2
                  , f = Math.PI;
                (function(p) {
                    var c = function(l) {
                        function i(e, t, a, n) {
                            var o = l.call(this, e, t) || this;
                            return o.ang0 = a,
                            o.ang1 = n,
                            o
                        }
                        return U(i, l),
                        i.prototype.getPercentP = function(e, t) {
                            t === void 0 && (t = 0);
                            var a = e * (this.ang1 - this.ang0) + this.ang0;
                            return this.getAngP(this.r + t, a)
                        }
                        ,
                        i.prototype.getConstraintP = function(e) {
                            var t = this.getPercent(e);
                            return this.getPercentP(t)
                        }
                        ,
                        i.prototype.getPercent = function(e) {
                            var t = m(e.y - this.p0.y, e.x - this.p0.x);
                            return this.getPercentByAng(t)
                        }
                        ,
                        i.prototype.getPercentByAng = function(e) {
                            var t = this.getPer(this.ang0)
                              , a = this.getPer(this.ang1)
                              , n = this.getPer(e);
                            if (t > a && (n = this.formatPer(n - a),
                            t -= a,
                            a = 1),
                            n > a || n < t) {
                                var o = n - .5 * (t + a);
                                n = 0 < o && .5 > o || 0 > o && -.5 > o ? a : t
                            }
                            return n = (n - t) / (a - t),
                            n
                        }
                        ,
                        i.prototype.getAngByPercent = function(e) {
                            var t = this.ang0, a = this.ang1, n;
                            return t > a && (n = t,
                            t = a,
                            a = n),
                            (a - t) * e + t
                        }
                        ,
                        i.prototype.formatPer = function(e) {
                            return 0 > e ? e += 1 : 1 < e && (e -= 1),
                            e
                        }
                        ,
                        i.prototype.getPer = function(e) {
                            return 0 > e && (e += 2 * f),
                            e / (2 * f)
                        }
                        ,
                        i
                    }(p.CircleConstraint);
                    p.ArcConstraint = c
                }
                )(h.components || (h.components = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.PI;
                (function(f) {
                    var p = PIXI.Point
                      , c = function(l) {
                        function i(e, t, a, n, o, s) {
                            var r = l.call(this, e, t, a, s) || this;
                            return r.dotStartPer = 0,
                            r.lastPer = 0,
                            r.dotForward = !0,
                            r.a = 0,
                            r.adsorbRange = 3,
                            r.constraint = new f.CircleConstraint(new p(0,0),n,o),
                            r.enableReader = !0,
                            r
                        }
                        return U(i, l),
                        i.prototype.setPercent = function(e) {
                            var t = this.constraint.getAngByPercent(e);
                            this.perChanged(this.lastPer, e),
                            l.prototype.setPercent.call(this, e),
                            this.updateArrowRot(t + m),
                            this.lastPer = e
                        }
                        ,
                        i.prototype.updateReader = function(e) {
                            l.prototype.updateReader.call(this, e - this.constraint.sAngle);
                            var t = this.constraint.getAngP(this.constraint.r + 120, this.constraint.sAngle);
                            this.readerCon.x = t.x,
                            this.readerCon.y = t.y
                        }
                        ,
                        i.prototype.getReaderNum = function(e) {
                            return this.constraint.getAngByPercent(e)
                        }
                        ,
                        i.prototype.dragStart = function(e) {
                            this.setDotStart(this.getPercent()),
                            l.prototype.dragStart.call(this, e),
                            this.setDotVisible(!0)
                        }
                        ,
                        i.prototype.dragEnd = function(e) {
                            l.prototype.dragEnd.call(this, e),
                            this.setDotVisible(!1)
                        }
                        ,
                        i.prototype.getAngByPercent = function(e) {
                            return this.constraint.getAngByPercent(e) - this.constraint.sAngle
                        }
                        ,
                        i.prototype.setDotStartAng = function(e) {
                            this.setDotStart(this.constraint.getPercentByAng(e))
                        }
                        ,
                        i.prototype.setDotStart = function(e) {
                            this.dotStartPer = e,
                            this.a = this.getDper(this.dotStartPer, e)
                        }
                        ,
                        i.prototype.perChanged = function(e, t) {
                            if (e !== t) {
                                var a = this.getDper(e, t);
                                this.a = (this.a + a) % 1,
                                this.dotForward = 0 < this.a
                            }
                        }
                        ,
                        i.prototype.isDotLight = function(e, t) {
                            t < this.dotStartPer && (t += 1),
                            e < this.dotStartPer && (e += 1);
                            var a = e >= this.dotStartPer && e <= t;
                            return this.dotForward ? a : !a
                        }
                        ,
                        i.prototype.getDper = function(e, t) {
                            var a = 0;
                            return a = t > e ? .5 < t - e ? -(e + 1 - t) : +(t - e) : .5 < e - t ? +(t + 1 - e) : -(e - t),
                            a
                        }
                        ,
                        i
                    }(f.BaseButton);
                    f.CircleRotateButton = c
                }
                )(h.components || (h.components = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.utils.NBMath
                      , p = function() {
                        function c(l, i) {
                            this.p0 = l,
                            this.length = i
                        }
                        return c.prototype.getPercentP = function(l, i) {
                            return i === void 0 && (i = 0),
                            {
                                x: this.p0.x + this.length * l,
                                y: this.p0.y + i
                            }
                        }
                        ,
                        c.prototype.getConstraintP = function(l) {
                            return {
                                y: this.p0.y,
                                x: f.limitAB(l.x, this.p0.x, this.p0.x + this.length)
                            }
                        }
                        ,
                        c.prototype.getPercent = function(l) {
                            return (l.x - this.p0.x) / this.length
                        }
                        ,
                        c.prototype.flip = function() {
                            this.p0.x += this.length,
                            this.length = -this.length
                        }
                        ,
                        c
                    }();
                    m.HorizontalLineConstraint = p
                }
                )(h.components || (h.components = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.max;
                (function(p) {
                    var c = h.utils.NBMath
                      , l = function() {
                        function i(e, t) {
                            this.p0 = e,
                            this.length = t
                        }
                        return i.prototype.getPercentP = function(e, t) {
                            return t === void 0 && (t = 0),
                            {
                                x: this.p0.x + t,
                                y: this.p0.y + this.length * e
                            }
                        }
                        ,
                        i.prototype.getConstraintP = function(e) {
                            return {
                                x: this.p0.x,
                                y: c.limitAB(e.y, this.p0.y, this.p0.y + this.length)
                            }
                        }
                        ,
                        i.prototype.getPercent = function(e) {
                            return f(m((e.y - this.p0.y) / this.length, 1), 0)
                        }
                        ,
                        i
                    }();
                    p.VerticalLineConstraint = l
                }
                )(h.components || (h.components = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    m.Hand = "pointer",
                    m.None = "none",
                    m.Move = "move",
                    m.NsResize = "ns-resize",
                    m.EwResize = "ew-resize",
                    m.Rotate = "rotate"
                }
                )(h.CursorType || (h.CursorType = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min;
                (function(f) {
                    var p = PIXI.Graphics
                      , c = PIXI.Sprite
                      , l = PIXI.Texture
                      , i = PIXI.Point
                      , e = h.plugins.TouchPluginManager
                      , t = h.plugins.TouchDragPlugin
                      , a = h.plugins.TouchSelectPlugin
                      , n = h.plugins.TouchRoamPlugin
                      , o = h.plugins.TouchZoomPlugin
                      , s = h.plugins.AddEqPlugin
                      , r = h.plugins.LibDataManager
                      , u = h.plugins.SelectManager
                      , d = h.plugins.ResizeManager
                      , y = h.utils.NBColor
                      , g = h.plugins.HotkeyPlugin
                      , C = h.plugins.CursorManager
                      , T = h.sound.NBSound
                      , A = function() {
                        function S(B, b) {
                            var P = this;
                            q(this, S),
                            this.type = -1,
                            this.className = "BaseModule",
                            this.nbSound = new T,
                            this.isTouchDevice = "ontouchstart"in window || 0 < navigator.maxTouchPoints,
                            this.dpiScale = 1,
                            this.setDataOverFlag = !0,
                            this.enableScaleAndDrag = !0,
                            this.app = B,
                            this.globalConfig = b,
                            this.canvas = B.view,
                            this.renderer = this.app.renderer,
                            this.stage = this.app.stage,
                            this.dpiScale = this.getDeviceDpiScale(),
                            this.viewStack = new f.ViewStack(this),
                            this.stage.addChild(this.viewStack),
                            this.viewStack.scale.set(.5),
                            this.ticker = this.app.ticker,
                            this.startTicker(),
                            this.ticker.add(function(I) {
                                I *= P.ticker.elapsedMS / 1e3,
                                P.setDataOverFlag && P.update(I)
                            }, this)
                        }
                        return N(S, [{
                            key: "init",
                            value: function() {
                                this.moduleConfig = this.getModuleConfig(),
                                this.toucPluginManager = new e(this),
                                this.initPlugins(),
                                this.nbSound = new T,
                                this.initCachePool()
                            }
                        }, {
                            key: "initCachePool",
                            value: function() {
                                window.nb_cache_pool ? this.cachePool = window.nb_cache_pool : (this.cachePool = new f.CachePool,
                                window.nb_cache_pool = this.cachePool)
                            }
                        }, {
                            key: "initPlugins",
                            value: function() {
                                this.toucPluginManager.registerPlugin(new t(this)),
                                this.toucPluginManager.registerPlugin(new a(this)),
                                this.toucPluginManager.registerPlugin(new n(this)),
                                this.toucPluginManager.registerPlugin(new o(this)),
                                this.addEqPlugin = new s(this),
                                this.selectManager = new u(this),
                                this.libDataManager = new r,
                                this.resizeManager = new d(this.app,{
                                    width: 1024,
                                    height: 768
                                },{
                                    x: 0,
                                    y: 0
                                }),
                                this.hotkeyPlugin = new g(this),
                                this.cursorManager = new C(this.app,"libs/chem/images/cursor")
                            }
                        }, {
                            key: "destroy",
                            value: function() {
                                this.cursorManager.destroy(),
                                this.cursorManager = null,
                                this.hotkeyPlugin.destroy(),
                                this.hotkeyPlugin = null,
                                this.resizeManager.destroy(),
                                this.resizeManager = null,
                                this.libDataManager.destroy(),
                                this.libDataManager = null,
                                this.stopTicker(),
                                this.ticker = null,
                                this.toucPluginManager.destroy(),
                                this.toucPluginManager = null,
                                this.addEqPlugin.destroy(),
                                this.addEqPlugin = null,
                                this.selectManager.destroy(),
                                this.selectManager = null,
                                this.viewStack.removed(),
                                this.viewStack = null,
                                this.stage = null,
                                this.renderer = null,
                                this.app = null,
                                this.canvas = null,
                                this.nbSound.destroy(),
                                this.nbSound = null,
                                this.cachePool = null
                            }
                        }, {
                            key: "initData",
                            value: function(b) {
                                b.libData && this.libDataManager.initData(b.libData)
                            }
                        }, {
                            key: "update",
                            value: function(b) {
                                this.viewStack.update(b),
                                this.cursorManager.update()
                            }
                        }, {
                            key: "startTicker",
                            value: function() {
                                this.ticker.started || this.ticker.start()
                            }
                        }, {
                            key: "stopTicker",
                            value: function() {
                                this.ticker.started && this.ticker.stop()
                            }
                        }, {
                            key: "isEquipment",
                            value: function(b) {
                                return b instanceof f.BaseEquipment
                            }
                        }, {
                            key: "moveBy",
                            value: function(b, P) {
                                this.enableScaleAndDrag && (this.viewStack.moveBy(b, P),
                                this.emitChangeStage(),
                                this.checkViewBoundLimit(),
                                this.hideSettingPanel())
                            }
                        }, {
                            key: "moveTo",
                            value: function(b, P) {
                                this.viewStack.moveTo(b, P),
                                this.emitChangeStage(),
                                this.checkViewBoundLimit(),
                                this.hideSettingPanel()
                            }
                        }, {
                            key: "scaleBy",
                            value: function(b, P) {
                                this.enableScaleAndDrag && this.scaleTo(b * this.viewStack.scale.x, P)
                            }
                        }, {
                            key: "scaleTo",
                            value: function(b, P) {
                                b > this.globalConfig.maxViewScale ? b = this.globalConfig.maxViewScale : b < this.globalConfig.minViewScale && (b = this.globalConfig.minViewScale),
                                this.viewStack.scaleTo(b, b, this.global2view(P)),
                                this.checkViewBoundLimit(),
                                this.emitChangeZoom(this.getScale())
                            }
                        }, {
                            key: "zoomInOut",
                            value: function(b) {
                                this.scaleTo(b, this.dom2stage({
                                    x: this.canvas.offsetWidth / 2,
                                    y: this.canvas.offsetHeight / 2
                                }))
                            }
                        }, {
                            key: "checkViewBoundLimit",
                            value: function() {
                                var b = this.getScale()
                                  , P = this.resizeManager.getDesignSize()
                                  , I = this.globalConfig.maxViewLength * b
                                  , O = I / 2
                                  , D = P.width - I / 2
                                  , w = I / 2
                                  , R = P.height - I / 2
                                  , L = this.viewStack.x
                                  , G = this.viewStack.y;
                                this.viewStack.x < D ? L = D : this.viewStack.x > O && (L = O),
                                this.viewStack.y < R ? G = R : this.viewStack.y > w && (G = w),
                                this.viewStack.setPosition(L, G),
                                this.emitChangeStage()
                            }
                        }, {
                            key: "addEqToView",
                            value: function(b) {
                                this.viewStack.eqLayer.addChild(b)
                            }
                        }, {
                            key: "addEq",
                            value: function(b, P, I) {
                                this.addEqPlugin.addEq(b, P, I)
                            }
                        }, {
                            key: "addEqByData",
                            value: function(b, P, I) {
                                this.addEqPlugin.addEqByData(b, P, I)
                            }
                        }, {
                            key: "addEqByUid",
                            value: function(b, P, I) {
                                this.addEqPlugin.addEqByUid(b, P, I)
                            }
                        }, {
                            key: "addEqSync",
                            value: function(b, P, I) {
                                return this.addEqPlugin.addEqSync(b, P, I)
                            }
                        }, {
                            key: "getCdnUrl",
                            value: function() {
                                return this.globalConfig.cdnUrl
                            }
                        }, {
                            key: "getCommonSkins",
                            value: function() {
                                return this.globalConfig.commonSkins
                            }
                        }, {
                            key: "getEqConfData",
                            value: function(b) {
                                return this.libDataManager.getEqConfData(b)
                            }
                        }, {
                            key: "removeEq",
                            value: function(b) {
                                b.removed()
                            }
                        }, {
                            key: "deleteAll",
                            value: function() {
                                f.BaseEquipment.clear(),
                                this.selectManager.unselectAll(),
                                this.viewStack.removeAll(),
                                this.hideSettingPanel(),
                                this.service.emit(h.NBEvent.communicate.angular.CHANGE_SELECTED, {
                                    length: 0
                                })
                            }
                        }, {
                            key: "unselect",
                            value: function(b) {
                                this.selectManager.unselectEq(b),
                                this.hideSettingPanel()
                            }
                        }, {
                            key: "select",
                            value: function(b, P) {
                                var I = this.selectManager.select(b, P);
                                I ? this.selectChanged() : !P && b.length === 0 && this.hideSettingPanel(!0),
                                P || b.length !== 1 || (this.showSettingPanel(b[0]),
                                this.service.emit(h.NBEvent.communicate.angular.CHANGE_SELECTED, {
                                    length: 1
                                }))
                            }
                        }, {
                            key: "moveSelectBy",
                            value: function(b, P) {
                                this.selectManager.moveSelectBy(b, P)
                            }
                        }, {
                            key: "moveSelectTo",
                            value: function(b, P) {
                                this.selectManager.moveSelectTo(b, P)
                            }
                        }, {
                            key: "selectAll",
                            value: function() {
                                this.selectManager.selectAll(),
                                this.selectChanged()
                            }
                        }, {
                            key: "deleteSelects",
                            value: function() {
                                this.selectManager.deleteSelects(),
                                this.hideSettingPanel(),
                                this.service.emit(h.NBEvent.communicate.angular.CHANGE_SELECTED, {
                                    length: 0
                                })
                            }
                        }, {
                            key: "deleteEqByUid",
                            value: function(b) {
                                var P = this.getEqByUID(b);
                                P && (P.removed(),
                                this.service.emit(h.NBEvent.communicate.angular.CHANGE_SELECTED, {
                                    length: 0
                                }))
                            }
                        }, {
                            key: "forEachSelect",
                            value: function(b) {
                                this.selectManager.forEachSelect(b)
                            }
                        }, {
                            key: "getSelects",
                            value: function() {
                                return this.selectManager.getSelects()
                            }
                        }, {
                            key: "addSelectRect",
                            value: function(b) {
                                this.viewStack.assistLayer.addChild(b)
                            }
                        }, {
                            key: "getAllEqs",
                            value: function() {
                                return this.viewStack.eqLayer.children
                            }
                        }, {
                            key: "forEachEq",
                            value: function(b) {
                                var P = 1 < arguments.length && arguments[1] !== void 0 && arguments[1];
                                this.viewStack.eqLayer.forEachEq(b, P)
                            }
                        }, {
                            key: "getEqByUID",
                            value: function(b) {
                                return this.viewStack.eqLayer.getEqByUID(b)
                            }
                        }, {
                            key: "getScale",
                            value: function() {
                                return this.viewStack.scale.x
                            }
                        }, {
                            key: "global2view",
                            value: function(b) {
                                return this.viewStack.toLocal(new i(b.x,b.y))
                            }
                        }, {
                            key: "getEqClassByName",
                            value: function(b) {
                                return h.framework[b]
                            }
                        }, {
                            key: "dragStart",
                            value: function() {}
                        }, {
                            key: "dragMove",
                            value: function() {}
                        }, {
                            key: "dragEnd",
                            value: function() {}
                        }, {
                            key: "eqTap",
                            value: function(b, P, I) {
                                var O = this.getEqUnderPoint(null, P, !0);
                                O.length && (O.length === 1 ? (this.select([O[0]], I),
                                this.service.emit(h.NBEvent.communicate.angular.CHANGE_PANEL_STATUS, null),
                                this.service.emit(h.NBEvent.communicate.angular.SHOW_EQ_ATTRIBUTE, b)) : (console.log("\u8FD9\u91CC\u6709\u591A\u4E2A\u5668\u6750"),
                                this.service.emit(h.NBEvent.communicate.angular.SHOW_EQ_LIST, {
                                    children: O,
                                    data: this.stage2dom(P)
                                })))
                            }
                        }, {
                            key: "getEqUnderPoint",
                            value: function(b, P, I) {
                                return this.viewStack.eqLayer.getEqUnderPoint(P, I)
                            }
                        }, {
                            key: "getScreenRect",
                            value: function() {
                                var b = {
                                    x: 0,
                                    y: 0,
                                    width: 1,
                                    height: 1,
                                    width: this.renderer.screen.width,
                                    height: this.renderer.screen.height,
                                    x: -this.stage.x,
                                    y: -this.stage.y
                                };
                                return b
                            }
                        }, {
                            key: "getEqRect",
                            value: function() {
                                return this.viewStack.eqLayer.getBounds()
                            }
                        }, {
                            key: "dom2stage",
                            value: function(b) {
                                var P = this.getPrintDesignRatio();
                                return {
                                    x: b.x / P[0],
                                    y: b.y / P[1]
                                }
                            }
                        }, {
                            key: "stage2dom",
                            value: function(b) {
                                var P = this.getPrintDesignRatio();
                                return {
                                    x: b.x * P[0],
                                    y: b.y * P[1]
                                }
                            }
                        }, {
                            key: "getEqTopRightPos",
                            value: function(b) {
                                return b.getMenuPos()
                            }
                        }, {
                            key: "showAllEq",
                            value: function() {
                                var b = this.getEqRect()
                                  , P = .5
                                  , I = this.resizeManager.getDesignSize();
                                if (b.width === 0 && b.height === 0)
                                    this.moveTo(0, 0),
                                    this.scaleTo(P, this.global2view({
                                        x: I.width / 2,
                                        y: I.height / 2
                                    }));
                                else {
                                    var O = this.getScale()
                                      , D = m(I.width / b.width * O, I.height / b.height * O);
                                    D = m(P, D),
                                    this.scaleTo(D, this.global2view({
                                        x: I.width / 2,
                                        y: I.height / 2
                                    })),
                                    b = this.getEqRect(),
                                    this.moveBy(I.width / 2 - b.x - b.width / 2, I.height / 2 - b.y - b.height / 2)
                                }
                            }
                        }, {
                            key: "hideSettingPanel",
                            value: function() {
                                var b = 0 < arguments.length && arguments[0] !== void 0 && arguments[0];
                                (b || this.selectManager.isSelectChanged()) && (this.service.emit(h.NBEvent.communicate.angular.CHANGE_PANEL_STATUS, null),
                                this.service.emit(h.NBEvent.communicate.angular.CHANGE_EQ_INFO, {
                                    info: ""
                                })),
                                b && this.selectManager.resetLastSelectUID()
                            }
                        }, {
                            key: "showSettingPanel",
                            value: function(b) {
                                this.selectManager.isSelectChanged() && (this.service.emit(h.NBEvent.communicate.angular.SHOW_EQ_ATTRIBUTE, b),
                                this.service.emit(h.NBEvent.communicate.angular.CHANGE_EQ_INFO, {
                                    info: b.instanceName
                                }))
                            }
                        }, {
                            key: "getPrintDesignRatio",
                            value: function() {
                                var b = this.resizeManager.getDesignSize()
                                  , P = this.resizeManager.getPrintSize();
                                return [P.width / b.width, P.height / b.height]
                            }
                        }, {
                            key: "getOuterScale",
                            value: function() {
                                return this.resizeManager.outerScale
                            }
                        }, {
                            key: "setScaleAndDragEnable",
                            value: function(b) {
                                this.enableScaleAndDrag = b
                            }
                        }, {
                            key: "getScaleAndDragEnable",
                            value: function() {
                                return this.enableScaleAndDrag
                            }
                        }, {
                            key: "checkStageHasEq",
                            value: function() {
                                return 0 < this.viewStack.eqLayer.children.length
                            }
                        }, {
                            key: "screenShot",
                            value: function() {
                                var b = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {
                                    width: 460,
                                    height: 260,
                                    quality: .8,
                                    downLoad: !1
                                }, P;
                                b.quality = 1 < b.quality ? b.quality / 100 : b.quality;
                                var I = new p, O = this.viewStack, D;
                                O.children.forEach(function(ee) {
                                    ee !== O.eqLayer && ee !== O.particleLayer && (ee.visible = !1)
                                });
                                var w = O.eqLayer.children.length === 0 && !b.topCanvas;
                                if (w && (O.eqLayer.addChild(I),
                                I.beginFill(this.renderer.backgroundColor, 0),
                                I.drawRect(0, 0, b.width, b.height),
                                I.endFill()),
                                b.topCanvas && (D = new c(l.from(b.topCanvas)),
                                O.eqLayer.addChild(D),
                                b.topCanvasOffset)) {
                                    var R = this.getPrintDesignRatio();
                                    D.x = b.topCanvasOffset.x,
                                    D.y = b.topCanvasOffset.y,
                                    D.scale.x = R[0],
                                    D.scale.y = R[1]
                                }
                                var L = O.getBounds()
                                  , G = m(1, b.width / L.width * O.scale.x, b.height / L.height * O.scale.x);
                                if (O.eqLayer.scale.set(G),
                                O.particleLayer.scale.set(G),
                                !b.downLoad) {
                                    var V = (b.width + 20 / b.height * b.width) / G
                                      , W = (b.height + 20) / G;
                                    L = O.getBounds();
                                    var ie = O.eqLayer.toLocal(new i(L.x,L.y));
                                    I.clear(),
                                    O.eqLayer.addChildAt(I, 0),
                                    I.beginFill(this.globalConfig.backgroundColor, 1),
                                    I.drawRect(ie.x - (V - L.width / G / O.scale.x) / 2, ie.y - (W - L.height / G / O.scale.x) / 2, V, W),
                                    I.endFill(),
                                    P = this.renderer.extract.base64(O)
                                } else if (w)
                                    this.service.emit(h.NBEvent.communicate.angular.DOWNLOAD_EMPTY_IMG, {});
                                else {
                                    var ne = document.createElement("a");
                                    ne.download = new Date().getTime() + ".png",
                                    P = this.renderer.extract.base64(O),
                                    ne.href = P,
                                    document.body.appendChild(ne),
                                    ne.addEventListener("click", function() {
                                        ne.parentNode.removeChild(ne)
                                    }),
                                    ne.click()
                                }
                                return O.eqLayer.scale.set(1),
                                O.particleLayer.scale.set(1),
                                O.children.forEach(function(ee) {
                                    ee.visible = !0
                                }),
                                I.parent && I.parent.removeChild(I),
                                I.destroy(),
                                D && (D.parent.removeChild(D),
                                D.destroy()),
                                P
                            }
                        }, {
                            key: "sdkScreenShot",
                            value: function() {
                                var b = this
                                  , P = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {
                                    x: 0,
                                    y: 0,
                                    quality: .8,
                                    type: "png"
                                }
                                  , I = this.resizeManager.getPrintSize()
                                  , O = I.width
                                  , D = I.height
                                  , w = this.getPrintDesignRatio()
                                  , R = w[0]
                                  , L = w[1]
                                  , G = P.outWidth && 0 < P.outWidth ? P.outWidth : O
                                  , V = P.outHeight && 0 < P.outHeight ? P.outHeight : D
                                  , W = (P.x || 0) * R
                                  , ie = (P.y || 0) * L
                                  , ne = (P.width || O) * R
                                  , ee = (P.height || D) * L
                                  , Ie = P.type && P.type.toLowerCase() === "png" ? "image/png" : "image/jpeg";
                                return new Promise(function(ye) {
                                    var x = b.globalConfig.backgroundColor;
                                    b.renderer.render(b.stage);
                                    var se = document.createElement("canvas");
                                    se.width = b.canvas.width,
                                    se.height = b.canvas.height;
                                    var X = se.getContext("2d");
                                    X.drawImage(b.canvas, 0, 0);
                                    var Q = se.toDataURL()
                                      , Z = new Image;
                                    Z.src = Q,
                                    Z.width = O,
                                    Z.height = D,
                                    Z.style.width = O + "px",
                                    Z.style.height = D + "px";
                                    var z = document.createElement("canvas");
                                    z.width = G,
                                    z.height = V,
                                    z.style.width = G + "px",
                                    z.style.height = V + "px";
                                    var pe = z.getContext("2d"), ge = G / V, me = ne / ee, ce, ue, be, ke;
                                    ge < me ? (ce = G,
                                    ue = ce / me,
                                    be = 0,
                                    ke = (V - ue) / 2) : (ue = V,
                                    ce = me * ue,
                                    be = (G - ce) / 2,
                                    ke = 0),
                                    Z.onload = function() {
                                        pe.fillStyle = "#".concat(("00000" + (0 | x).toString(16)).substr(-6)),
                                        pe.fillRect(0, 0, G, V),
                                        0 < P.width && 0 < P.height && (P.width !== O || P.height !== D) ? pe.drawImage(Z, W, ie, ne, ee, be, ke, ce, ue) : pe.drawImage(Z, be, ke, ce, ue);
                                        var Re = z.toDataURL(Ie, P.quality);
                                        ye(Re)
                                    }
                                }
                                )
                            }
                        }, {
                            key: "setBackgroundColor",
                            value: function(b) {
                                this.globalConfig.backgroundColor = b,
                                this.renderer.backgroundColor = b,
                                this.globalConfig.bgColorIsLight = y.checkColorIsLight(b)
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                return {
                                    viewPort: this.viewStack.getViewPort(),
                                    configData: this.globalConfig.getData(),
                                    moduleConfigData: this.moduleConfig.getData(),
                                    eqs: this.viewStack.getData(),
                                    assembleData: this.getAssembleData()
                                }
                            }
                        }, {
                            key: "setData",
                            value: function(b) {
                                var P = this;
                                this.setDataOverFlag = !1,
                                0 <= b.configData.backgroundColor && this.globalConfig.backgroundColor !== b.configData.backgroundColor && this.setBackgroundColor(b.configData.backgroundColor),
                                this.globalConfig.setData(b.configData),
                                this.moduleConfig.setData(b.moduleConfigData),
                                this.viewStack.setViewPort(b.viewPort),
                                this.viewStack.setData(b.eqs, function() {
                                    P.setAssembleData(b.assembleData),
                                    P.setDataOver()
                                })
                            }
                        }, {
                            key: "execute",
                            value: function(b, P) {
                                return null
                            }
                        }, {
                            key: "selectChanged",
                            value: function() {
                                var b = this.getSelects();
                                b.length === 1 ? this.showSettingPanel(b[0]) : this.hideSettingPanel(),
                                this.service.emit(h.NBEvent.communicate.angular.CHANGE_SELECTED, {
                                    length: b.length
                                })
                            }
                        }, {
                            key: "emitChangeZoom",
                            value: function(b) {
                                this.service.emit(h.NBEvent.change.ZOOM, {
                                    zoom: b
                                })
                            }
                        }, {
                            key: "emitChangeStage",
                            value: function() {
                                this.service.emit(h.NBEvent.change.STAGE_MOVE, {
                                    x: this.viewStack.x,
                                    y: this.viewStack.y
                                })
                            }
                        }, {
                            key: "getAssembleData",
                            value: function() {
                                return []
                            }
                        }, {
                            key: "setAssembleData",
                            value: function(b) {}
                        }, {
                            key: "setDataOver",
                            value: function() {
                                this.forEachEq(function(b) {
                                    b.setDataOver()
                                }),
                                this.service.emit(h.NBEvent.communicate.angular.LOADED_RESTORE_DATA, {
                                    loaded: !0
                                }),
                                this.setDataOverFlag = !0
                            }
                        }, {
                            key: "getModuleConfig",
                            value: function() {
                                return new f.ModuleConfig
                            }
                        }, {
                            key: "getDeviceDpiScale",
                            value: function() {
                                var b = this.getDeviceDpi();
                                return b / 96
                            }
                        }, {
                            key: "getDeviceDpi",
                            value: function() {
                                var b = document.createElement("div");
                                b.style.width = "1in",
                                b.style.height = "1in",
                                b.style.left = "-100%",
                                b.style.position = "absolute",
                                b.style.top = "-100%",
                                document.body.appendChild(b);
                                var P = window.devicePixelRatio
                                  , I = b.offsetWidth * P;
                                return document.body.removeChild(b),
                                I
                            }
                        }]),
                        S
                    }();
                    A.moduleType = -1,
                    f.BaseModule = A
                }
                )(h.framework || (h.framework = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.utils.NBMath
                      , p = function(c) {
                        function l(e) {
                            var t;
                            return q(this, l),
                            t = i.call(this),
                            t.className = "Container",
                            t.UID = f.getUID(),
                            t.main = e,
                            t
                        }
                        H(l, c);
                        var i = M(l);
                        return N(l, [{
                            key: "init",
                            value: function() {}
                        }, {
                            key: "update",
                            value: function(t) {}
                        }, {
                            key: "removed",
                            value: function() {
                                this.main = null,
                                this.parent && this.parent.removeChild(this),
                                this.destroy()
                            }
                        }, {
                            key: "moveBy",
                            value: function(t, a) {
                                this.x += t,
                                this.y += a
                            }
                        }, {
                            key: "moveTo",
                            value: function(t, a) {
                                this.x = t,
                                this.y = a
                            }
                        }, {
                            key: "setPosition",
                            value: function(t, a) {
                                this.x = t,
                                this.y = a
                            }
                        }, {
                            key: "scaleBy",
                            value: function(t, a, n) {
                                this.scaleTo(this.scale.x * t, this.scale.y * a, n)
                            }
                        }, {
                            key: "scaleTo",
                            value: function(t, a, n) {
                                n && (this.x = this.x + n.x * this.scale.x - n.x * t,
                                this.y = this.y + n.y * this.scale.y - n.y * a),
                                this.scale.x = t,
                                this.scale.y = a
                            }
                        }]),
                        l
                    }(PIXI.Container);
                    m.Container = p
                }
                )(h.framework || (h.framework = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                h.NBEvent = {
                    del: {
                        PREPARE_DELETE: "del.prepareDelete",
                        DELETE: "del.delete",
                        ADDED: "del.added"
                    },
                    change: {
                        ZOOM: "change.zoom",
                        BGC: "change.bgc",
                        STAGE_MOVE: "change.stage.move"
                    },
                    communicate: {
                        angular: {
                            CHANGE_PANEL_STATUS: "communicate.angular.changePanelStatus",
                            SHOW_EQ_ATTRIBUTE: "communicate.angular.showEqAttribute",
                            RIGHT_MOUSE_DOWN: "communicate.angular.rightMouseDown",
                            EQ_DRAG_MOVE: "communicate.angular.eqDragMove",
                            SHOW_EQ_LIST: "communicate.angular.showEqList",
                            LOADED_RESTORE_DATA: "communicate.angular.loadedRestoreData",
                            CLOSE_SETTINGPOP: "communicate.angular.closeSettingPop",
                            SHOW_ALL_EQU: "communicate.angular.showAllEqu",
                            SAVE_DATA_COMPLETE: "communicate.angular.saveDataComplete",
                            USER_AGENT_MESSAGE: "communicate.angular.userAgentMessage",
                            HAPPEN_BOOM: "communicate.angular.happenBoom",
                            CHANGE_SELECTED: "communicate.angular.changeSelected",
                            OPEN_EQUAATION_PANEL: "communicate.angular.openEquationPanel",
                            CHANGE_EQ_INFO: "communicate.angular.changeEqInfo",
                            DOWNLOAD_EMPTY_IMG: "communicate.angular.downloadEmptyImg"
                        }
                    },
                    burn: {
                        MELTING: "burn.melting"
                    },
                    medicine: {
                        PUT_BLOCK_MEDICINE: "meidcine.putBlockMeidcine"
                    },
                    ADDED: "added",
                    ADDED_TO_STAGE: "addedToStage",
                    REMOVED: "removed",
                    REMOEVD_FROM_STAGE: "removedFromStage",
                    SELECTED: "selected",
                    CANCEL_SELECTED: "cancelSelected",
                    SHOW_WHOLE_BUTTON: "showWholeButton",
                    HITTED_DRAGINLIMITAREA: "hittedDragInLImitArea",
                    HITTED_TWOCONTAINER: "hittedTwoContainer"
                }
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = PIXI.Application
                      , p = function() {
                        function c(l) {
                            var i = 1 < arguments.length && arguments[1] !== void 0 && arguments[1];
                            q(this, c),
                            this.className = "NbFramework",
                            this.modules = [],
                            this.moduleType = 0,
                            console.log("NbFramework"),
                            this.canvas = l,
                            this.globalConfig = new m.GlobalConfig(i),
                            this.app = new f({
                                view: l,
                                transparent: !1,
                                antialias: !1,
                                backgroundColor: this.globalConfig.backgroundColor,
                                preserveDrawingBuffer: !1,
                                forceCanvas: -1 < [!0, "true"].indexOf(window.__nb_force_canvas)
                            }),
                            this.renderer = this.app.renderer,
                            this.app.stage.interactive = !0,
                            this.app.stage.hitArea = new m.StageHitArea,
                            this.service = new m.Service(this)
                        }
                        return N(c, [{
                            key: "destroy",
                            value: function() {
                                this.currentModule.destroy(),
                                this.currentModule = null,
                                this.service.destroy(),
                                this.service = null,
                                this.globalConfig = null,
                                this.renderer = null,
                                this.app.destroy(!0),
                                this.app = null,
                                this.canvas = null
                            }
                        }, {
                            key: "registModule",
                            value: function(i) {
                                this.modules.indexOf(i) === -1 && this.modules.push(i)
                            }
                        }, {
                            key: "unRegistModule",
                            value: function(i) {
                                var e = this.modules.indexOf(i);
                                e !== -1 && this.modules.splice(e, 1)
                            }
                        }, {
                            key: "initModule",
                            value: function(i) {
                                var e = this.findModuleByType(i);
                                e && (this.currentModule && this.currentModule.destroy(),
                                this.currentModule = new e(this.app,this.globalConfig),
                                this.currentModule.init(),
                                this.currentModule.service = this.service)
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                return {
                                    id: "",
                                    dataVersion: 1,
                                    moduleType: this.moduleType,
                                    moduleData: this.currentModule.getData()
                                }
                            }
                        }, {
                            key: "setData",
                            value: function(i) {
                                this.currentModule.setData(i.moduleData)
                            }
                        }, {
                            key: "findModuleByType",
                            value: function(i) {
                                for (var e = 0, t; e < this.modules.length; e++)
                                    if (t = this.modules[e],
                                    t.moduleType === i)
                                        return this.moduleType = i,
                                        t;
                                return null
                            }
                        }]),
                        c
                    }();
                    m.NbFramework = p
                }
                )(h.framework || (h.framework = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p(c) {
                            q(this, p),
                            this.map = {},
                            this.frameWork = c
                        }
                        return N(p, [{
                            key: "destroy",
                            value: function() {
                                this.frameWork = null
                            }
                        }, {
                            key: "on",
                            value: function(l, i) {
                                this.map[l] = i
                            }
                        }, {
                            key: "once",
                            value: function(l, i) {
                                this.map[l] = i
                            }
                        }, {
                            key: "off",
                            value: function(l) {
                                this.map[l] = null
                            }
                        }, {
                            key: "emit",
                            value: function(l, i) {
                                var e = this.map[l];
                                e && e(i)
                            }
                        }, {
                            key: "run",
                            value: function() {
                                this.setStageRenderEnable(!0)
                            }
                        }, {
                            key: "stop",
                            value: function() {
                                this.setStageRenderEnable(!1)
                            }
                        }, {
                            key: "setMuted",
                            value: function(l) {
                                this.frameWork.currentModule.nbSound.setMute(l),
                                window.createjs && window.createjs.Sound && window.createjs.Sound.setMute(l)
                            }
                        }, {
                            key: "execute",
                            value: function(l, i) {
                                var e = null;
                                return l === h.NBCommand.GET_SCALE ? e = this.getScale() : l === h.NBCommand.GET_VIEW_PORT ? e = this.getViewPort() : l === h.NBCommand.ADD_EQUIPMENT ? this.addEqCommand(i) : l === h.NBCommand.ZOOM_IN_OUT ? this.zoomInOut(i) : l === h.NBCommand.DELETE_EQUIPMENT ? this.deleteEquipment(i) : l === h.NBCommand.HAS_SELECT_EQ ? e = this.haseSelectEq() : l === h.NBCommand.GET_EQ_CLIENT_POS ? e = this.getEqClientPos(i) : l === h.NBCommand.SHOW_ALL_EQ ? this.showAllEq() : l === h.NBCommand.GET_PRINT_DESIGN_RATIO ? e = this.getPrintDesignRatio() : l === h.NBCommand.SELECT_EQ ? this.selectEqByUid(i) : l === h.NBCommand.SET_ROAM_ABLE ? this.frameWork.currentModule.setScaleAndDragEnable(i.roamAble) : l === h.NBCommand.GET_ROAM_ABLE ? e = this.frameWork.currentModule.getScaleAndDragEnable() : l === h.NBCommand.SAVE_DATA ? e = this.saveDataAndEmit(i) : l === h.NBCommand.RESTORE_DATA ? this.restoreData(i) : l === h.NBCommand.SET_STAGE_RENDER_ENABLED ? this.setStageRenderEnable(!!i) : l === h.NBCommand.SCREEN_SHOT ? e = this.screenShot(i) : l === h.NBCommand.SDK_SCREEN_SHOT ? e = this.sdkScreenShot(i) : l === h.NBCommand.SET_ARROW_TYPE ? this.setArrowType(!!i) : l === h.NBCommand.GET_ARROW_TYPE ? e = this.getArrowType() : l === h.NBCommand.SET_NUMBER_TYPE ? this.setNumberType(!!i) : l === h.NBCommand.GET_NUMBER_TYPE ? e = this.getNumberType() : l === h.NBCommand.CHANGE_BACKGROUND ? this.changeBackgroundColor(i) : l === h.NBCommand.GET_BACKGROUND ? e = this.getBackgroundColor() : l === h.NBCommand.SET_EUQ_STATUS ? this.setEquDefaultStatus(i) : l === h.NBCommand.GET_EUQ_STATUS ? e = this.getEquDefaultStatus() : l === h.NBCommand.STAGE_HAS_EQ ? e = this.checkStageHasEq() : l === h.NBCommand.SET_MUTE_TYPE ? this.frameWork.currentModule.nbSound.setMute(i.muteType) : e = this.frameWork.currentModule.execute(l, i),
                                e
                            }
                        }, {
                            key: "addEqCommand",
                            value: function(l) {
                                this.frameWork.currentModule.addEq(l.data.eqName, this.dom2view(l.pos), function() {})
                            }
                        }, {
                            key: "deleteEquipment",
                            value: function(l) {
                                console.log("\u5220\u9664\u5668\u6750\uFF1A", l),
                                l.type === "all" ? (this.frameWork.currentModule.deleteAll(),
                                l.forceClear && this.frameWork.renderer.clear()) : l.type === "select" ? this.frameWork.currentModule.deleteSelects() : l.type === "uid" ? this.frameWork.currentModule.deleteEqByUid(l.uid) : console.log("\u5220\u9664\u547D\u4EE4type\u6682\u4E0D\u652F\u6301")
                            }
                        }, {
                            key: "haseSelectEq",
                            value: function() {
                                return 0 < this.frameWork.currentModule.getSelects().length
                            }
                        }, {
                            key: "getEqClientPos",
                            value: function(l) {
                                var i = this.frameWork.currentModule;
                                return i.stage2dom(i.getEqTopRightPos(l))
                            }
                        }, {
                            key: "zoomInOut",
                            value: function(l) {
                                this.frameWork.currentModule.zoomInOut(l.zoomValue / 2)
                            }
                        }, {
                            key: "showAllEq",
                            value: function() {
                                this.frameWork.currentModule.showAllEq()
                            }
                        }, {
                            key: "getPrintDesignRatio",
                            value: function() {
                                var l = this.frameWork.currentModule.getPrintDesignRatio();
                                return {
                                    ratioW: l[0],
                                    ratioH: l[1]
                                }
                            }
                        }, {
                            key: "selectEqByUid",
                            value: function(l) {
                                this.frameWork.currentModule.select([l.eq], !1)
                            }
                        }, {
                            key: "dom2view",
                            value: function(l) {
                                var i = this.frameWork.currentModule.dom2stage(l);
                                return this.frameWork.currentModule.global2view(i)
                            }
                        }, {
                            key: "getScale",
                            value: function() {
                                return 2 * this.frameWork.currentModule.getScale()
                            }
                        }, {
                            key: "getViewPort",
                            value: function() {
                                return this.frameWork.currentModule.viewStack.getViewPort()
                            }
                        }, {
                            key: "saveDataAndEmit",
                            value: function(l) {
                                var i = this.frameWork.getData();
                                if (l.emitComplete) {
                                    var e = this.screenShot();
                                    this.emit(h.NBEvent.communicate.angular.SAVE_DATA_COMPLETE, {
                                        imgData: e
                                    })
                                }
                                var t = JSON.stringify(i);
                                return l.tag && localStorage.setItem(l.tag, t),
                                t
                            }
                        }, {
                            key: "setArrowType",
                            value: function(l) {
                                this.frameWork.globalConfig.equTypeIsArrow = l
                            }
                        }, {
                            key: "getArrowType",
                            value: function() {
                                return this.frameWork.globalConfig.equTypeIsArrow
                            }
                        }, {
                            key: "setNumberType",
                            value: function(l) {
                                this.frameWork.globalConfig.scientific = l
                            }
                        }, {
                            key: "getNumberType",
                            value: function() {
                                return this.frameWork.globalConfig.scientific
                            }
                        }, {
                            key: "setEquDefaultStatus",
                            value: function(l) {
                                this.frameWork.globalConfig.equDefaultStatus = l.show
                            }
                        }, {
                            key: "getEquDefaultStatus",
                            value: function() {
                                return this.frameWork.globalConfig.equDefaultStatus
                            }
                        }, {
                            key: "setStageRenderEnable",
                            value: function(l) {
                                l ? this.frameWork.currentModule.startTicker() : this.frameWork.currentModule.stopTicker()
                            }
                        }, {
                            key: "screenShot",
                            value: function(l) {
                                return this.frameWork.currentModule.screenShot(l)
                            }
                        }, {
                            key: "sdkScreenShot",
                            value: function(l) {
                                return this.frameWork.currentModule.sdkScreenShot(l)
                            }
                        }, {
                            key: "restoreData",
                            value: function(l) {
                                this.frameWork.currentModule.deleteAll(),
                                l ? this.frameWork.setData(l) : this.emit(h.NBEvent.communicate.angular.LOADED_RESTORE_DATA, {
                                    loaded: !0
                                })
                            }
                        }, {
                            key: "changeBackgroundColor",
                            value: function(l) {
                                this.frameWork.currentModule.setBackgroundColor(l.color),
                                localStorage.setItem("chemBGCIndex", l.index)
                            }
                        }, {
                            key: "getBackgroundColor",
                            value: function() {
                                return this.frameWork.globalConfig.backgroundColor
                            }
                        }, {
                            key: "checkStageHasEq",
                            value: function() {
                                return this.frameWork.currentModule.checkStageHasEq()
                            }
                        }]),
                        p
                    }();
                    m.Service = f
                }
                )(h.framework || (h.framework = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p(c) {
                            q(this, p),
                            this.isCombination = !0,
                            this.p = {
                                x: 0,
                                y: 0
                            },
                            this.main = c
                        }
                        return N(p, [{
                            key: "destroy",
                            value: function() {
                                this.main = null
                            }
                        }, {
                            key: "setPosition",
                            value: function(l, i) {
                                this.p.x = l || 0,
                                this.p.y = i || 0
                            }
                        }, {
                            key: "create",
                            value: function(l) {
                                return null
                            }
                        }]),
                        p
                    }();
                    m.BaseCombinationEquipment = f
                }
                )(h.framework || (h.framework = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.plugins.LoadSkinPlugin
                      , p = PIXI.Point
                      , c = PIXI.Graphics
                      , l = function(i) {
                        function e(a) {
                            var n;
                            return q(this, e),
                            n = t.call(this, a),
                            n.className = "BaseEquipment",
                            n.isSelect = !1,
                            n.canToTop = !0,
                            n.showSelectReact = !0,
                            n.selectReact = new c,
                            n.zIndex = 1,
                            n.priority = 1,
                            n.isOnDragMove = !1,
                            n.sounds = [],
                            n.soundsMap = {},
                            n.insIdx = 0,
                            n.interactive = !0,
                            n.selectReact.allowGetBounds = !1,
                            n.addChild(n.selectReact),
                            n.selectReact.name = "selectRect",
                            n
                        }
                        H(e, i);
                        var t = M(e);
                        return N(e, [{
                            key: "init",
                            value: function() {
                                this.initSkin(),
                                this.initSelectReact(),
                                this.initPlugin(),
                                this.initSounds()
                            }
                        }, {
                            key: "initData",
                            value: function(n) {
                                this.iData = n,
                                this.dataId = n.id,
                                this.instanceName = this.getInstanceName(n.id, this.insIdx)
                            }
                        }, {
                            key: "getInstanceName",
                            value: function(n) {
                                var o = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 0
                                  , s = this.main.getEqConfData(n);
                                if (!s)
                                    return null;
                                var r = s.lanKey;
                                return r ? (this.insIdx = o = this.getInstanceIdx(n, o),
                                "".concat(r, "^").concat(o)) : null
                            }
                        }, {
                            key: "getInstanceNameByLanKey",
                            value: function(n) {
                                var o = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 0;
                                if (!n)
                                    return null;
                                var s = n.split(".")
                                  , r = s[s.length - 1];
                                return this.insIdx = o = this.getInstanceIdx(r, o),
                                "".concat(n, "^").concat(o)
                            }
                        }, {
                            key: "getInstanceIdx",
                            value: function(n) {
                                var o = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 0;
                                return 0 < o ? o > e.instanceNameMap[n] && (e.instanceNameMap[n] = o) : 0 < e.instanceNameMap[n] ? o = ++e.instanceNameMap[n] : o = e.instanceNameMap[n] = 1,
                                o
                            }
                        }, {
                            key: "setAttrByMode",
                            value: function() {}
                        }, {
                            key: "removed",
                            value: function() {
                                this.isSelect && (this.isSelect = null,
                                this.main.unselect(this)),
                                this.destroySounds(),
                                k(E(e.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "initSkin",
                            value: function() {
                                this.initSkinWithConfigData(this.skinName || this.className)
                            }
                        }, {
                            key: "initSelectReact",
                            value: function() {
                                this.selectReact.visible = !1,
                                this.updateSelectReact()
                            }
                        }, {
                            key: "updateSelectReact",
                            value: function() {
                                this.selectReact.clear();
                                var n = this.getSelectBounds()
                                  , o = 10;
                                this.selectReact.beginFill(16777215, .1),
                                this.selectReact.drawRoundedRect(n.x - o, n.y - o, n.width + 2 * o, n.height + 2 * o, o)
                            }
                        }, {
                            key: "getSelectBounds",
                            value: function() {
                                var n = !1;
                                this.selectReact && (n = this.selectReact.visible,
                                this.selectReact.visible = !1);
                                var o = this.getLocalBounds();
                                return n && (this.selectReact.visible = n),
                                o
                            }
                        }, {
                            key: "initPlugin",
                            value: function() {}
                        }, {
                            key: "update",
                            value: function(n) {
                                this.isSelect ? this.showSelectReact && this.selectReact && !this.selectReact.visible && (this.selectReact.visible = !0) : this.showSelectReact && this.selectReact && this.selectReact.visible && (this.selectReact.visible = !1)
                            }
                        }, {
                            key: "toTop",
                            value: function() {
                                this.parent.setChildIndex(this, this.parent.children.length - 1)
                            }
                        }, {
                            key: "toBottom",
                            value: function() {
                                this.parent.setChildIndex(this, 0)
                            }
                        }, {
                            key: "dragStart",
                            value: function() {
                                this.canToTop && this.toTop(),
                                this.isOnDragMove = !1
                            }
                        }, {
                            key: "dragMove",
                            value: function(n) {
                                this.isOnDragMove || this.main.hideSettingPanel(!0),
                                this.isOnDragMove = !0
                            }
                        }, {
                            key: "dragEnd",
                            value: function() {
                                this.isOnDragMove = !1
                            }
                        }, {
                            key: "hitPoint",
                            value: function(n) {
                                var o = !(1 < arguments.length && arguments[1] !== void 0) || arguments[1];
                                return !!(!o || this.visible && this.interactive) && (!this.mask || this.mask.containsPoint(new p(n.x,n.y))) && this.getBounds().contains(n.x, n.y)
                            }
                        }, {
                            key: "canMoveWith",
                            value: function(n) {
                                return !0
                            }
                        }, {
                            key: "initSkinWithConfigData",
                            value: function(n) {
                                var o = f.getConfData(n);
                                o && h.plugins.ParseConfigDataPlugin.parse(this, o, n)
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                return {
                                    dataId: this.dataId,
                                    className: this.className,
                                    UID: this.UID,
                                    x: this.x,
                                    y: this.y,
                                    rotation: this.rotation,
                                    insIdx: this.insIdx
                                }
                            }
                        }, {
                            key: "setData",
                            value: function(n) {
                                this.dataId = n.dataId,
                                this.UID = n.UID,
                                this.x = n.x,
                                this.y = n.y,
                                this.rotation = n.rotation,
                                this.insIdx = n.insIdx,
                                this.instanceName = this.getInstanceName(this.dataId, this.insIdx)
                            }
                        }, {
                            key: "setDataOver",
                            value: function() {}
                        }, {
                            key: "getConfigureData",
                            value: function() {
                                var n = {
                                    confArr: []
                                };
                                return n
                            }
                        }, {
                            key: "addCursor",
                            value: function(n, o) {
                                n.cursor = o
                            }
                        }, {
                            key: "getMenuPos",
                            value: function() {
                                var n = this.getBounds();
                                return {
                                    x: n.right,
                                    y: n.y
                                }
                            }
                        }, {
                            key: "getText",
                            value: function(n, o) {
                                return this.main.cachePool.popText(n, o)
                            }
                        }, {
                            key: "removeText",
                            value: function(n) {
                                this.main.cachePool.pushText(n)
                            }
                        }, {
                            key: "playSound",
                            value: function(n, o) {
                                var s = this.soundsMap[n];
                                s && (s.setLoop(o),
                                s.play())
                            }
                        }, {
                            key: "stopSound",
                            value: function(n) {
                                var o = this.soundsMap[n];
                                o && o.stop()
                            }
                        }, {
                            key: "initSounds",
                            value: function() {
                                var n = this;
                                this.sounds.forEach(function(o) {
                                    n.soundsMap[o] = n.main.nbSound.register(n.getSoundSrc(o), null)
                                })
                            }
                        }, {
                            key: "destroySounds",
                            value: function() {
                                for (var n in this.soundsMap)
                                    this.soundsMap.hasOwnProperty(n) && this.main.nbSound.unRegister(this.soundsMap[n].uid);
                                this.soundsMap = null
                            }
                        }, {
                            key: "getSoundSrc",
                            value: function(n) {
                                return this.main.globalConfig.cdnUrl + n
                            }
                        }], [{
                            key: "clear",
                            value: function() {
                                e.instanceNameMap = {}
                            }
                        }]),
                        e
                    }(m.Container);
                    l.instanceNameMap = {},
                    m.BaseEquipment = l
                }
                )(h.framework || (h.framework = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p(c) {
                            q(this, p),
                            this.cdnUrl = "http://127.0.0.1:8080/assets/",
                            this.commonSkins = ["Skin", "nbComSkin", "eleAniSkin"],
                            this.maxViewScale = 2,
                            this.minViewScale = .25,
                            this.maxViewLength = 15e3,
                            this.stageRenderEnable = !0,
                            this.backgroundColor = 3422529,
                            this.bgColorIsLight = !1,
                            this.equTypeIsArrow = !1,
                            this.scientific = !1,
                            this.equDefaultStatus = !1,
                            this.loadMobileImg = !1,
                            this.loadMobileImg = c
                        }
                        return N(p, [{
                            key: "getData",
                            value: function() {
                                return {
                                    backgroundColor: this.backgroundColor,
                                    equTypeIsArrow: this.equTypeIsArrow,
                                    scientific: this.scientific,
                                    equDefaultStatus: this.equDefaultStatus
                                }
                            }
                        }, {
                            key: "setData",
                            value: function(l) {
                                this.equTypeIsArrow = !!l.equTypeIsArrow,
                                this.scientific = !!l.scientific,
                                this.equDefaultStatus = !!l.equDefaultStatus
                            }
                        }]),
                        p
                    }();
                    m.GlobalConfig = f
                }
                )(h.framework || (h.framework = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {
                            q(this, p)
                        }
                        return N(p, [{
                            key: "getData",
                            value: function() {
                                return {}
                            }
                        }, {
                            key: "setData",
                            value: function(l) {}
                        }]),
                        p
                    }();
                    m.ModuleConfig = f
                }
                )(h.framework || (h.framework = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        f[f.PHYSICS_ELEC = 1] = "PHYSICS_ELEC",
                        f[f.CHEMICAL = 20] = "CHEMICAL",
                        f[f.CHEMICAL_ELECTRO = 21] = "CHEMICAL_ELECTRO"
                    }
                    )(m.ModuleType || (m.ModuleType = {}))
                }
                )(h.framework || (h.framework = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {
                            q(this, p)
                        }
                        return N(p, [{
                            key: "contains",
                            value: function(l, i) {
                                return !0
                            }
                        }]),
                        p
                    }();
                    m.StageHitArea = f
                }
                )(h.framework || (h.framework = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                h.NBCommand = {
                    ADD_EQUIPMENT: "addEquipment",
                    CALCULATE_DRAG_RECT: "calculateDragRect",
                    CHANGE_BACKGROUND: "changeBackGround",
                    GET_BACKGROUND: "getBackgroundColor",
                    CHANGE_SYSTEM_SETTING: "changeSystemSetting",
                    DELETE_EQUIPMENT: "deleteEquipment",
                    HAS_SELECT_EQ: "hasSelectEq",
                    ZOOM_IN_OUT: "zoomInOut",
                    GET_EQ_CLIENT_POS: "getEqClientPos",
                    SET_STAGE_RENDER_ENABLED: "setStageRenderEnabled",
                    SCREEN_SHOT: "screenShot",
                    SDK_SCREEN_SHOT: "sdkScreenShot",
                    SAVE_DATA: "saveData",
                    RESTORE_DATA: "restoreData",
                    SHOW_ALL_EQ: "showAllEq",
                    SET_ARROW_TYPE: "setArrowType",
                    GET_ARROW_TYPE: "getArrowType",
                    TOGGLE_ELEANI: "toggleEleAni",
                    TOGGLE_EQUATIONS: "toggleEquations",
                    SET_ELECTRONS: "setElectrons",
                    GET_ELECTRONS: "getElectrons",
                    SET_EUQ_STATUS: "setEquDefaultStatus",
                    GET_EUQ_STATUS: "getEquDefaultStatus",
                    SET_NUMBER_TYPE: "setNumberType",
                    GET_NUMBER_TYPE: "getNumberType",
                    SET_ROAM_ABLE: "setRoamAble",
                    GET_ROAM_ABLE: "getRoamAble",
                    GET_SCALE: "getScale",
                    GET_VIEW_PORT: "getViewPort",
                    GET_PRINT_DESIGN_RATIO: "getPrintDesignRatio",
                    SELECT_EQ: "selectEq",
                    STAGE_HAS_EQ: "stageHasEq",
                    SET_MUTE_TYPE: "setMuteType"
                }
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "AssistLayer",
                            e.interactive = !0,
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {}
                        }, {
                            key: "removed",
                            value: function() {
                                k(E(c.prototype), "removed", this).call(this)
                            }
                        }]),
                        c
                    }(m.Container);
                    m.AssistLayer = f
                }
                )(h.framework || (h.framework = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "EqLayer",
                            e.interactive = !0,
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {}
                        }, {
                            key: "removed",
                            value: function() {
                                k(E(c.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "update",
                            value: function(e) {
                                var t = {};
                                this.children.forEach(function(a, n) {
                                    t[a.UID] = n
                                }),
                                this.children.sort(function(a, n) {
                                    return a.zIndex - n.zIndex || t[a.UID] - t[n.UID]
                                }),
                                this.forEachEq(function(a) {
                                    a.update(e)
                                })
                            }
                        }, {
                            key: "forEachEq",
                            value: function(e) {
                                var t = 1 < arguments.length && arguments[1] !== void 0 && arguments[1]
                                  , a = this.children.slice();
                                if (t)
                                    for (var n = a.length; n--; )
                                        e(a[n]);
                                else
                                    for (var o = 0, s = a.length; o < s; o++)
                                        e(a[o])
                            }
                        }, {
                            key: "getEqUnderPoint",
                            value: function(e, t) {
                                for (var a = [], n = this.children.length - 1, o; 0 <= n; n--)
                                    o = this.children[n],
                                    o.hitPoint(e) && a.push(o);
                                return t && a.sort(function(s, r) {
                                    return r.priority - s.priority
                                }),
                                a
                            }
                        }, {
                            key: "getEqByUID",
                            value: function(e) {
                                for (var t = 0, a; t < this.children.length; t++)
                                    if (a = this.children[t],
                                    a.UID === e)
                                        return a;
                                return null
                            }
                        }, {
                            key: "removeAll",
                            value: function() {
                                for (; this.children.length; )
                                    this.children[0].removed()
                            }
                        }]),
                        c
                    }(m.Container);
                    m.EqLayer = f
                }
                )(h.framework || (h.framework = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "InfoLayer",
                            e.interactive = !0,
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {}
                        }, {
                            key: "removed",
                            value: function() {
                                k(E(c.prototype), "removed", this).call(this)
                            }
                        }]),
                        c
                    }(m.Container);
                    m.InfoLayer = f
                }
                )(h.framework || (h.framework = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "ParticleLayer",
                            e.interactive = !0,
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {}
                        }, {
                            key: "removed",
                            value: function() {
                                k(E(c.prototype), "removed", this).call(this)
                            }
                        }]),
                        c
                    }(m.Container);
                    m.ParticleLayer = f
                }
                )(h.framework || (h.framework = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "SelectLayer",
                            e.interactive = !0,
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {}
                        }, {
                            key: "removed",
                            value: function() {
                                k(E(c.prototype), "removed", this).call(this)
                            }
                        }]),
                        c
                    }(m.Container);
                    m.SelectLayer = f
                }
                )(h.framework || (h.framework = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "ViewStack",
                            e.interactive = !0,
                            e.particleLayer = new m.ParticleLayer(e.main),
                            e.addChild(e.particleLayer),
                            e.eqLayer = new m.EqLayer(e.main),
                            e.addChild(e.eqLayer),
                            e.selectLayer = new m.SelectLayer(e.main),
                            e.addChild(e.selectLayer),
                            e.infoLayer = new m.InfoLayer(e.main),
                            e.addChild(e.infoLayer),
                            e.assistLayer = new m.AssistLayer(e.main),
                            e.addChild(e.assistLayer),
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "removed",
                            value: function() {
                                this.eqLayer.removed(),
                                this.eqLayer = null,
                                this.selectLayer.removed(),
                                this.selectLayer = null,
                                k(E(c.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "update",
                            value: function(e) {
                                this.children.forEach(function(t) {
                                    t instanceof m.Container && t.update(e)
                                })
                            }
                        }, {
                            key: "getViewPort",
                            value: function() {
                                return {
                                    x: this.x,
                                    y: this.y,
                                    scaleX: this.scale.x,
                                    scaleY: this.scale.y
                                }
                            }
                        }, {
                            key: "setViewPort",
                            value: function(e) {
                                this.x = e.x,
                                this.y = e.y,
                                this.scale.x = e.scaleX,
                                this.scale.y = e.scaleY
                            }
                        }, {
                            key: "removeAll",
                            value: function() {
                                this.eqLayer.removeAll()
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var e = [];
                                return this.eqLayer.forEachEq(function(t) {
                                    e.push(t.getData())
                                }),
                                e
                            }
                        }, {
                            key: "setData",
                            value: function(e, t) {
                                var a = this;
                                if (e.length === 0)
                                    t();
                                else {
                                    var n = e.length;
                                    e.forEach(function(o) {
                                        a.main.addEq(o.className, null, function(s) {
                                            n--,
                                            s.setData(o),
                                            n === 0 && t()
                                        })
                                    })
                                }
                            }
                        }]),
                        c
                    }(m.Container);
                    m.ViewStack = f
                }
                )(h.framework || (h.framework = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {
                            q(this, p),
                            this.textPool = [],
                            this.graphicsPool = []
                        }
                        return N(p, [{
                            key: "disposeAll",
                            value: function() {
                                this.textPool.length = 0,
                                this.graphicsPool.length = 0
                            }
                        }, {
                            key: "resetAll",
                            value: function(l) {
                                l.alpha = 1,
                                l.visible = !0,
                                l.width = 0,
                                l.height = 0,
                                l.setTransform()
                            }
                        }, {
                            key: "pushGraphic",
                            value: function(l) {
                                l.clear(),
                                this.resetAll(l),
                                this.graphicsPool.push(l)
                            }
                        }, {
                            key: "popGraphic",
                            value: function() {
                                var l = this.graphicsPool.pop();
                                return l && l.transform || (l = new PIXI.Graphics),
                                l
                            }
                        }, {
                            key: "pushText",
                            value: function(l) {
                                l.text = "",
                                this.resetAll(l),
                                l.anchor.set(0, 0),
                                this.textPool.push(l),
                                l.parent && l.parent.removeChild(l)
                            }
                        }, {
                            key: "popText",
                            value: function(l, i) {
                                l = l || "",
                                i = i || "";
                                var e = this.textPool.pop();
                                return e ? (e.text = l,
                                e.style = i) : e = new PIXI.Text(l,i),
                                e
                            }
                        }]),
                        p
                    }();
                    m.CachePool = f
                }
                )(h.framework || (h.framework = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = N(function p() {
                        q(this, p)
                    });
                    f.NONE = 0,
                    f.DEFAULT = 1,
                    f.SAMPLE_AQ = 2,
                    m.EqAttrMode = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.framework.BaseEquipment
                      , p = h.engines.assemble.Card
                      , c = h.engines.assemble.Slot
                      , l = h.engines.assemble.AssembleAble
                      , i = h.utils.NBArrayUtil
                      , e = function(t) {
                        function a(o) {
                            var s;
                            return q(this, a),
                            s = n.call(this, o),
                            s.className = "AssembleEquipment",
                            s.cards = [],
                            s.slots = [],
                            s
                        }
                        H(a, t);
                        var n = M(a);
                        return N(a, [{
                            key: "update",
                            value: function(s) {
                                k(E(a.prototype), "update", this).call(this, s)
                            }
                        }, {
                            key: "removed",
                            value: function() {
                                this.cards.forEach(function(u) {
                                    u.destroy()
                                }),
                                this.cards = null;
                                var s, r;
                                this.slots.forEach(function(u) {
                                    r = u.getCards(),
                                    r.forEach(function(d) {
                                        s = m.CardSlotUtil.getOwner(d),
                                        s.slotRemoved({
                                            card: d,
                                            slot: u
                                        })
                                    }),
                                    u.destroy()
                                }),
                                this.slots = null,
                                k(E(a.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "slotRemoved",
                            value: function(s) {}
                        }, {
                            key: "init",
                            value: function() {
                                k(E(a.prototype), "init", this).call(this),
                                this.updateZIndex(m.ZIndexType.Default),
                                this.updatePriority(m.PriorityType.Default)
                            }
                        }, {
                            key: "updateZIndex",
                            value: function(s) {
                                m.ZINDEX_MAP[this.className] && (s === m.ZIndexType.Added ? this.zIndex = m.ZINDEX_MAP[this.className].added : this.zIndex = m.ZINDEX_MAP[this.className].default)
                            }
                        }, {
                            key: "updatePriority",
                            value: function(s) {
                                m.PRIORITY_MAP[this.className] && (s === m.PriorityType.Added ? this.priority = m.PRIORITY_MAP[this.className].added : this.priority = m.PRIORITY_MAP[this.className].default)
                            }
                        }, {
                            key: "dragStart",
                            value: function() {
                                k(E(a.prototype), "dragStart", this).call(this),
                                this.forEachSubCard(function(s) {
                                    s.priority = 1
                                })
                            }
                        }, {
                            key: "dragMove",
                            value: function(s) {
                                var r = this;
                                this.isOnDragMove || this.cards.forEach(function(u) {
                                    var d = m.CardSlotUtil.getOwner(u.slot);
                                    d && (!s || s.indexOf(d) === -1) && u.userData.autoFree && !u.isFree() && r.freeCard(u)
                                }),
                                k(E(a.prototype), "dragMove", this).call(this, s),
                                this.slots.forEach(function(u) {
                                    u.group === m.AssembleGroup.POUR ? u.forEachCard(function(d) {
                                        d.isFree() || r.freeCard(d)
                                    }) : u.forEachCard(function(d) {
                                        m.CardSlotUtil.getOwner(d).followMoved(d)
                                    })
                                })
                            }
                        }, {
                            key: "dragEnd",
                            value: function() {
                                k(E(a.prototype), "dragEnd", this).call(this),
                                this.checkAllCardsCollision(),
                                this.forEachSubCard(function(s) {
                                    s.priority = 0
                                })
                            }
                        }, {
                            key: "addCard",
                            value: function(s, r, u, d, y, g, C) {
                                var T = new l(this,y || this,r,d,g,C)
                                  , A = new p(this.main.assembleEngine,T,u);
                                return this.cards.push(A),
                                s && s !== "" && (A.name = s),
                                A.userData.autoFree = !0,
                                A
                            }
                        }, {
                            key: "addSlot",
                            value: function(s, r, u, d, y, g, C, T) {
                                var A = new l(this,g || this,r,d,C,T)
                                  , S = new c(this.main.assembleEngine,A,u,y || 1);
                                return this.slots.push(S),
                                s && s !== "" && (S.name = s),
                                S
                            }
                        }, {
                            key: "checkAllCardsCollision",
                            value: function() {
                                var s = this;
                                this.cards.forEach(function(r) {
                                    s.checkCardCollision(r)
                                })
                            }
                        }, {
                            key: "checkCardCollision",
                            value: function(s) {
                                m.CardSlotUtil.checkCardCollision(s)
                            }
                        }, {
                            key: "checkAllSlotsCollision",
                            value: function() {
                                var s = this;
                                this.slots.forEach(function(r) {
                                    s.checkSlotCollision(r)
                                })
                            }
                        }, {
                            key: "checkSlotCollision",
                            value: function(s) {
                                m.CardSlotUtil.checkSlotCollision(s)
                            }
                        }, {
                            key: "freeAllCards",
                            value: function() {
                                var s = this;
                                this.cards.forEach(function(r) {
                                    r.isFree() || s.freeCard(r)
                                })
                            }
                        }, {
                            key: "freeCard",
                            value: function(s) {
                                s.isFree() || (m.CardSlotUtil.freeCard(s),
                                s.userData.soundOff && this.playSound(s.userData.soundOff, !1))
                            }
                        }, {
                            key: "canAddTo",
                            value: function(s) {
                                return !0
                            }
                        }, {
                            key: "canAddCard",
                            value: function(s) {
                                return !0
                            }
                        }, {
                            key: "cardAddedToSlot",
                            value: function(s) {
                                this.updateZIndex(m.ZIndexType.Added),
                                this.updatePriority(m.PriorityType.Added),
                                this.main.assembleEngine.cardFollow(s.card),
                                !this.main.isAssembling && s.card.userData.soundOn && this.playSound(s.card.userData.soundOn, !1)
                            }
                        }, {
                            key: "slotAddedCard",
                            value: function(s) {}
                        }, {
                            key: "cardFreed",
                            value: function(s) {
                                this.updateZIndex(m.ZIndexType.Default),
                                this.updatePriority(m.PriorityType.Default)
                            }
                        }, {
                            key: "freeCardOver",
                            value: function(s) {}
                        }, {
                            key: "getSlotByGroup",
                            value: function(s) {
                                for (var r = 0; r < this.slots.length; r++)
                                    if (this.slots[r].group === s)
                                        return this.slots[r];
                                return null
                            }
                        }, {
                            key: "getSlotsByGroup",
                            value: function(s) {
                                var r = [];
                                return this.slots.forEach(function(u) {
                                    u.group === s && r.push(u)
                                }),
                                r
                            }
                        }, {
                            key: "getCardByMask",
                            value: function(s) {
                                for (var r = 0; r < this.cards.length; r++)
                                    if (this.cards[r].mask === s)
                                        return this.cards[r];
                                return null
                            }
                        }, {
                            key: "getCardsByMask",
                            value: function(s) {
                                var r = [];
                                return this.cards.forEach(function(u) {
                                    u.mask === s && r.push(u)
                                }),
                                r
                            }
                        }, {
                            key: "getCardByName",
                            value: function(s) {
                                return i.find(this.cards, function(r) {
                                    return r.name === s
                                })
                            }
                        }, {
                            key: "getSlotByName",
                            value: function(s) {
                                return i.find(this.slots, function(r) {
                                    return r.name === s
                                })
                            }
                        }, {
                            key: "getAssembleData",
                            value: function() {
                                var s = [];
                                return this.cards.forEach(function(r) {
                                    r.isFree() || s.push({
                                        card: m.CardSlotUtil.getSaveData(r),
                                        slot: m.CardSlotUtil.getSaveData(r.slot)
                                    })
                                }),
                                s
                            }
                        }, {
                            key: "followMoved",
                            value: function(s) {}
                        }, {
                            key: "forEachSubCard",
                            value: function(s) {
                                this.slots.forEach(function(r) {
                                    r.forEachCard(s)
                                })
                            }
                        }]),
                        a
                    }(f);
                    m.AssembleEquipment = e
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.max;
                (function(p) {
                    var c = h.engines.chemicalReaction.ReactionWorld
                      , l = PIXI.Point
                      , i = h.plugins.ComponentProperty
                      , e = h.chemistry.EqAttrMode
                      , t = function(a) {
                        function n(s) {
                            var r;
                            return q(this, n),
                            r = o.call(this, s),
                            r.className = "ChemicalEquipment",
                            r.chemicalName = "",
                            r.canAddDrop = !1,
                            r.canAddGasDrop = !1,
                            r.attrMode = e.DEFAULT,
                            r.insertLength = 400,
                            r.showPascal = !1,
                            r.showTemp = !1,
                            r.showMass = !1,
                            r.showVolume = !1,
                            r.showMol = !1,
                            r.showConc = !1,
                            r.showEquation = r.main.globalConfig.equDefaultStatus,
                            r.showEleAni = !1,
                            r.noAttrConfig = !0,
                            r.enableAttrPascal = !1,
                            r.enableAttrTemp = !1,
                            r.enableAttrMass = !1,
                            r.enableAttrVolume = !0,
                            r.enableAttrMol = !0,
                            r.enableAttrConc = !0,
                            r.enableAttrEquation = !0,
                            r.enableAttrEleAni = !1,
                            r.chemicalInfoType = 0,
                            r.isBgLight = !1,
                            r.world = new c(s.reactionEngine),
                            r.saveWorldData = !1,
                            r
                        }
                        H(n, a);
                        var o = M(n);
                        return N(n, [{
                            key: "init",
                            value: function() {
                                k(E(n.prototype), "init", this).call(this),
                                this.chemicalInfoGroup = new p.ChemicalsInfoGroup(this.chemicalInfoType,this.main),
                                this.main.viewStack.infoLayer.addChild(this.chemicalInfoGroup),
                                this.addCursor(this, h.CursorType.Move),
                                n.DEBUG && (this.showVolume = !0,
                                this.showMol = !0,
                                this.showConc = !0,
                                this.showMass = !0,
                                this.showEquation = !0,
                                this.showEleAni = !0)
                            }
                        }, {
                            key: "update",
                            value: function(r) {
                                k(E(n.prototype), "update", this).call(this, r),
                                this.chemicalInfoGroup && this.chemicalInfoGroup.update(this),
                                this.isBgLight !== this.main.globalConfig.bgColorIsLight && (this.isBgLight = this.main.globalConfig.bgColorIsLight,
                                this.bgColorChanged())
                            }
                        }, {
                            key: "removed",
                            value: function() {
                                this.world.destroy(),
                                this.world = null,
                                this.chemicalInfoGroup.removed(),
                                this.chemicalInfoGroup = null,
                                k(E(n.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "isCovered",
                            get: function() {
                                return !1
                            }
                        }, {
                            key: "getWorld",
                            value: function() {
                                return this.world
                            }
                        }, {
                            key: "getWorldAry",
                            value: function() {
                                return [this.world]
                            }
                        }, {
                            key: "getGasPhase",
                            value: function() {
                                return this.world.getPhaseByType("g")[0]
                            }
                        }, {
                            key: "getReactEquations",
                            value: function() {
                                var r = this.world.getReactionResult();
                                return r.map(function(u) {
                                    return u.reaction.uid + "	:	" + u.mol.toExponential(3) + "	" + u.reaction.equation
                                })
                            }
                        }, {
                            key: "getConfigureData",
                            value: function() {
                                var r = {
                                    confArr: []
                                };
                                switch (this.attrMode) {
                                case e.NONE:
                                    break;
                                case e.DEFAULT:
                                    this.initDftMenu(r.confArr);
                                    break;
                                case e.SAMPLE_AQ:
                                    this.initSampleAqMenu(r.confArr);
                                    break
                                }
                                return r
                            }
                        }, {
                            key: "dragStart",
                            value: function() {
                                k(E(n.prototype), "dragStart", this).call(this)
                            }
                        }, {
                            key: "dragEnd",
                            value: function() {
                                k(E(n.prototype), "dragEnd", this).call(this)
                            }
                        }, {
                            key: "initData",
                            value: function(r) {
                                k(E(n.prototype), "initData", this).call(this, r),
                                !r || r.chemicalName && (this.chemicalName = r.chemicalName)
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var r = k(E(n.prototype), "getData", this).call(this);
                                return this.saveWorldData && (r.chemicalData = this.world.getData()),
                                this.attrMode !== e.DEFAULT && (r.attrMode = this.attrMode),
                                this.showPascal && (r.showPascal = this.showPascal),
                                this.showTemp && (r.showTemp = this.showTemp),
                                this.showMass && (r.showMass = this.showMass),
                                this.showVolume && (r.showVolume = this.showVolume),
                                this.showMol && (r.showMol = this.showMol),
                                this.showConc && (r.showConc = this.showConc),
                                this.showEquation && (r.showEquation = this.showEquation),
                                this.showEleAni && (r.showEleAni = this.showEleAni),
                                r
                            }
                        }, {
                            key: "setData",
                            value: function(r) {
                                k(E(n.prototype), "setData", this).call(this, r),
                                this.saveWorldData && this.world.setData(r.chemicalData),
                                r.attrMode !== void 0 && (this.attrMode = r.attrMode,
                                this.setAttrByMode()),
                                this.showPascal = !!r.showPascal,
                                this.showTemp = !!r.showTemp,
                                this.showMass = !!r.showMass,
                                this.showVolume = !!r.showVolume,
                                this.showMol = !!r.showMol,
                                this.showConc = !!r.showConc,
                                this.showEquation = !!r.showEquation,
                                this.showEleAni = !!r.showEleAni
                            }
                        }, {
                            key: "setDataOver",
                            value: function() {
                                k(E(n.prototype), "setDataOver", this).call(this)
                            }
                        }, {
                            key: "getPascal",
                            value: function() {
                                return 101324
                            }
                        }, {
                            key: "checkCollisionDrop",
                            value: function(r) {
                                var u = p.DropUtil.getDefaultResult(this);
                                return this.canAddDrop && !this.isCovered ? u = p.DropUtil.checkCollisionDropByVertex(r, this, this.getDropVertex()) : u.ignore = !0,
                                u
                            }
                        }, {
                            key: "addDrop",
                            value: function(r, u) {}
                        }, {
                            key: "checkCollisionGasDrop",
                            value: function(r) {
                                return this.canAddGasDrop ? p.DropUtil.checkCollisionDropByVertex(r, this, this.getGasDropVertex(), !1) : null
                            }
                        }, {
                            key: "addGasDrop",
                            value: function(r, u) {}
                        }, {
                            key: "getEquations",
                            value: function() {
                                return this.getElectroReaction()
                            }
                        }, {
                            key: "getElectroReaction",
                            value: function() {
                                return [[]]
                            }
                        }, {
                            key: "getChemicalReaction",
                            value: function() {
                                for (var r = [], u = this.getWorldAry(), d = 0; d < u.length; d++)
                                    r.push(p.ReactUtil.getEquationsByWorld(u[d]));
                                return r
                            }
                        }, {
                            key: "getChemInfoItemPos",
                            value: function() {
                                var r = this.getEqPosByDirRatio(0, 0);
                                return r.x += 10,
                                r.y -= this.chemicalInfoGroup.height,
                                r
                            }
                        }, {
                            key: "getEqPosByDirRatio",
                            value: function(r, u) {
                                var d = this.getLocalBounds()
                                  , y = this.main.viewStack
                                  , g = y.toLocal(new l(d.x,d.y), this)
                                  , C = y.toLocal(new l(d.x,d.y + d.height), this)
                                  , T = y.toLocal(new l(d.x + d.width,d.y + d.height), this)
                                  , A = y.toLocal(new l(d.x + d.width,d.y), this)
                                  , S = m(g.x, C.x, T.x, A.x)
                                  , B = m(g.y, C.y, T.y, A.y)
                                  , b = f(g.x, C.x, T.x, A.x)
                                  , P = f(g.y, C.y, T.y, A.y);
                                return new l(r * S + (1 - r) * b,u * B + (1 - u) * P)
                            }
                        }, {
                            key: "initSampleAqMenu",
                            value: function(r) {}
                        }, {
                            key: "getDropVertex",
                            value: function() {
                                return []
                            }
                        }, {
                            key: "getGasDropVertex",
                            value: function() {
                                return []
                            }
                        }, {
                            key: "bgColorChanged",
                            value: function() {}
                        }, {
                            key: "initDftMenu",
                            value: function(r) {
                                var u = this;
                                if (this.enableAttrTemp && r.push(i.getInputSwitch("\u6E29\u5EA6", this.showTemp, function(y) {
                                    u.showTemp = y.checked
                                }, this)),
                                this.enableAttrPascal && r.push(i.getInputSwitch("\u538B\u5F3A", this.showPascal, function(y) {
                                    u.showPascal = y.checked
                                }, this)),
                                this.enableAttrVolume && r.push(i.getInputSwitch("\u4F53\u79EF", this.showVolume, function(y) {
                                    u.showVolume = y.checked
                                }, this)),
                                this.enableAttrMol && r.push(i.getInputSwitch("\u7269\u8D28\u7684\u91CF", this.showMol, function(y) {
                                    u.showMol = y.checked
                                }, this)),
                                this.enableAttrEquation) {
                                    var d = this.enableAttrEleAni ? "\u7535\u5316\u5B66\u65B9\u7A0B\u5F0F" : "\u5316\u5B66\u65B9\u7A0B\u5F0F";
                                    r.push(i.getInputSwitch(d, this.showEquation, function(y) {
                                        u.showEquation = y.checked
                                    }, this))
                                }
                                this.enableAttrConc && r.push(i.getInputSwitch("\u6D53\u5EA6", this.showConc, function(y) {
                                    u.showConc = y.checked
                                }, this)),
                                this.enableAttrMass && r.push(i.getInputSwitch("\u8D28\u91CF", this.showMass, function(y) {
                                    u.showMass = y.checked
                                }, this))
                            }
                        }]),
                        n
                    }(p.AssembleEquipment);
                    t.DEBUG = !1,
                    p.ChemicalEquipment = t
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.max
                  , p = Math.PI;
                (function(c) {
                    var l = h.components.CircleRotateButton
                      , i = h.engines.chemicalReaction.WorldUtil
                      , e = PIXI.Point
                      , t = PIXI.Graphics
                      , a = h.pixiExtras.NBGraphicsUtil
                      , n = h.utils.NBPointUtils
                      , o = h.utils.Constant
                      , s = h.components.NBComConst
                      , r = function(d) {
                        function y(C) {
                            var T;
                            return q(this, y),
                            T = g.call(this, C),
                            T.className = "ChemicalContainer",
                            T.capacityMask = new t,
                            T.noReduce = !1,
                            T.insertLength = 400,
                            T.enableEqRotate = !1,
                            T.saveWorldData = !0,
                            T
                        }
                        H(y, d);
                        var g = M(y);
                        return N(y, [{
                            key: "removed",
                            value: function() {
                                this.eqRotateButton.removed(),
                                this.eqRotateButton = null,
                                this.containerRenderer.removed(),
                                this.containerRenderer = null,
                                k(E(y.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "initData",
                            value: function(T) {
                                k(E(y.prototype), "initData", this).call(this, T),
                                this.containerRenderer.fillWithAir()
                            }
                        }, {
                            key: "update",
                            value: function(T) {
                                k(E(y.prototype), "update", this).call(this, T),
                                this.containerRenderer && (this.containerRenderer.rot = this.rotation,
                                this.containerRenderer.update(T)),
                                this.enableEqRotate && (this.eqRotateButton.visible = this.isSelect),
                                this.eqRotateButton.visible && this.rePosEqRotateBtn(),
                                this.limitLiquidVolume()
                            }
                        }, {
                            key: "totalCapacity",
                            get: function() {
                                return this.containerRenderer.capacity
                            },
                            set: function(T) {
                                this.containerRenderer.capacity = T
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(y.prototype), "init", this).call(this),
                                this.containerRenderer = new c.ContainerRenderer(this.capacityVertex,this.world,0,this.main.air),
                                this.addChildAt(this.containerRenderer, 0),
                                this.initBtns(),
                                this.initCapacityMask()
                            }
                        }, {
                            key: "initCapacityMask",
                            value: function() {
                                this.capacityMask.beginFill(16711680),
                                this.capacityMask.alpha = 0,
                                this.capacityMask.renderable = !1,
                                a.drawPolygon(this.capacityMask, this.capacityVertex),
                                this.capacityMask.endFill(),
                                this.addChild(this.capacityMask)
                            }
                        }, {
                            key: "fillWithAir",
                            value: function() {
                                this.containerRenderer.fillWithAir()
                            }
                        }, {
                            key: "getLiquidMessage",
                            value: function() {
                                return this.world.getLiquidMessage()
                            }
                        }, {
                            key: "geLiquidTotalVolume",
                            value: function() {
                                return this.world.getLiquidV()
                            }
                        }, {
                            key: "getCurrentCapacity",
                            value: function(T) {
                                return this.rotation !== 0 || T ? this.containerRenderer.getCurrentCapacity() : this.totalCapacity
                            }
                        }, {
                            key: "getAqueousSolution",
                            value: function() {
                                return i.getSolution(this.world, "H2O")
                            }
                        }, {
                            key: "hasLiquid",
                            value: function() {
                                return 0 < this.geLiquidTotalVolume()
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var T = k(E(y.prototype), "getData", this).call(this);
                                return T
                            }
                        }, {
                            key: "setData",
                            value: function(T) {
                                k(E(y.prototype), "setData", this).call(this, T)
                            }
                        }, {
                            key: "setDataOver",
                            value: function() {}
                        }, {
                            key: "getPascal",
                            value: function() {
                                return 101324
                            }
                        }, {
                            key: "capacityAddChild",
                            value: function(T) {
                                this.addChild(T),
                                T.mask = this.capacityMask
                            }
                        }, {
                            key: "liquidAddChild",
                            value: function(T) {
                                this.addChild(T),
                                T.mask = this.containerRenderer.liquidMask
                            }
                        }, {
                            key: "gasAddChild",
                            value: function(T) {
                                this.addChild(T),
                                T.mask = this.containerRenderer.gasMask
                            }
                        }, {
                            key: "getGlobalLiquidTopY",
                            value: function() {
                                return 0 < this.containerRenderer.liquidVertexsArr.length && 0 < this.containerRenderer.liquidVertexsArr[0].length ? this.toGlobal(this.containerRenderer.liquidVertexsArr[0][0]).y : (console.error("\u6CA1\u6709\u6DB2\u9762\uFF0C\u4E0D\u5E94\u8BE5\u5B58\u5728\u6C14\u6CE1"),
                                -Infinity)
                            }
                        }, {
                            key: "getMouseParam",
                            value: function(T) {
                                var A = this.toLocal(T);
                                return this.containerRenderer.getMouseParam(A)
                            }
                        }, {
                            key: "getPhaseAtPoint",
                            value: function(T, A) {
                                var S = this.getMouseParam(T);
                                return S.phaseData
                            }
                        }, {
                            key: "checkCollisionDrop",
                            value: function(T) {
                                var A = k(E(y.prototype), "checkCollisionDrop", this).call(this, T);
                                return A.ignore || A.type !== 0 || (A = this.containerRenderer.checkLiquidCollisionDrop(this, T)),
                                A
                            }
                        }, {
                            key: "addDrop",
                            value: function(T, A) {
                                A.type === -1 && this.world.addPhasesData([T.phase])
                            }
                        }, {
                            key: "gasBalanceWithAir",
                            value: function() {
                                this.limitLiquidVolume();
                                var T = this.getGasPhase();
                                if (T && (T.volume = this.totalCapacity - this.geLiquidTotalVolume(),
                                this.isConnectWithAir())) {
                                    var A = T.pressure - this.main.air.pressure;
                                    if (A != 0) {
                                        if (0 < A) {
                                            var S = A * T.volume / (o.R * T.temperature);
                                            this.runoutGasDrop(T, S)
                                        }
                                        T.pressure = this.main.air.pressure
                                    }
                                }
                            }
                        }, {
                            key: "isConnectWithAir",
                            value: function() {
                                return !0
                            }
                        }, {
                            key: "runoutGasDrop",
                            value: function(T, A) {
                                var S = this.getGasOutParams();
                                if (S.length !== 0) {
                                    A /= S.length;
                                    var B = T.clone();
                                    B.mol = A;
                                    for (var b = 0; b < S.length; b++) {
                                        var P = S[b]
                                          , I = o.m2px(.0224 * A / (.016 * P.S))
                                          , O = new e(I * P.dir.x,I * P.dir.y);
                                        this.main.gasDropManager.addDrop(B.clone(), this.toGlobal(P.p), O)
                                    }
                                }
                            }
                        }, {
                            key: "getDropVertex",
                            value: function() {
                                return this.capacityVertex
                            }
                        }, {
                            key: "getGasOutParams",
                            value: function() {
                                return []
                            }
                        }, {
                            key: "limitLiquidVolume",
                            value: function() {
                                var T = this.geLiquidTotalVolume()
                                  , A = this.totalCapacity
                                  , S = m(1e-6, .01 * A);
                                A - T < S && this.world.reduceLiquid(T + S - A)
                            }
                        }, {
                            key: "updateSlotsRot",
                            value: function(T) {}
                        }, {
                            key: "updateWhenRot",
                            value: function(T) {}
                        }, {
                            key: "updateAfterRot",
                            value: function(T) {}
                        }, {
                            key: "initBtns",
                            value: function() {
                                var T = f(this.width, this.height) / 2 + 25;
                                this.eqRotateButton = new l(s.BUTTON_ROTATE_NAME,{
                                    btnDragMove: this.eqRotateBtnMoved.bind(this),
                                    btnStopDrag: this.eqRotateBtnEnd.bind(this)
                                },50,T,-p / 2,this),
                                this.rePosEqRotateBtn(),
                                this.main.viewStack.assistLayer.addChild(this.eqRotateButton),
                                this.eqRotateButton.setPercent(0),
                                this.setEqRotPer(0),
                                this.eqRotateButton.visible = !1
                            }
                        }, {
                            key: "rePosEqRotateBtn",
                            value: function() {
                                this.eqRotateButton.x = this.x,
                                this.eqRotateButton.y = this.y
                            }
                        }, {
                            key: "eqRotateBtnMoved",
                            value: function(T) {
                                this.setEqRotPer(T)
                            }
                        }, {
                            key: "setEqRotPer",
                            value: function(T) {
                                this.rotation = this.eqRotateButton.getAngByPercent(T),
                                this.updateSlotsRot(this.rotation),
                                this.updateWhenRot(this.rotation)
                            }
                        }, {
                            key: "eqRotateBtnEnd",
                            value: function(T) {
                                this.updateAfterRot(this.rotation)
                            }
                        }]),
                        y
                    }(c.ChemicalEquipment);
                    c.ChemicalContainer = r;
                    var u = N(function d(y, g, C) {
                        q(this, d),
                        this.S = y,
                        this.p = g,
                        this.dir = C,
                        n.normalize(this.dir)
                    });
                    c.GasRunoutParam = u
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = N(function p() {
                        q(this, p)
                    });
                    f.NARROW_GLASS_PLUG = 1,
                    f.RUBBER_PLUG = 2,
                    f.GLASS_SHEET = 4,
                    f.ELECTRODE = 8,
                    f.GLASS_CATHETER = 16,
                    f.SALT_BRIDGE_LEFT = 32,
                    f.SALT_BRIDGE_RIGHT = 64,
                    f.MEMBRANE = 128,
                    f.TERMINAL = 256,
                    f.DROPPER = 512,
                    f.CELL_COVER = 1024,
                    f.RUBBER_CATHETER = 2048,
                    f.POUR = 4096,
                    f.DISH = 8192,
                    m.AssembleGroup = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = 3 * -Math.PI / 4
                      , p = h.components.VerticalLinearButton
                      , c = h.plugins.ComponentProperty
                      , l = h.components.NBComConst
                      , i = h.utils.NBChemStrConvert
                      , e = PIXI.Container
                      , t = function(a) {
                        function n(s) {
                            var r;
                            return q(this, n),
                            r = o.call(this, s),
                            r.isResetAfterPourEnd = !1,
                            r.enableAttrPlug = !0,
                            r.enableAttrLable = !0,
                            r.isShowPouroutTip = !0,
                            r.canChgConc = !1,
                            r.topLable = "",
                            r.bottomLable = "",
                            r.plugClassName = "RubberPlug",
                            r.tipContainer = new e,
                            r.isAddingPlug = !1,
                            r.maxConc = .9,
                            r.minConc = .001,
                            r.concStep = .001,
                            r.concentIdx = 0,
                            r.sounds = [m.SoundConst.ADDWATER],
                            r
                        }
                        H(n, a);
                        var o = M(n);
                        return N(n, [{
                            key: "removed",
                            value: function() {
                                this.main.cachePool.pushText(this.pourInTipText),
                                this.pourInTipText = null,
                                this.pourBtn.removed(),
                                this.pourBtn = null,
                                this.label.removed(),
                                this.label = null,
                                k(E(n.prototype), "removed", this).call(this),
                                this.plugEq = null,
                                this.plugSlot = null
                            }
                        }, {
                            key: "slotRemoved",
                            value: function(r) {
                                r.card.mask === m.AssembleGroup.POUR && (this.pourBtn.visible = !1)
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(n.prototype), "init", this).call(this),
                                this.pourBtn = new p(l.BUTTON_POUR_NAME,{
                                    btnDragMove: this.pourBtnMoved.bind(this),
                                    btnStopDrag: this.pourBtnEnd.bind(this)
                                },60,-300,this),
                                this.pourBtn.updateArrowRot(Math.PI),
                                this.main.viewStack.assistLayer.addChild(this.pourBtn),
                                this.pourBtn.visible = !1,
                                this.pourBtn.setDotVisible(!0),
                                this.label = m.LabelUtil.createLabel(0, 20, "", .6, this),
                                this.addChild(this.label),
                                this.label.visible = !1,
                                this.initTipContainer()
                            }
                        }, {
                            key: "initTipContainer",
                            value: function() {
                                this.addChild(this.tipContainer),
                                this.tipContainer.allowGetBounds = !1;
                                var r = this.getLocalBounds();
                                this.tipContainer.x = r.x - 20,
                                this.tipContainer.y = r.y + r.height,
                                this.pourInTipText = this.main.cachePool.popText("", {
                                    fontSize: "20px",
                                    fontFamily: "Arial",
                                    fill: 16777215,
                                    stroke: 0,
                                    strokeThickness: 0,
                                    wordWrapWidth: 1
                                }),
                                this.pourInTipText.anchor.set(1),
                                this.pourInTipText.visible = !1,
                                this.tipContainer.addChild(this.pourInTipText)
                            }
                        }, {
                            key: "initLiquid",
                            value: function(r) {
                                this.world.clear(),
                                this.world.prepareSolution(r, .8 * this.totalCapacity),
                                this.liquidData = {
                                    solvent: r.solvent,
                                    solute: r.solute ? {
                                        formula: r.solute.formula,
                                        concentration: r.solute.concentration
                                    } : null
                                },
                                this.canChgConc && (this.maxConc = this.main.reactionEngine.dataStructManager.getChemical(r.solute.formula, 0).maxPreConc,
                                console.log("maxConc > formula: ".concat(r.solute.formula, ", maxConc: ").concat(this.maxConc))),
                                this.containerRenderer.update(0)
                            }
                        }, {
                            key: "initLableData",
                            value: function(r) {
                                this.topLable = i.convertFormula(r.label) || "",
                                this.bottomLable = this.canChgConc ? this.getBottomLabelByMenuIdx(this.concentIdx) : "",
                                this.updateLabelText()
                            }
                        }, {
                            key: "update",
                            value: function(r) {
                                k(E(n.prototype), "update", this).call(this, r),
                                this.pourBtn.visible && this.pourBtn.setIconScale(.6 / this.main.getScale())
                            }
                        }, {
                            key: "dragMove",
                            value: function() {
                                k(E(n.prototype), "dragMove", this).call(this)
                            }
                        }, {
                            key: "cardFreed",
                            value: function(r) {
                                k(E(n.prototype), "cardFreed", this).call(this, r),
                                r.card.mask === m.AssembleGroup.POUR && (this.pourInObj && this.pourItem && (this.pourInObj.hidePourInTip(this.pourItem.slot),
                                this.hidePourOutTip(this.pourItem.card)),
                                this.pourInObj = null,
                                this.pourItem = null,
                                this.rotation = 0,
                                this.containerRenderer.rot = 0,
                                this.pourBtn.visible = !1)
                            }
                        }, {
                            key: "cardAddedToSlot",
                            value: function(r) {
                                k(E(n.prototype), "cardAddedToSlot", this).call(this, r),
                                r.card.mask === m.AssembleGroup.POUR && this.showPourOutBtn(r)
                            }
                        }, {
                            key: "freeCardOver",
                            value: function(r) {
                                k(E(n.prototype), "freeCardOver", this).call(this, r),
                                r.card.mask === m.AssembleGroup.RUBBER_PLUG && (this.plugEq = null)
                            }
                        }, {
                            key: "slotAddedCard",
                            value: function(r) {
                                k(E(n.prototype), "slotAddedCard", this).call(this, r),
                                r.card.mask === m.AssembleGroup.RUBBER_PLUG && (this.plugEq = r.card.assembleData.owner)
                            }
                        }, {
                            key: "showPourOutBtn",
                            value: function(r) {
                                this.rotation = 0,
                                this.pourInObj = m.CardSlotUtil.getOwner(r.slot),
                                this.pourItem = r,
                                this.pourBtn.visible = !0,
                                this.pourBtn.setPercent(0),
                                this.updatePourBtnPos()
                            }
                        }, {
                            key: "showPourInTip",
                            value: function(r, u) {
                                this.containerRenderer.showPourInTip(r),
                                this.pourInTipText.visible = !0,
                                this.pourInTipText.style.fill = this.main.globalConfig.bgColorIsLight ? 3422529 : 16777215;
                                var d = 1e6 * this.containerRenderer.geLiquidVolume() || 0;
                                r *= 1e6,
                                this.pourInTipText.text = "\u589E\u91CF\uFF1A".concat(r.toFixed(1), `mL
\u603B\u91CF\uFF1A`).concat((r + d).toFixed(1))
                            }
                        }, {
                            key: "hidePourInTip",
                            value: function(r) {
                                this.containerRenderer.hidePourTip(),
                                this.pourInTipText.text = "",
                                this.pourInTipText.visible = !1
                            }
                        }, {
                            key: "pourInLiquid",
                            value: function(r, u) {
                                this.world.addPhasesData(r);
                                var d = this.world.getLiquidV() - this.getCurrentCapacity(!0);
                                0 < d && this.world.reduceLiquid(d)
                            }
                        }, {
                            key: "getPourInVolume",
                            value: function(r) {
                                return this.containerRenderer.capacity
                            }
                        }, {
                            key: "showPourOutTip",
                            value: function(r, u) {
                                this.containerRenderer.showPourOutTip(r)
                            }
                        }, {
                            key: "hidePourOutTip",
                            value: function(r) {
                                this.containerRenderer.hidePourTip()
                            }
                        }, {
                            key: "getPourOutVolume",
                            value: function() {
                                var r = this.containerRenderer.getPourCapacity();
                                return this.noReduce ? .667 * this.pourInObj.getPourInVolume(this.pourItem.slot) * r / this.totalCapacity : r
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var r = k(E(n.prototype), "getData", this).call(this);
                                return this.attrMode === m.EqAttrMode.SAMPLE_AQ ? (r.sampleData = {
                                    pDataId: this.pDataId
                                },
                                this.canChgConc && (r.sampleData.conc = this.getCurConcentration(),
                                r.sampleData.concIdx = this.concentIdx)) : (this.topLable && (r.topLabel = this.topLable),
                                this.bottomLable && (r.btmLabel = this.bottomLable)),
                                r
                            }
                        }, {
                            key: "setData",
                            value: function(r) {
                                k(E(n.prototype), "setData", this).call(this, r),
                                r.sampleData ? this.initSampleData(r.sampleData) : (this.topLable = r.topLabel || "",
                                this.bottomLable = r.btmLabel || "",
                                this.updateLabelText())
                            }
                        }, {
                            key: "initSampleData",
                            value: function(r) {
                                this.initSampleById(r.pDataId),
                                this.canChgConc && (this.chgConc(r.conc),
                                this.setLabelText(!1, this.getBottomLabelByMenuIdx(r.concIdx)))
                            }
                        }, {
                            key: "initSampleById",
                            value: function(r) {
                                var u = this.main.getEqConfData(r);
                                this.initSampleByData(u)
                            }
                        }, {
                            key: "initSampleByData",
                            value: function(r) {
                                this.pDataId = r.id,
                                this.instanceName = this.getInstanceNameByLanKey(r.lanKey, this.insIdx),
                                this.updateData(r.initData)
                            }
                        }, {
                            key: "updateData",
                            value: function(r) {
                                this.canChgConc = m.CombinationUtil.canChangeConcentration(r),
                                this.initLiquid(r),
                                this.initLableData(r)
                            }
                        }, {
                            key: "setAttrByMode",
                            value: function() {
                                k(E(n.prototype), "setAttrByMode", this).call(this),
                                this.attrMode === m.EqAttrMode.SAMPLE_AQ && (this.isShowPouroutTip = !1,
                                this.isResetAfterPourEnd = !0)
                            }
                        }, {
                            key: "updateLabelText",
                            value: function() {
                                this.label.labelText = m.LabelUtil.getLabelStrByPos(this.topLable, this.bottomLable),
                                this.label.visible = !!this.label.labelText
                            }
                        }, {
                            key: "setLabelParam",
                            value: function(r, u, d) {
                                this.label.x = r,
                                this.label.y = u,
                                this.label.scale.x = this.label.scale.y = d
                            }
                        }, {
                            key: "setLabelScale",
                            value: function(r) {
                                this.label.scale.x = this.label.scale.y = r
                            }
                        }, {
                            key: "getConfigureData",
                            value: function() {
                                var r = this
                                  , u = k(E(n.prototype), "getConfigureData", this).call(this);
                                return this.attrMode === m.EqAttrMode.DEFAULT && (this.enableAttrPlug && u.confArr.push(c.getSwitch("\u80F6\u585E", this.hasPlug(), function(d) {
                                    console.log("getSwitch -> \u80F6\u585E: " + d.checked),
                                    r.asmRubberPlug(d.checked)
                                }, this)),
                                this.enableAttrLable && (u.confArr.push(c.getTextInput("\u4E0A\u6807\u7B7E", this.topLable, "", function(d) {
                                    r.setLabelText(!0, d.showValue)
                                }, this)),
                                u.confArr.push(c.getTextInput("\u4E0B\u6807\u7B7E", this.bottomLable, "", function(d) {
                                    r.setLabelText(!1, d.showValue)
                                }, this)))),
                                u
                            }
                        }, {
                            key: "addPlug",
                            value: function(r) {
                                m.CardSlotUtil.tryCardAddToSlot(r, this.plugSlot)
                            }
                        }, {
                            key: "hasPlug",
                            value: function() {
                                return !this.plugSlot.isEmpty()
                            }
                        }, {
                            key: "initSampleAqMenu",
                            value: function(r) {
                                var u = this;
                                if (k(E(n.prototype), "initSampleAqMenu", this).call(this, r),
                                this.canChgConc) {
                                    r.push(c.getScrollBar("\u6D53\u5EA6", !0, "mol/L", this.maxConc, this.minConc, this.getCurConcentration() + "", this.concStep, function(y) {
                                        u.chgConc(parseFloat(y.toFixed(3)))
                                    }, this));
                                    var d = ["\u7269\u8D28\u7684\u91CF\u6D53\u5EA6", "\u9690\u85CF"];
                                    r.push(c.getDropMenu("\u6D53\u5EA6\u663E\u793A", !1, "", d[this.concentIdx], d, this, function(y) {
                                        u.concentIdx = y,
                                        u.setLabelText(!1, u.getBottomLabelByMenuIdx(y))
                                    }, 2, 0))
                                }
                            }
                        }, {
                            key: "pourBtnMoved",
                            value: function(r) {
                                var u = 0 + r * (f - 0);
                                this.rotation = u,
                                this.containerRenderer.rot = this.rotation,
                                this.updatePourOut()
                            }
                        }, {
                            key: "updateWhenRot",
                            value: function(r) {
                                this.pourInObj && (this.containerRenderer.rot = this.rotation,
                                this.updatePourOut())
                            }
                        }, {
                            key: "pourBtnEnd",
                            value: function(r) {
                                this.dealPourOut(),
                                this.isResetAfterPourEnd && (this.rotation = 0,
                                this.containerRenderer.rot = 0,
                                this.pourBtn.setPercent(0))
                            }
                        }, {
                            key: "updateAfterRot",
                            value: function(r) {
                                this.dealPourOut()
                            }
                        }, {
                            key: "dealPourOut",
                            value: function() {
                                if (this.pourInObj) {
                                    this.pourInObj.hidePourInTip(this.pourItem.slot),
                                    this.hidePourOutTip(this.pourItem.card);
                                    var r = this.getPourOutVolume();
                                    if (0 < r) {
                                        var u = this.world.getTopLiquid(r, !this.noReduce);
                                        this.pourInObj.pourInLiquid(u, this.pourItem.slot),
                                        this.playSound(m.SoundConst.ADDWATER, !1)
                                    }
                                }
                            }
                        }, {
                            key: "updatePourBtnPos",
                            value: function() {
                                this.pourBtn.x = this.x + this.width / 2 + 50,
                                this.pourBtn.y = this.y + 150
                            }
                        }, {
                            key: "asmRubberPlug",
                            value: function(r) {
                                var u = this;
                                r === this.hasPlug() || (r ? !this.isAddingPlug && (this.isAddingPlug = !0,
                                this.main.addEq(this.plugClassName, this.position, function(d) {
                                    u.isAddingPlug = !1,
                                    u.plugEq = d,
                                    m.CardSlotUtil.tryCardAddToSlot(u.plugEq.card, u.plugSlot)
                                })) : (this.main.removeEq(this.plugEq),
                                this.plugEq = null))
                            }
                        }, {
                            key: "setLabelText",
                            value: function(r, u) {
                                u = u || "",
                                r ? this.topLable = u : this.bottomLable = u,
                                this.updateLabelText()
                            }
                        }, {
                            key: "updatePourOut",
                            value: function() {
                                if (this.pourInObj) {
                                    var r = this.getPourOutVolume();
                                    this.isShowPouroutTip && this.showPourOutTip(r, this.pourItem.card),
                                    this.pourInObj.showPourInTip(r, this.pourItem.slot)
                                }
                            }
                        }, {
                            key: "getBottomLabelByMenuIdx",
                            value: function(r) {
                                var u = "";
                                switch (r) {
                                case 0:
                                    u = this.getCurConcentration() + "mol/L";
                                    break;
                                case 1:
                                    u = "";
                                    break;
                                default:
                                    return
                                }
                                return u
                            }
                        }, {
                            key: "chgConc",
                            value: function(r) {
                                this.liquidData && this.liquidData.solute.concentration !== r && (this.liquidData.solute.concentration = r,
                                this.initLiquid(this.liquidData)),
                                this.concentIdx === 0 && this.setLabelText(!1, this.getBottomLabelByMenuIdx(0))
                            }
                        }, {
                            key: "getMassFraction",
                            value: function() {
                                return 1.toFixed(1) + "%"
                            }
                        }, {
                            key: "getCurConcentration",
                            value: function() {
                                return this.liquidData.solute.concentration
                            }
                        }]),
                        n
                    }(m.ChemicalContainer);
                    m.PourAbleContainer = t
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.engines.pressure.PTube
                      , p = h.dataStruct.Cdeque
                      , c = function() {
                        function l(i, e) {
                            q(this, l),
                            this.S = l.DEFAULT_S,
                            this.L = 0,
                            this.eq = i,
                            this.pTube = new f(i.main.pressureEngine,{
                                owner: this,
                                eq: i
                            }),
                            this.cdeque = new p(e,i.main.air.clone()),
                            this.cdeque.userData.S = this.S,
                            this.air = i.main.air,
                            this.L = e,
                            this.main = i.main,
                            this.cdeque.canMerge = m.TubeUtil.canMerge
                        }
                        return N(l, [{
                            key: "destroy",
                            value: function() {
                                this.cdeque.canMerge = null,
                                this.eq = null,
                                this.air = null,
                                this.pTube.destroy(),
                                this.pTube = null,
                                this.cdeque.canMerge = null,
                                this.cdeque.destroy(),
                                this.cdeque = null,
                                this.main = null
                            }
                        }, {
                            key: "mouse0",
                            get: function() {
                                return this.pTube.mouse0
                            }
                        }, {
                            key: "mouse1",
                            get: function() {
                                return this.pTube.mouse1
                            }
                        }, {
                            key: "resize",
                            value: function(e) {
                                this.cdeque.resize(e, this.air.clone()),
                                this.L = e
                            }
                        }, {
                            key: "updateParam",
                            value: function() {
                                var e = this
                                  , t = 0
                                  , a = 0;
                                this.cdeque.forEach(function(n) {
                                    n.data.phaseType === "l" && (t += 9.8 * n.data.density * n.length,
                                    n.data.density > a && (a = n.data.density * n.length / e.L))
                                }),
                                this.pTube.dp = t,
                                this.pTube.maxRho = a,
                                this.pTube.S = this.S,
                                this.cdeque.userData.S = this.S
                            }
                        }, {
                            key: "transferFluid",
                            value: function() {
                                var e;
                                if (0 < this.mouse0.v ? e = this.mouse0 : 0 < this.mouse1.v && (e = this.mouse1),
                                e && !e.friend) {
                                    var t = this._transferFluid(e);
                                    t.parent || t.friend || m.PressureUtil.liquid2air(t)
                                }
                            }
                        }, {
                            key: "transferIn",
                            value: function(e) {
                                var t = this
                                  , a = this.cdeque.getLastRemoveArr();
                                a.forEach(function(n) {
                                    var o = n.data.clone();
                                    o.mol = m.PressureUtil.getItemMol(n, t.S),
                                    e.addPhasesData([o])
                                })
                            }
                        }, {
                            key: "transferOut",
                            value: function(e) {
                                var t = this
                                  , a = this.cdeque.getLastAddedArr();
                                a.forEach(function(n) {
                                    var o = n.data.clone();
                                    o.mol = m.PressureUtil.getItemMol(n, t.S),
                                    o.forEachChemical(function(s) {
                                        e.reduceChemical(s)
                                    })
                                })
                            }
                        }, {
                            key: "_transferFluid",
                            value: function(e) {
                                var t = [m.PressureUtil.getCdequeItem(e.userData.phase, e.v, this.S)];
                                return this.forEachTube(e, function(a) {
                                    e = a;
                                    var n = m.PressureUtil.getTubeComp(a).cdeque
                                      , o = a === a.tube.mouse0
                                      , s = [];
                                    t.forEach(function(r) {
                                        o ? s.push.apply(s, re(n.unshift(r.length, r.data))) : s.push.apply(s, re(n.push(r.length, r.data)))
                                    }),
                                    t = s
                                }),
                                e.brother
                            }
                        }, {
                            key: "forEachTube",
                            value: function(e, t) {
                                for (var a = e; e && (t(e),
                                e = e.brother.friend,
                                e !== a); )
                                    ;
                            }
                        }]),
                        l
                    }();
                    c.DEFAULT_S = .004 * (.004 * Math.PI),
                    m.TubeComp = c
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        f[f.H2SO4 = 0] = "H2SO4",
                        f[f.NaOH = 1] = "NaOH"
                    }
                    )(m.FilterPaperType || (m.FilterPaperType = {}))
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        f[f.KCL = 0] = "KCL",
                        f[f.KNO3 = 1] = "KNO3"
                    }
                    )(m.SaltBridgeType || (m.SaltBridgeType = {}))
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = PIXI.Point
                      , p = h.utils.Constant
                      , c = function(l) {
                        function i(t) {
                            var a;
                            return q(this, i),
                            a = e.call(this, t),
                            a.isTube = !0,
                            a.curLength = 100,
                            a
                        }
                        H(i, l);
                        var e = M(i);
                        return N(i, [{
                            key: "removed",
                            value: function() {
                                this.tube.destroy(),
                                this.tube = null,
                                k(E(i.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(i.prototype), "init", this).call(this),
                                this.tube = new m.TubeComp(this,p.px2m(this.curLength))
                            }
                        }, {
                            key: "updatePressureParam",
                            value: function() {
                                this.tube.mouse0.userData.globalP = this.toGlobal(this.getMouseP0()),
                                this.tube.mouse1.userData.globalP = this.toGlobal(this.getMouseP1()),
                                this.tube.mouse0.userData.dir = this.getMouseDir0(),
                                this.tube.mouse1.userData.dir = this.getMouseDir1(),
                                m.PressureUtil.updateOneMouseParam(this.tube.mouse0, this.main.air),
                                m.PressureUtil.updateOneMouseParam(this.tube.mouse1, this.main.air),
                                this.tube.updateParam()
                            }
                        }, {
                            key: "transferFluid",
                            value: function() {
                                this.tube.transferFluid()
                            }
                        }, {
                            key: "hasGasIn",
                            value: function(a, n) {
                                if (n === 1 && 0 > this.tube.mouse1.v || n === 0 && 0 > this.tube.mouse0.v) {
                                    for (var o = this.tube.cdeque.getLastRemoveArr(), s = 0, r; s < o.length; s++)
                                        if (r = o[s],
                                        r.data.phaseType === "g" && r.data.hasChemicalByFormula(a, 0))
                                            return !0
                                }
                                return !1
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var a = k(E(i.prototype), "getData", this).call(this);
                                return a.curLength = this.curLength,
                                a
                            }
                        }, {
                            key: "setData",
                            value: function(a) {
                                k(E(i.prototype), "setData", this).call(this, a),
                                this.setCurLength(a.curLength)
                            }
                        }, {
                            key: "setCurLength",
                            value: function(a) {
                                this.curLength = a
                            }
                        }, {
                            key: "updateTubeInfo",
                            value: function() {
                                this.tube.resize(p.px2m(this.curLength))
                            }
                        }, {
                            key: "getMouseBySlot",
                            value: function(a) {
                                return a.userData.mouse
                            }
                        }, {
                            key: "getMouseP0",
                            value: function() {
                                return new f(0,0)
                            }
                        }, {
                            key: "getMouseP1",
                            value: function() {
                                return new f(0,1)
                            }
                        }, {
                            key: "getMouseDir0",
                            value: function() {
                                return new f(0,1)
                            }
                        }, {
                            key: "getMouseDir1",
                            value: function() {
                                return new f(0,-1)
                            }
                        }]),
                        i
                    }(m.ChemicalEquipment);
                    m.Catheter = c
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.PI;
                (function(f) {
                    var p = function(c) {
                        function l(e) {
                            var t;
                            return q(this, l),
                            t = i.call(this, e),
                            t.className = "Plug",
                            t.enableInvert = !1,
                            t.attrMode = f.EqAttrMode.NONE,
                            t.setInversion(!0),
                            t
                        }
                        H(l, c);
                        var i = M(l);
                        return N(l, [{
                            key: "removed",
                            value: function() {
                                this.card = null,
                                k(E(l.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "update",
                            value: function(t) {
                                k(E(l.prototype), "update", this).call(this, t),
                                f.ZIndexUtil.underOwner(this, this.card)
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(l.prototype), "init", this).call(this),
                                this.card = this.addCard("plug", this, this.group),
                                this.addCursor(this, h.CursorType.Hand)
                            }
                        }, {
                            key: "dragStart",
                            value: function() {
                                k(E(l.prototype), "dragStart", this).call(this),
                                this.setInversion(!1)
                            }
                        }, {
                            key: "dragEnd",
                            value: function() {
                                k(E(l.prototype), "dragEnd", this).call(this),
                                this.setInversion(!0)
                            }
                        }, {
                            key: "cardAddedToSlot",
                            value: function(t) {
                                k(E(l.prototype), "cardAddedToSlot", this).call(this, t),
                                t.card === this.card && this.setInversion(!1)
                            }
                        }, {
                            key: "canAddTo",
                            value: function(t) {
                                return k(E(l.prototype), "canAddTo", this).call(this, t)
                            }
                        }, {
                            key: "setAttrByMode",
                            value: function() {
                                this.attrMode === f.EqAttrMode.SAMPLE_AQ && (this.enableInvert = !0)
                            }
                        }, {
                            key: "bindBottle",
                            value: function(t) {
                                this.bindBottleUID = t.UID,
                                this.addEventListener("pointerdown", this.bindBottleDown = function() {
                                    t && t.headBg && (t.headBg.alpha = .5)
                                }
                                ),
                                this.addEventListener("pointerup", this.bindBottleUp = function() {
                                    t && t.headBg && (t.headBg.alpha = 0)
                                }
                                )
                            }
                        }, {
                            key: "removeBindBottle",
                            value: function() {
                                this.removeEventListener("pointerdown", this.bindBottleDown),
                                this.removeEventListener("pointerup", this.bindBottleUp),
                                this.bindBottleDown = null,
                                this.bindBottleUp = null
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var t = k(E(l.prototype), "getData", this).call(this);
                                return t.bindBottleUID = this.bindBottleUID,
                                t
                            }
                        }, {
                            key: "setData",
                            value: function(t) {
                                k(E(l.prototype), "setData", this).call(this, t),
                                t.bindBottleUID && (this.bindBottleUID = t.bindBottleUID)
                            }
                        }, {
                            key: "setDataOver",
                            value: function() {
                                var t = this;
                                if (k(E(l.prototype), "setDataOver", this).call(this),
                                this.bindBottleUID) {
                                    var a = this.main.getEqByUID(this.bindBottleUID);
                                    a && this.bindBottle(a)
                                } else
                                    setTimeout(function() {
                                        if (t.card.targetID !== -1) {
                                            var n = t.getBottleByPlugSlotUID(t.card.targetID);
                                            n && (t.bindBottle(n),
                                            n.setBottleHeadType(t.className))
                                        }
                                    }, 0)
                            }
                        }, {
                            key: "getDropVertex",
                            value: function() {
                                return [{
                                    x: -this.width / 2,
                                    y: 0
                                }, {
                                    x: this.width / 2,
                                    y: 0
                                }]
                            }
                        }, {
                            key: "canInvert",
                            value: function() {
                                return !this.card.slot
                            }
                        }, {
                            key: "setInversion",
                            value: function(t) {
                                this.enableInvert && (t ? this.canInvert() && (this.rotation = m) : this.rotation = 0)
                            }
                        }, {
                            key: "getBottleByPlugSlotUID",
                            value: function(t) {
                                for (var a = 0, n; a < this.main.viewStack.eqLayer.children.length; a++)
                                    if (n = this.main.viewStack.eqLayer.children[a],
                                    n.plugSlot && n.plugSlot.UID === t)
                                        return n;
                                return null
                            }
                        }]),
                        l
                    }(f.ChemicalEquipment);
                    f.Plug = p
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.engines.pressure.PContainer
                      , p = function(c) {
                        function l(e) {
                            var t;
                            return q(this, l),
                            t = i.call(this, e),
                            t.isPressureContainer = !0,
                            t
                        }
                        H(l, c);
                        var i = M(l);
                        return N(l, [{
                            key: "init",
                            value: function() {
                                k(E(l.prototype), "init", this).call(this),
                                this.pContainer = new f(this.main.pressureEngine,{
                                    eq: this
                                })
                            }
                        }, {
                            key: "addMouse",
                            value: function(t, a) {
                                this.pContainer.addMouse(t),
                                t.userData.slot = a
                            }
                        }, {
                            key: "updatePressureParam",
                            value: function() {
                                m.PressureUtil.setGasParam(this.pContainer.gas, this.getGasPhase())
                            }
                        }, {
                            key: "getMouseParam",
                            value: function(t) {
                                var a = this.toLocal(t);
                                return this.containerRenderer.getMouseParam(a)
                            }
                        }, {
                            key: "refreshAfterTransfer",
                            value: function() {
                                m.PressureUtil.containerTransfer(this.pContainer, this.world),
                                this.gasBalanceWithAir()
                            }
                        }]),
                        l
                    }(m.PourAbleContainer);
                    m.PressureContainer = p
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.max
                  , p = Math.sqrt;
                (function(c) {
                    var l = PIXI.Sprite
                      , i = PIXI.Texture
                      , e = PIXI.Point
                      , t = h.utils.Constant
                      , a = function(n) {
                        function o(r, u) {
                            var d;
                            q(this, o),
                            d = s.call(this, i.fromFrame("Skin/liquidDrop.png")),
                            d.v = 0,
                            d.g = t.m2px(.098),
                            d.lastP = new e,
                            d.manager = r,
                            d.phase = u,
                            d.anchor.x = .5,
                            d.anchor.y = .5,
                            d.scale.x = d.scale.y = d.getSizeScale();
                            var y = u.getColor();
                            return c.FilterUtil.setColorFilter(oe(d), y.color, f(y.alpha, .1)),
                            d
                        }
                        H(o, n);
                        var s = M(o);
                        return N(o, [{
                            key: "update",
                            value: function(u) {
                                this.lastP.x = this.x,
                                this.lastP.y = this.y,
                                this.v += this.g * u,
                                this.y += this.v * u
                            }
                        }, {
                            key: "removed",
                            value: function() {
                                this.manager = null,
                                this.phase.destroy(),
                                this.phase = null,
                                this.parent && this.parent.removeChild(this)
                            }
                        }, {
                            key: "getLastP",
                            value: function() {
                                return this.parent.toGlobal(this.lastP)
                            }
                        }, {
                            key: "getCurP",
                            value: function() {
                                return this.parent.toGlobal(this.position)
                            }
                        }, {
                            key: "getSizeScale",
                            value: function() {
                                return f(m(.4 * p(this.phase.volume / o.DEFAULT_VOLUME), .8), .4)
                            }
                        }]),
                        o
                    }(l);
                    a.DEFAULT_VOLUME = 5e-8,
                    c.LiquidDrop = a
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.engines.assemble.AssembleState
                      , p = function() {
                        function c() {
                            q(this, c)
                        }
                        return N(c, null, [{
                            key: "getSaveData",
                            value: function(i) {
                                return {
                                    eqUID: c.getOwner(i).UID,
                                    name: i.name
                                }
                            }
                        }, {
                            key: "getOwner",
                            value: function(i) {
                                return i ? i.assembleData.owner : null
                            }
                        }, {
                            key: "removeOwner",
                            value: function(i) {
                                var e = c.getOwner(i);
                                e && e.removed()
                            }
                        }, {
                            key: "checkCardCollision",
                            value: function(i) {
                                var e = i.checkCollision();
                                e && c.tryCardAddToSlot(i, e)
                            }
                        }, {
                            key: "checkSlotCollision",
                            value: function(i) {
                                var e = i.checkCollision();
                                e && c.tryCardAddToSlot(e, i)
                            }
                        }, {
                            key: "tryCardAddToSlot",
                            value: function(i, e) {
                                if (i && e) {
                                    var t = {
                                        card: i,
                                        slot: e
                                    }
                                      , a = c.getOwner(e)
                                      , n = c.getOwner(i);
                                    if (n.canAddTo(t) && a.canAddCard(t)) {
                                        t.slot.addCard(t.card),
                                        n.cardAddedToSlot(t),
                                        a.slotAddedCard(t);
                                        var o = window.NS_LEO;
                                        return o && o.asmDebug && o.saveAsmStep({
                                            cmd: "tryCardAddToSlot",
                                            arg: {
                                                card: {
                                                    name: i.name,
                                                    eqUid: n.UID
                                                },
                                                slot: {
                                                    name: e.name,
                                                    eqUid: a.UID
                                                }
                                            }
                                        }),
                                        !0
                                    }
                                    return !1
                                }
                                return !1
                            }
                        }, {
                            key: "freeCard",
                            value: function(i) {
                                if (i.slot) {
                                    var e = {
                                        card: i,
                                        slot: i.slot
                                    }
                                      , t = c.getOwner(i.slot)
                                      , a = c.getOwner(i);
                                    i.free(),
                                    a.cardFreed(e),
                                    t.freeCardOver(e);
                                    var n = window.NS_LEO;
                                    n && n.asmDebug && n.saveAsmStep({
                                        cmd: "freeCard",
                                        arg: {
                                            card: {
                                                name: i.name,
                                                eqUid: a.UID
                                            }
                                        }
                                    })
                                }
                            }
                        }, {
                            key: "getCardsInSlotsByGroup",
                            value: function(i, e) {
                                for (var t = i.getSlotsByGroup(e), a = [], n = 0, o = t.length, s; n < o; n++)
                                    s = t[n],
                                    a.push.apply(a, s.getCards());
                                return a
                            }
                        }, {
                            key: "getCardEqsInSlotsByGroup",
                            value: function(i, e) {
                                for (var t = c.getCardsInSlotsByGroup(i, e), a = [], n = 0, o = t.length, s; n < o; n++)
                                    s = t[n],
                                    a.push(c.getOwner(s));
                                return a
                            }
                        }, {
                            key: "beforeAddCard",
                            value: function(i, e) {
                                var t = i.card
                                  , a = i.slot
                                  , n = t.state
                                  , o = t.assembleData.view
                                  , s = c.getP(o.parent, t.assembleData)
                                  , r = c.getP(o.parent, a.assembleData);
                                t.state = f.HOLD,
                                a.updateHoldCnt(!0),
                                TweenMax.to(o, .3, {
                                    x: o.x + r.x - s.x,
                                    y: o.y + r.y - s.y,
                                    rotation: 0,
                                    onComplete: function() {
                                        t.state = n,
                                        a.updateHoldCnt(!1),
                                        e()
                                    }
                                })
                            }
                        }, {
                            key: "isConnected",
                            value: function(i, e) {
                                return c.isCardConnectSlot(i, e) || c.isCardConnectSlot(e, i)
                            }
                        }, {
                            key: "getP",
                            value: function(i, e) {
                                return i.toLocal(e.p0, e.hitArea)
                            }
                        }, {
                            key: "isCardConnectSlot",
                            value: function(i, e) {
                                for (var t = 0; t < i.slots.length; t++)
                                    for (var a = 0; a < e.cards.length; a++)
                                        if (e.cards[a].slot === i.slots[t])
                                            return !0;
                                return !1
                            }
                        }]),
                        c
                    }();
                    m.CardSlotUtil = p
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.utils.NBLineUtil
                      , p = h.utils.NBPointUtils
                      , c = function() {
                        function l() {
                            q(this, l)
                        }
                        return N(l, null, [{
                            key: "checkCollisionDropByVertex",
                            value: function(e, t, a) {
                                var n = !(3 < arguments.length && arguments[3] !== void 0) || arguments[3], o = t.toLocal(e.getLastP()), s = t.toLocal(e.getCurP()), r;
                                return n && l.canIgnoreCollision(t, o, s) ? (r = l.getDefaultResult(t),
                                r.ignore = !0) : (r = l.checkCollisionDrop(o, s, a),
                                r.eq = t),
                                r
                            }
                        }, {
                            key: "checkCollisionDropByMultiVertex",
                            value: function(e, t, a) {
                                var n = !(3 < arguments.length && arguments[3] !== void 0) || arguments[3]
                                  , o = t.toLocal(e.getLastP())
                                  , s = t.toLocal(e.getCurP())
                                  , r = l.getDefaultResult(t);
                                if (n && l.canIgnoreCollision(t, o, s))
                                    return r.ignore = !0,
                                    r;
                                for (var u = 0, d; u < a.length; u++)
                                    d = l.checkCollisionDrop(o, s, a[u]),
                                    d.eq = t,
                                    d.t < r.t && (r = d,
                                    r.index = u);
                                return r
                            }
                        }, {
                            key: "checkCollisionDrop",
                            value: function(e, t, a) {
                                for (var n = l.getDefaultResult(null), o = 1; o < a.length; o++) {
                                    var s = a[o]
                                      , r = a[o - 1]
                                      , u = f.intersectSegmentSegment(e, t, s, r);
                                    if (u) {
                                        var d = p.distance(e, u) / p.distance(e, t);
                                        if (d < n.t) {
                                            n.t = d;
                                            var y = p.cross2(s, r, t, e);
                                            n.type = 0 < y ? 1 : -1
                                        }
                                    }
                                }
                                return n
                            }
                        }, {
                            key: "getDefaultResult",
                            value: function(e) {
                                return {
                                    t: 1 / 0,
                                    eq: e,
                                    type: 0,
                                    index: -1,
                                    ignore: !1
                                }
                            }
                        }, {
                            key: "canIgnoreCollision",
                            value: function(e, t, a) {
                                return !e.hitTestPoint(e.toGlobal(t)) && !e.hitTestPoint(e.toGlobal(a))
                            }
                        }]),
                        l
                    }();
                    m.DropUtil = c
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.engines.electroChemistry.Edge
                      , p = h.chemistry.ChemicalEquipment
                      , c = h.chemistry.AssembleGroup
                      , l = function(i) {
                        function e(a) {
                            var n;
                            return q(this, e),
                            n = t.call(this, a),
                            n.U = 0,
                            n.I = 0,
                            n.Q = 0,
                            n.edge = new f(a.electroEngine.elecWorld),
                            n.edge.R = 1,
                            n.edge.userData.eq = oe(n),
                            n
                        }
                        H(e, i);
                        var t = M(e);
                        return N(e, [{
                            key: "removed",
                            value: function() {
                                this.edge.destroy(),
                                this.edge = null,
                                k(E(e.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(e.prototype), "init", this).call(this),
                                this.edge.name = this.className + "_" + this.UID,
                                this.edge.vertex0.name = this.edge.name + "_vertex0",
                                this.edge.vertex1.name = this.edge.name + "_vertex1"
                            }
                        }, {
                            key: "update",
                            value: function(n) {
                                k(E(e.prototype), "update", this).call(this, n),
                                this.U = this.edge.U,
                                this.I = this.edge.I,
                                this.Q = this.edge.Q,
                                this.edge.isBreak = this.getIsBreak()
                            }
                        }, {
                            key: "getPower",
                            value: function() {
                                return this.U * this.I
                            }
                        }, {
                            key: "getIsBreak",
                            value: function() {
                                return !1
                            }
                        }, {
                            key: "dragEnd",
                            value: function() {
                                var n = this;
                                k(E(e.prototype), "dragEnd", this).call(this),
                                this.slots.forEach(function(o) {
                                    o.group === c.TERMINAL && n.checkSlotCollision(o)
                                })
                            }
                        }]),
                        e
                    }(p);
                    m.ElectricalEquipment = l
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = N(function p() {
                        q(this, p)
                    });
                    f.WHITE_STYLE_ARY = ["e_1", "H_0", "H_1", "Li_1", "C_0", "N_0", "O_0", "Na_1", "S_0", "S_2", "Cl_1", "Cl_0", "K_1", "Ca_2", "Cr_3", "Mn_2", "Fe_2", "Fe_3", "Cu_0", "Cu_2", "Br_1", "Br_0", "I_1", "I_0"],
                    f.DIA_DEFAULT = 26,
                    f.SKIN_DIA_DEF = 100,
                    f.RATIO_e_1 = .32,
                    f.RATIO_H_1 = .7,
                    f.RATIO_Al_3 = .78,
                    f.RATIO_H_0 = .83,
                    f.RATIO_Li_1 = 1.07,
                    f.RATIO_Cr_3 = 1.09,
                    f.RATIO_Fe_3 = 1.09,
                    f.RATIO_Mg_2 = 1.1,
                    f.RATIO_F_0 = 1.14,
                    f.RATIO_Cu_2 = 1.15,
                    f.RATIO_O_0 = 1.16,
                    f.RATIO_Fe_2 = 1.16,
                    f.RATIO_Zn_2 = 1.16,
                    f.RATIO_N_0 = 1.17,
                    f.RATIO_C_0 = 1.18,
                    f.RATIO_Pb_4 = 1.18,
                    f.RATIO_Mn_2 = 1.2,
                    f.RATIO_Pb_2 = 1.29,
                    f.RATIO_Na_1 = 1.3,
                    f.RATIO_Cl_0 = 1.33,
                    f.RATIO_Ca_2 = 1.33,
                    f.RATIO_S_0 = 1.35,
                    f.RATIO_Br_0 = 1.43,
                    f.RATIO_Ag_1 = 1.43,
                    f.RATIO_Fe_0 = 1.44,
                    f.RATIO_Cr_0 = 1.45,
                    f.RATIO_Mn_0 = 1.45,
                    f.RATIO_Al_0 = 1.45,
                    f.RATIO_Cu_0 = 1.52,
                    f.RATIO_Zn_0 = 1.55,
                    f.RATIO_I_0 = 1.55,
                    f.RATIO_F_1 = 1.55,
                    f.RATIO_K_1 = 1.55,
                    f.RATIO_Mg_0 = 1.57,
                    f.RATIO_Ba_2 = 1.57,
                    f.RATIO_Ag_0 = 1.63,
                    f.RATIO_Li_0 = 1.68,
                    f.RATIO_Pb_0 = 1.8,
                    f.RATIO_Ca_0 = 1.83,
                    f.RATIO_Cl_1 = 1.87,
                    f.RATIO_S_2 = 1.89,
                    f.RATIO_Na_0 = 1.91,
                    f.RATIO_Br_1 = 1.97,
                    f.RATIO_K_0 = 2.02,
                    f.RATIO_I_1 = 2.13,
                    f.SPECIAL_ARY = ["PbSO4_0", "CH3COOH_0", "CH3COO_1", "Cr2O7_2"],
                    f.NORMAL_MATER_MAP = {
                        "Fe(OH)3_0": {
                            width: 2.18,
                            height: 2.18,
                            children: [{
                                name: "Fe_3",
                                distance: 0,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.25,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.25,
                                angle: 120
                            }, {
                                name: "O_0",
                                distance: 2.25,
                                angle: 240
                            }, {
                                name: "H_0",
                                distance: 4.24,
                                angle: 0
                            }, {
                                name: "H_0",
                                distance: 4.24,
                                angle: 120
                            }, {
                                name: "H_0",
                                distance: 4.24,
                                angle: 240
                            }]
                        },
                        "Mg(OH)2_0": {
                            width: 2.2,
                            height: 2.2,
                            children: [{
                                name: "Mg_2",
                                distance: 0,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.26,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.26,
                                angle: 180
                            }, {
                                name: "H_0",
                                distance: 4.25,
                                angle: 0
                            }, {
                                name: "H_0",
                                distance: 4.25,
                                angle: 180
                            }]
                        },
                        "Zn(OH)3_0": {
                            width: 2.32,
                            height: 2.32,
                            children: [{
                                name: "Zn_2",
                                distance: 0,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.32,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.32,
                                angle: 180
                            }, {
                                name: "H_0",
                                distance: 4.31,
                                angle: 0
                            }, {
                                name: "H_0",
                                distance: 4.31,
                                angle: 180
                            }]
                        },
                        "Fe(OH)2_0": {
                            width: 2.32,
                            height: 2.32,
                            children: [{
                                name: "Fe_2",
                                distance: 0,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.32,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.32,
                                angle: 180
                            }, {
                                name: "H_0",
                                distance: 4.31,
                                angle: 0
                            }, {
                                name: "H_0",
                                distance: 4.31,
                                angle: 180
                            }]
                        },
                        "Cu(OH)2_0": {
                            width: 2.3,
                            height: 2.3,
                            children: [{
                                name: "Cu_2",
                                distance: 0,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.31,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.31,
                                angle: 180
                            }, {
                                name: "H_0",
                                distance: 4.3,
                                angle: 0
                            }, {
                                name: "H_0",
                                distance: 4.3,
                                angle: 180
                            }]
                        },
                        AgCl_0: {
                            width: 3.3,
                            height: 3.3,
                            children: [{
                                name: "Ag_1",
                                distance: 1.87,
                                angle: 180
                            }, {
                                name: "Cl_1",
                                distance: 1.43,
                                angle: 0
                            }]
                        },
                        AgBr_0: {
                            width: 3.4,
                            height: 3.4,
                            children: [{
                                name: "Ag_1",
                                distance: 1.97,
                                angle: 180
                            }, {
                                name: "Br_1",
                                distance: 1.43,
                                angle: 0
                            }]
                        },
                        AgI_0: {
                            width: 3.56,
                            height: 3.56,
                            children: [{
                                name: "Ag_1",
                                distance: 2.13,
                                angle: 180
                            }, {
                                name: "I_1",
                                distance: 1.43,
                                angle: 0
                            }]
                        },
                        I2_0: {
                            width: 3.1,
                            height: 3.1,
                            children: [{
                                name: "I_0",
                                distance: 1.55,
                                angle: 180
                            }, {
                                name: "I_0",
                                distance: 1.55,
                                angle: 0
                            }]
                        },
                        H2_0: {
                            width: 1.66,
                            height: 1.66,
                            children: [{
                                name: "H_0",
                                distance: .83,
                                angle: 180
                            }, {
                                name: "H_0",
                                distance: .83,
                                angle: 0
                            }]
                        },
                        PbO_0: {
                            width: 2.45,
                            height: 2.45,
                            children: [{
                                name: "Pb_2",
                                distance: 1.16,
                                angle: 180
                            }, {
                                name: "O_0",
                                distance: 1.29,
                                angle: 0
                            }]
                        },
                        OH_1: {
                            width: 1.99,
                            height: 1.16,
                            children: [{
                                name: "O_0",
                                distance: .83,
                                angle: 180
                            }, {
                                name: "H_0",
                                distance: 1.16,
                                angle: 0
                            }]
                        },
                        Cl2_0: {
                            width: 2.66,
                            height: 2.66,
                            children: [{
                                name: "Cl_0",
                                distance: 1.33,
                                angle: 180
                            }, {
                                name: "Cl_0",
                                distance: 1.33,
                                angle: 0
                            }]
                        },
                        ClO_1: {
                            width: 2.49,
                            height: 2.49,
                            children: [{
                                name: "Cl_0",
                                distance: 1.16,
                                angle: 180
                            }, {
                                name: "O_0",
                                distance: 1.33,
                                angle: 0
                            }]
                        },
                        Br2_0: {
                            width: 2.86,
                            height: 2.86,
                            children: [{
                                name: "Br_0",
                                distance: 1.43,
                                angle: 180
                            }, {
                                name: "Br_0",
                                distance: 1.43,
                                angle: 0
                            }]
                        },
                        O2_0: {
                            width: 2.32,
                            height: 2.32,
                            children: [{
                                name: "O_0",
                                distance: 1.16,
                                angle: 180
                            }, {
                                name: "O_0",
                                distance: 1.16,
                                angle: 0
                            }]
                        },
                        H2O_0: {
                            width: 2.32,
                            height: 2.32,
                            children: [{
                                name: "O_0",
                                distance: 0,
                                angle: 0
                            }, {
                                name: "H_0",
                                distance: 1.89,
                                angle: 37.5
                            }, {
                                name: "H_0",
                                distance: 1.89,
                                angle: 142.5
                            }]
                        },
                        CO2_0: {
                            width: 2.36,
                            height: 2.36,
                            children: [{
                                name: "C_0",
                                distance: 0,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.34,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.34,
                                angle: 180
                            }]
                        },
                        PbO2_0: {
                            width: 2.36,
                            height: 2.36,
                            children: [{
                                name: "Pb_4",
                                distance: 0,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.34,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.34,
                                angle: 180
                            }]
                        },
                        AlO2_1: {
                            width: 2,
                            height: 2,
                            children: [{
                                name: "Al_3",
                                distance: 0,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.16,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.16,
                                angle: 180
                            }]
                        },
                        IO3_1: {
                            width: 3.1,
                            height: 3.1,
                            children: [{
                                name: "O_0",
                                distance: 2.6,
                                angle: 30
                            }, {
                                name: "O_0",
                                distance: 2.6,
                                angle: 150
                            }, {
                                name: "I_0",
                                distance: 0,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.16,
                                angle: 90
                            }]
                        },
                        BrO3_1: {
                            width: 2.86,
                            height: 2.86,
                            children: [{
                                name: "O_0",
                                distance: 2.48,
                                angle: 30
                            }, {
                                name: "O_0",
                                distance: 2.48,
                                angle: 150
                            }, {
                                name: "Br_0",
                                distance: 0,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.04,
                                angle: 90
                            }]
                        },
                        CO3_2: {
                            width: 2.36,
                            height: 2.36,
                            children: [{
                                name: "C_0",
                                distance: 0,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.34,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.34,
                                angle: 120
                            }, {
                                name: "O_0",
                                distance: 2.34,
                                angle: 240
                            }]
                        },
                        NO3_1: {
                            width: 2.34,
                            height: 2.34,
                            children: [{
                                name: "N_0",
                                distance: 0,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.33,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.33,
                                angle: 120
                            }, {
                                name: "O_0",
                                distance: 2.33,
                                angle: 240
                            }]
                        },
                        NH4_1: {
                            width: 2.34,
                            height: 2.34,
                            children: [{
                                name: "H_0",
                                distance: 1.94,
                                angle: 30
                            }, {
                                name: "H_0",
                                distance: 1.94,
                                angle: 150
                            }, {
                                name: "H_0",
                                distance: 1.94,
                                angle: 270
                            }, {
                                name: "N_0",
                                distance: 0,
                                angle: 0
                            }, {
                                name: "H_0",
                                distance: 1.94,
                                angle: 90
                            }]
                        },
                        SO4_2: {
                            width: 2.5,
                            height: 2.5,
                            children: [{
                                name: "O_0",
                                distance: 2.4,
                                angle: 30
                            }, {
                                name: "O_0",
                                distance: 2.4,
                                angle: 150
                            }, {
                                name: "O_0",
                                distance: 2.4,
                                angle: 270
                            }, {
                                name: "S_0",
                                distance: 0,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 1.96,
                                angle: 90
                            }]
                        },
                        CH4_0: {
                            width: 2.36,
                            height: 2.36,
                            children: [{
                                name: "H_0",
                                distance: 1.91,
                                angle: 30
                            }, {
                                name: "H_0",
                                distance: 1.91,
                                angle: 150
                            }, {
                                name: "H_0",
                                distance: 1.91,
                                angle: 270
                            }, {
                                name: "C_0",
                                distance: 0,
                                angle: 0
                            }, {
                                name: "H_0",
                                distance: 1.53,
                                angle: 90
                            }]
                        },
                        MnO4_1: {
                            width: 2.6,
                            height: 2.6,
                            children: [{
                                name: "O_0",
                                distance: 2.5,
                                angle: 30
                            }, {
                                name: "O_0",
                                distance: 2.5,
                                angle: 150
                            }, {
                                name: "O_0",
                                distance: 2.5,
                                angle: 270
                            }, {
                                name: "Mn_0",
                                distance: 0,
                                angle: 0
                            }, {
                                name: "O_0",
                                distance: 2.06,
                                angle: 90
                            }]
                        }
                    },
                    m.ChemMaterialConst = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.max;
                (function(f) {
                    var p = h.framework.BaseModule
                      , c = h.engines.assemble.AssembleEngine
                      , l = h.engines.assemble.AssembleShape
                      , i = h.engines.chemicalReaction.ChemicalReactionEngine
                      , e = h.engines.pressure.PressureEngine
                      , t = h.engines.chemicalReaction.WorldUtil
                      , a = h.utils.Constant
                      , n = h.utils.DeviceTools
                      , o = function(s) {
                        function r() {
                            var d;
                            return q(this, r),
                            d = u.apply(this, arguments),
                            d.className = "ChemistryModule",
                            d.assembleEngine = new c(d.viewStack.eqLayer),
                            d.reactionEngine = new i,
                            d.pressureEngine = new e,
                            d.liquidDropManager = new f.LiquidDropManager(oe(d)),
                            d.gasDropManager = new f.GasDropManager(oe(d)),
                            d.isAssembling = !1,
                            d
                        }
                        H(r, s);
                        var u = M(r);
                        return N(r, [{
                            key: "init",
                            value: function() {
                                k(E(r.prototype), "init", this).call(this),
                                l.DEBUG = !1,
                                this.pressureEngine.dt = .01 * .016,
                                this.cursorManager.path = "libs/chem/images/cursor",
                                window.main = this,
                                this.initPixiImageScale()
                            }
                        }, {
                            key: "initPixiImageScale",
                            value: function() {
                                PIXI.settings.IMAGE_SCALE = this.globalConfig.loadMobileImg || n.touchDevice() ? "@0.5x" : null
                            }
                        }, {
                            key: "destroy",
                            value: function() {
                                k(E(r.prototype), "destroy", this).call(this),
                                this.assembleEngine.destroy(),
                                this.assembleEngine = null,
                                this.reactionEngine.destroy(),
                                this.reactionEngine = null,
                                this.pressureEngine.destroy(),
                                this.pressureEngine = null,
                                this.liquidDropManager.destroy(),
                                this.liquidDropManager = null,
                                this.gasDropManager.destroy(),
                                this.gasDropManager = null
                            }
                        }, {
                            key: "initData",
                            value: function(y) {
                                k(E(r.prototype), "initData", this).call(this, y),
                                this.reactionEngine.initData(y.chemicalData, y.reactionData),
                                this.air = t.getAirPhase(this.reactionEngine, 1, a.ATM, a.K0),
                                this.air.temperature = a.AMB,
                                this.pressureEngine.air.gas.V = this.air.volume,
                                this.pressureEngine.air.gas.n = this.air.mol,
                                this.pressureEngine.air.gas.T = this.air.temperature
                            }
                        }, {
                            key: "update",
                            value: function(y) {
                                this.updateEngines(y),
                                k(E(r.prototype), "update", this).call(this, y),
                                this.liquidDropManager.update(y),
                                this.gasDropManager.update(y),
                                this.sortEqByZIndex()
                            }
                        }, {
                            key: "addEq",
                            value: function(y, g, C) {
                                var T = this;
                                this.isAssembling = !0,
                                k(E(r.prototype), "addEq", this).call(this, y, g, function(A) {
                                    T.isAssembling = !1,
                                    C(A)
                                })
                            }
                        }, {
                            key: "getEqClassByName",
                            value: function(y) {
                                return h.chemistry[y]
                            }
                        }, {
                            key: "getNameByLanKey",
                            value: function(y) {
                                return y
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var y = k(E(r.prototype), "getData", this).call(this);
                                return y.targetIdData = this.getTargetIdData(),
                                y
                            }
                        }, {
                            key: "setData",
                            value: function(y) {
                                this.data = y,
                                k(E(r.prototype), "setData", this).call(this, y)
                            }
                        }, {
                            key: "execute",
                            value: function(y, g) {
                                var C = null;
                                return y === h.NBCommand.TOGGLE_EQUATIONS ? this.setShowEquation(g.show) : C = k(E(r.prototype), "execute", this).call(this, y, g),
                                C
                            }
                        }, {
                            key: "getEqUnderPoint",
                            value: function(y, g, C) {
                                var T = k(E(r.prototype), "getEqUnderPoint", this).call(this, y, g, C);
                                if (!y)
                                    return T;
                                for (var A = [], S = 0, B; S < T.length; S++)
                                    B = T[S],
                                    (B === y || f.CardSlotUtil.isConnected(y, B)) && A.push(B);
                                return A
                            }
                        }, {
                            key: "setShowEquation",
                            value: function(y) {
                                this.viewStack.eqLayer.children.forEach(function(g) {
                                    g.showEquation = y
                                })
                            }
                        }, {
                            key: "setDataOver",
                            value: function() {
                                k(E(r.prototype), "setDataOver", this).call(this),
                                this.setTargetIdData(this.data.targetIdData),
                                this.data = null
                            }
                        }, {
                            key: "getAssembleData",
                            value: function() {
                                var y = [];
                                return this.forEachEq(function(g) {
                                    if (g instanceof f.AssembleEquipment) {
                                        var C = g.getAssembleData();
                                        C.length && y.push.apply(y, re(C))
                                    }
                                }),
                                y
                            }
                        }, {
                            key: "setAssembleData",
                            value: function(y) {
                                var g = this;
                                y && (this.isAssembling = !0,
                                y.forEach(function(C) {
                                    try {
                                        var T = g.getCardBySaveData(C.card)
                                          , A = g.getSlotBySaveData(C.slot);
                                        f.CardSlotUtil.tryCardAddToSlot(T, A)
                                    } catch (S) {
                                        console.log("\u6062\u590D\u7ED1\u5B9A\u5173\u7CFB\u51FA\u9519\uFF1A", JSON.stringify(C), S.message)
                                    }
                                }),
                                this.isAssembling = !1)
                            }
                        }, {
                            key: "getTargetIdData",
                            value: function() {
                                var y = []
                                  , g = {};
                                return this.assembleEngine.getAllCards().forEach(function(C) {
                                    g[C.UID] = f.CardSlotUtil.getSaveData(C)
                                }),
                                this.assembleEngine.getAllSlots().forEach(function(C) {
                                    g[C.UID] = f.CardSlotUtil.getSaveData(C)
                                }),
                                this.assembleEngine.getAllCards().forEach(function(C) {
                                    C.targetID !== -1 && y.push({
                                        type: 3,
                                        card: g[C.UID],
                                        slot: g[C.targetID]
                                    })
                                }),
                                y
                            }
                        }, {
                            key: "setTargetIdData",
                            value: function(y) {
                                var g = this;
                                y.forEach(function(C) {
                                    try {
                                        var T = g.getCardBySaveData(C.card)
                                          , A = g.getSlotBySaveData(C.slot);
                                        1 & C.type && (T.targetID = A.UID),
                                        2 & C.type && (A.targetID = T.UID)
                                    } catch (S) {
                                        console.log("targetId\u6062\u590D\u51FA\u9519", JSON.stringify(C), S.message)
                                    }
                                })
                            }
                        }, {
                            key: "getCardBySaveData",
                            value: function(y) {
                                var g = this.getEqByUID(y.eqUID);
                                return g.getCardByName(y.name)
                            }
                        }, {
                            key: "getSlotBySaveData",
                            value: function(y) {
                                var g = this.getEqByUID(y.eqUID);
                                return g.getSlotByName(y.name)
                            }
                        }, {
                            key: "sortEqByZIndex",
                            value: function() {
                                var y = []
                                  , g = []
                                  , C = {}
                                  , T = function b(P) {
                                    P.cards.forEach(function(I) {
                                        if (!I.isFree()) {
                                            var O = f.CardSlotUtil.getOwner(I.slot);
                                            C[O.UID] || (C[O.UID] = !0,
                                            g.push(O),
                                            b(O))
                                        }
                                    }),
                                    P.slots.forEach(function(I) {
                                        I.isEmpty() || I.forEachCard(function(O) {
                                            var D = f.CardSlotUtil.getOwner(O);
                                            C[D.UID] || (C[D.UID] = !0,
                                            g.push(D),
                                            b(D))
                                        })
                                    })
                                };
                                this.forEachEq(function(b) {
                                    C[b.UID] || (g = [b],
                                    y.push(g),
                                    C[b.UID] = !0,
                                    T(b))
                                });
                                var A = {}
                                  , S = 0;
                                this.forEachEq(function(b) {
                                    A[b.UID] = S,
                                    S++
                                });
                                var B = {};
                                y.forEach(function(b) {
                                    var P = {
                                        zIndex: -1,
                                        index: -1
                                    };
                                    b.forEach(function(I) {
                                        I.zIndex > P.zIndex ? (P.zIndex = I.zIndex,
                                        P.index = A[I.UID]) : I.zIndex === P.zIndex && (P.index = m(A[I.UID], P.index)),
                                        B[I.UID] = P
                                    })
                                }),
                                this.viewStack.eqLayer.children.sort(function(b, P) {
                                    var I = B[b.UID]
                                      , O = B[P.UID]
                                      , D = b.isSelect ? 999 : I.zIndex
                                      , w = P.isSelect ? 999 : O.zIndex;
                                    return D === w ? I.index === O.index ? b.zIndex - P.zIndex : I.index - O.index : D - w
                                })
                            }
                        }, {
                            key: "getModuleConfig",
                            value: function() {
                                return new f.ChemicalModuleConfig
                            }
                        }, {
                            key: "updateEngines",
                            value: function(y) {
                                this.assembleEngine.update(y),
                                this.reactionEngine.update(y),
                                this.pressureCalculate()
                            }
                        }, {
                            key: "pressureCalculate",
                            value: function() {
                                this.updatePressureParam(),
                                this.pressureEngine.calculate(!0),
                                this.transferFluid(),
                                this.refreshAfterTransfer()
                            }
                        }, {
                            key: "transferFluid",
                            value: function() {
                                this.forEachEq(function(y) {
                                    y.isTube && y.transferFluid()
                                })
                            }
                        }, {
                            key: "refreshAfterTransfer",
                            value: function() {
                                this.forEachEq(function(y) {
                                    y.isPressureContainer && y.refreshAfterTransfer()
                                })
                            }
                        }, {
                            key: "updatePressureParam",
                            value: function() {
                                this.forEachEq(function(y) {
                                    y.isPressureContainer && y.updatePressureParam(),
                                    y.isTube && y.updatePressureParam()
                                })
                            }
                        }]),
                        r
                    }(p);
                    f.ChemistryModule = o
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.abs;
                (function(f) {
                    var p = PIXI.Point
                      , c = function(l) {
                        function i(t) {
                            var a;
                            return q(this, i),
                            a = e.call(this, t),
                            a.className = "RubberPlug",
                            a.enableInsertCatheter = !0,
                            a.sounds = [f.SoundConst.ADDRUBBERPLUG, f.SoundConst.EXTRACTRUBBERPLUG],
                            a.targetRot = 0,
                            console.log("\u6A61\u80F6\u585E"),
                            a.group = f.AssembleGroup.RUBBER_PLUG,
                            a
                        }
                        H(i, l);
                        var e = M(i);
                        return N(i, [{
                            key: "init",
                            value: function() {
                                k(E(i.prototype), "init", this).call(this),
                                this.catheterSlot0 = this.addSlot("catheter0", this, f.AssembleGroup.GLASS_CATHETER, new p(-22,0)),
                                this.catheterSlot1 = this.addSlot("catheter1", this, f.AssembleGroup.GLASS_CATHETER, new p(22,0)),
                                this.catheterSlot2 = this.addSlot("catheter2", this, f.AssembleGroup.GLASS_CATHETER, new p(0,0)),
                                this.card.userData.soundOn = f.SoundConst.ADDRUBBERPLUG,
                                this.card.userData.soundOff = f.SoundConst.EXTRACTRUBBERPLUG
                            }
                        }, {
                            key: "update",
                            value: function(a) {
                                k(E(i.prototype), "update", this).call(this, a)
                            }
                        }, {
                            key: "setAttrByMode",
                            value: function() {
                                k(E(i.prototype), "setAttrByMode", this).call(this),
                                this.attrMode === f.EqAttrMode.SAMPLE_AQ && (this.enableInsertCatheter = !1)
                            }
                        }, {
                            key: "setRotation",
                            value: function(a) {
                                var n = 1 < arguments.length && arguments[1] !== void 0 && arguments[1];
                                this.targetRot = a,
                                n && (this.rotation = a)
                            }
                        }, {
                            key: "setScale",
                            value: function(a) {
                                this.scale.x = this.scale.y = a
                            }
                        }, {
                            key: "canAddCard",
                            value: function(a) {
                                return !!(a.card.mask !== f.AssembleGroup.GLASS_CATHETER || this.enableInsertCatheter)
                            }
                        }, {
                            key: "cardAddedToSlot",
                            value: function(a) {
                                k(E(i.prototype), "cardAddedToSlot", this).call(this, a);
                                var n = a.slot.assembleData.p1;
                                this.setScale(m(n.y)),
                                this.catheterSlot0.disabled = !0,
                                this.catheterSlot1.disabled = !0,
                                this.catheterSlot2.disabled = !0
                            }
                        }, {
                            key: "cardFreed",
                            value: function(a) {
                                k(E(i.prototype), "cardFreed", this).call(this, a),
                                this.catheterSlot0.disabled = !1,
                                this.catheterSlot1.disabled = !1,
                                this.catheterSlot2.disabled = !1
                            }
                        }, {
                            key: "slotAddedCard",
                            value: function(a) {
                                if (k(E(i.prototype), "slotAddedCard", this).call(this, a),
                                a.card.mask === f.AssembleGroup.GLASS_CATHETER) {
                                    var n = f.CardSlotUtil.getOwner(a.card);
                                    n.insertIndex = this.getIndexByCatheterSlot(a.slot)
                                }
                            }
                        }, {
                            key: "canInvert",
                            value: function() {
                                return k(E(i.prototype), "canInvert", this).call(this) && !this.hasCatheter()
                            }
                        }, {
                            key: "isFull",
                            value: function() {
                                return this.catheterSlot0.isFull() && this.catheterSlot1.isFull() && this.catheterSlot2.isFull()
                            }
                        }, {
                            key: "appendCatheterCards",
                            value: function(a) {
                                for (var n = 0, o = a.length, s, r, u; n < o; n++)
                                    r = a[n],
                                    s = f.CardSlotUtil.getOwner(r),
                                    u = this.getCatheterSlotByIndex(s.insertIndex),
                                    u && f.CardSlotUtil.tryCardAddToSlot(r, u)
                            }
                        }, {
                            key: "getIndexByCatheterSlot",
                            value: function(a) {
                                return a === this.catheterSlot0 ? 0 : a === this.catheterSlot1 ? 1 : a === this.catheterSlot2 ? 2 : void console.error("getCatheterIndex -> slot:".concat(a.name))
                            }
                        }, {
                            key: "getCatheterSlotByIndex",
                            value: function(a) {
                                return a === 0 ? this.catheterSlot0 : a === 1 ? this.catheterSlot1 : a === 2 ? this.catheterSlot2 : void console.error("getCatheterSlotByIndex -> index:".concat(a))
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var a = k(E(i.prototype), "getData", this).call(this);
                                return a.scale = this.scale.x,
                                a
                            }
                        }, {
                            key: "setData",
                            value: function(a) {
                                k(E(i.prototype), "setData", this).call(this, a),
                                this.setScale(a.scale || 1)
                            }
                        }, {
                            key: "hasCatheter",
                            value: function() {
                                return !(this.catheterSlot0.isEmpty() && this.catheterSlot1.isEmpty() && this.catheterSlot2.isEmpty())
                            }
                        }]),
                        i
                    }(f.Plug);
                    f.RubberPlug = c
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min;
                (function(f) {
                    var p = PIXI.Point
                      , c = h.engines.assemble.AssembleShape
                      , l = function(i) {
                        function e(a) {
                            var n;
                            return q(this, e),
                            n = t.call(this, a),
                            n.className = "Beaker",
                            n.world.enabled = !0,
                            n.canAddDrop = !0,
                            n.enableAttrPlug = !1,
                            n.world.enabled = !0,
                            n
                        }
                        H(e, i);
                        var t = M(e);
                        return N(e, [{
                            key: "init",
                            value: function() {
                                k(E(e.prototype), "init", this).call(this),
                                this.catheterSlotR = this.addSlot("catheterR", this, f.AssembleGroup.GLASS_CATHETER, new p(100,-this.height / 2)),
                                this.catheterSlotL = this.addSlot("catheterL", this, f.AssembleGroup.GLASS_CATHETER, new p(-70,-this.height / 2)),
                                this.pourInSlot = this.addSlot("pourIn", this, f.AssembleGroup.POUR, new p(180,-235)),
                                this.pourOutCard = this.addCard("pourOut", c.getCircle(30, this, -200, -175), f.AssembleGroup.POUR, new p(0,0)),
                                this.dropperSlot = this.addSlot("dropper", this, f.AssembleGroup.DROPPER, new p(0,0)),
                                this.setLabelParam(-60, 40, 1.2)
                            }
                        }, {
                            key: "canAddCard",
                            value: function(n) {
                                if (n.slot.group === f.AssembleGroup.DROPPER) {
                                    var o = n.slot.assembleData.hitArea.toLocal(n.card.assembleData.p0, n.card.assembleData.hitArea);
                                    this.dropperSlot.assembleData.p0.y = m(o.y, 82)
                                }
                                return k(E(e.prototype), "canAddCard", this).call(this, n)
                            }
                        }, {
                            key: "bgColorChanged",
                            value: function() {
                                k(E(e.prototype), "bgColorChanged", this).call(this),
                                this.isBgLight ? f.FilterUtil.setColorFilter(this.scaleMc, 3422529, 1) : this.scaleMc.filters = null
                            }
                        }]),
                        e
                    }(f.PressureContainer);
                    f.Beaker = l
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.round;
                (function(f) {
                    var p = PIXI.Graphics
                      , c = PIXI.Point
                      , l = PIXI.Texture
                      , i = PIXI.mesh.Rope
                      , e = h.engines.assemble.AssembleShape
                      , t = h.utils.NBPointUtils
                      , a = function(n) {
                        function o(r) {
                            var u;
                            return q(this, o),
                            u = s.call(this, r),
                            u.className = "Catheter",
                            u.ropePointAry = [],
                            u.ropeTextureId = "Skin/catheter.png",
                            u.fixedLength = 150,
                            u.curLength = u.fixedLength,
                            u.insertIndex = 0,
                            u.insertFixedLength = 40,
                            u.sounds = [f.SoundConst.BUBBLING],
                            u.isBubbling = !1,
                            console.log("\u5BFC\u7BA1"),
                            u.enableAttrEquation = !0,
                            u.enableAttrMol = !1,
                            u.enableAttrPascal = !1,
                            u.enableAttrConc = !1,
                            u.enableAttrTemp = !1,
                            u.enableAttrVolume = !1,
                            u.enableAttrMass = !1,
                            u
                        }
                        H(o, n);
                        var s = M(o);
                        return N(o, [{
                            key: "removed",
                            value: function() {
                                this.slot0 = null,
                                this.slot1 = null,
                                this.catheterCard = null,
                                k(E(o.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(o.prototype), "init", this).call(this),
                                this.initRopePoint(),
                                this.rope = new i(this.getTexture(this.ropeTextureId),this.ropePointAry),
                                this.addChild(this.rope),
                                this.fluidGra = new p,
                                this.addChild(this.fluidGra),
                                this.slot0 = this.addSlot("rubber0", e.getCircle(50, this, 0, 100), f.AssembleGroup.RUBBER_CATHETER, new c(0,0), 1, null, new c(0,-1)),
                                this.slot1 = this.addSlot("rubber1", e.getCircle(50, this, 0, 0), f.AssembleGroup.RUBBER_CATHETER, new c(0,0), 1, null, new c(0,1)),
                                this.slot0.userData.mouse = this.tube.mouse0,
                                this.slot1.userData.mouse = this.tube.mouse1,
                                this.catheterCard = this.addCard("catheter", e.getRect(20, this.curLength, this, -10, 0), f.AssembleGroup.GLASS_CATHETER, new c(10,this.fixedLength - this.insertFixedLength))
                            }
                        }, {
                            key: "update",
                            value: function(u) {
                                k(E(o.prototype), "update", this).call(this, u),
                                this.updateFluidColumn(),
                                this.updateTubeBubbe(u)
                            }
                        }, {
                            key: "updateTubeBubbe",
                            value: function(u) {
                                var d = this
                                  , y = f.PressureUtil.getContainerEqByMouse(this.tube.mouse0);
                                if (0 > this.tube.mouse0.v && y) {
                                    var g = y.getPhaseAtPoint(this.tube.mouse0.userData.globalP, f.PressureUtil.getSlotByMouse(this.tube.mouse0));
                                    if (g.phaseType === "l") {
                                        var C = 0;
                                        if (this.tube.cdeque.getLastRemoveArr().forEach(function(A) {
                                            if (A.data.phaseType === "g") {
                                                var S = f.PressureUtil.getItemMol(A, d.tube.S);
                                                A.data.chemicals.forEach(function(B) {
                                                    C += S * A.data.getMolRatioByChemicalId(B.chemicalId)
                                                })
                                            }
                                        }),
                                        1e-8 < C) {
                                            if (this.bubbleParticle || (this.bubbleParticle = new f.TubeBubble(y,this)),
                                            this.bubbleParticle.render(this.tube.mouse0.userData.globalP, C),
                                            !this.isBubbling)
                                                this.isBubbling = !0,
                                                this.playSound(f.SoundConst.BUBBLING, !0);
                                            else {
                                                var T = this.soundsMap[f.SoundConst.BUBBLING];
                                                T && T.getAudoStatus() || (this.isBubbling = !1)
                                            }
                                            return
                                        }
                                    }
                                }
                                this.stopSound(f.SoundConst.BUBBLING),
                                this.isBubbling = !1,
                                this.destroyBubble()
                            }
                        }, {
                            key: "destroyBubble",
                            value: function() {
                                this.bubbleParticle && (this.bubbleParticle.destroy(!0),
                                this.bubbleParticle = null)
                            }
                        }, {
                            key: "canAddTo",
                            value: function(u) {
                                return !!k(E(o.prototype), "canAddTo", this).call(this, u) && !this.tube.mouse0.parent
                            }
                        }, {
                            key: "cardAddedToSlot",
                            value: function(u) {
                                if (k(E(o.prototype), "cardAddedToSlot", this).call(this, u),
                                u.card.mask === f.AssembleGroup.GLASS_CATHETER) {
                                    var d = f.CardSlotUtil.getOwner(u.slot);
                                    d.isPressureContainer && d.addMouse(this.tube.mouse0, u.slot)
                                }
                            }
                        }, {
                            key: "cardFreed",
                            value: function(u) {
                                if (u.card.mask === f.AssembleGroup.GLASS_CATHETER) {
                                    var d = f.CardSlotUtil.getOwner(u.slot);
                                    d.isPressureContainer && (this.tube.mouse0.parent.removeMouse(this.tube.mouse0),
                                    this.tube.mouse0.userData.slot = null)
                                }
                                k(E(o.prototype), "cardFreed", this).call(this, u)
                            }
                        }, {
                            key: "canMoveWith",
                            value: function(u) {
                                for (var d = f.CardSlotUtil.getCardEqsInSlotsByGroup(this, f.AssembleGroup.RUBBER_CATHETER), y = d.length, g = 0, C = u.length, T, A; g < C; g++) {
                                    T = u[g];
                                    for (var S = 0; S < y; S++)
                                        if (A = d[S],
                                        T === A)
                                            return !1
                                }
                                return !0
                            }
                        }, {
                            key: "flipHorizontal",
                            value: function(u) {
                                this.x = 2 * u.x - this.x
                            }
                        }, {
                            key: "initRopePoint",
                            value: function() {
                                this.ropePointAry = [new c(0,this.curLength), new c(0,0)]
                            }
                        }, {
                            key: "getTexture",
                            value: function(u) {
                                var d = PIXI.Texture.fromImage(u);
                                if (d.width === 0 || d.height === 0)
                                    return d;
                                var y = d.frame.clone();
                                return y.x = m(y.x + y.width / 2),
                                y.width = 1,
                                new l(d.baseTexture,y,d.orig,d.trim)
                            }
                        }, {
                            key: "updateSlotPosition",
                            value: function() {
                                this.updateSlotPosition0(this.slot0, 0, 1),
                                this.updateSlotPosition0(this.slot1, this.ropePointAry.length - 1, this.ropePointAry.length - 2)
                            }
                        }, {
                            key: "updateCardInfo",
                            value: function() {
                                this.catheterCard.assembleData.hitArea.height = this.ropePointAry[0].y,
                                this.catheterCard.assembleData.p0.y = (this.fixedLength - this.insertFixedLength) / this.catheterCard.assembleData.hitArea.scale.y
                            }
                        }, {
                            key: "updateSlotPosition0",
                            value: function(u, d, y) {
                                var g = this.ropePointAry[d]
                                  , C = this.ropePointAry[y];
                                u.assembleData.hitArea.x = g.x,
                                u.assembleData.hitArea.y = g.y,
                                u.assembleData.p1.x = g.x - C.x,
                                u.assembleData.p1.y = g.y - C.y,
                                t.normalize(u.assembleData.p1)
                            }
                        }, {
                            key: "updateFluidColumn",
                            value: function() {
                                var u = this;
                                this.fluidGra.clear();
                                var d = this.calcTubeLength()
                                  , y = this.ropePointAry[0].clone()
                                  , g = this.ropePointAry[1].clone()
                                  , C = 1
                                  , T = this.tube.cdeque.getLength()
                                  , A = d / T;
                                this.tube.cdeque.forEach(function(S) {
                                    var B = S.data.getColor()
                                      , b = S.length * A
                                      , P = t.distance(y, g);
                                    for (u.fluidGra.lineStyle(10, B.color, .6 * B.alpha),
                                    u.fluidGra.moveTo(y.x, y.y); b >= P; )
                                        if (u.fluidGra.lineTo(g.x, g.y),
                                        b -= P,
                                        y = g,
                                        C++,
                                        g = u.ropePointAry[C],
                                        g)
                                            g = g.clone(),
                                            P = t.distance(y, g);
                                        else
                                            return;
                                    var I = b / P;
                                    y.x += (g.x - y.x) * I,
                                    y.y += (g.y - y.y) * I,
                                    u.fluidGra.lineTo(y.x, y.y)
                                })
                            }
                        }, {
                            key: "calcTubeLength",
                            value: function() {
                                for (var u = 0, d = 1; d < this.ropePointAry.length; d++)
                                    u += t.distance(this.ropePointAry[d - 1], this.ropePointAry[d]);
                                return u
                            }
                        }, {
                            key: "getMouseP0",
                            value: function() {
                                return this.ropePointAry[0]
                            }
                        }, {
                            key: "getMouseP1",
                            value: function() {
                                return this.ropePointAry[this.ropePointAry.length - 1]
                            }
                        }, {
                            key: "getMouseDir0",
                            value: function() {
                                return this.slot0.assembleData.p1
                            }
                        }, {
                            key: "getMouseDir1",
                            value: function() {
                                return this.slot1.assembleData.p1
                            }
                        }]),
                        o
                    }(f.Catheter);
                    f.GlassCatheter = a
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.round
                  , f = Math.floor;
                (function(p) {
                    var c = PIXI.Container
                      , l = h.utils.NBChemStrConvert
                      , i = h.utils.Constant
                      , e = h.utils.NBNumerical
                      , t = h.engines.chemicalReaction.ChemicalIdConstant
                      , a = [16777215, 3422529]
                      , n = function(o) {
                        function s(u) {
                            var d;
                            return q(this, s),
                            d = r.call(this),
                            d.n = 0,
                            d.isScientific = !1,
                            d.bgIsLight = !1,
                            d.showPascal = !1,
                            d.showTemp = !1,
                            d.showMass = !1,
                            d.showVolume = !1,
                            d.showMol = !1,
                            d.showConc = !1,
                            d.interactive = d.interactiveChildren = !1,
                            d.main = u,
                            d.text = d.getText(),
                            d.addChild(d.text),
                            d
                        }
                        H(s, o);
                        var r = M(s);
                        return N(s, [{
                            key: "removed",
                            value: function() {
                                this.parent && this.parent.removeChild(this),
                                this.main.cachePool.pushText(this.text),
                                this.text = null
                            }
                        }, {
                            key: "updateShowFlag",
                            value: function(d) {
                                this.showPascal = d.showPascal,
                                this.showTemp = d.showTemp,
                                this.showMass = d.showMass,
                                this.showVolume = d.showVolume,
                                this.showMol = d.showMol,
                                this.showConc = d.showConc
                            }
                        }, {
                            key: "update",
                            value: function(d) {
                                this.n++,
                                30 > this.n || (this.n = 0,
                                this.updateText(d, this.text))
                            }
                        }, {
                            key: "updateInfo",
                            value: function() {
                                var d = 0 < arguments.length && arguments[0] !== void 0 && arguments[0]
                                  , y = 1 < arguments.length && arguments[1] !== void 0 && arguments[1];
                                this.isScientific = d,
                                this.bgIsLight = y
                            }
                        }, {
                            key: "updateText",
                            value: function(d, y) {
                                var g = this
                                  , C = [];
                                if (this.showPascal) {
                                    var T = d.getPhaseByType("g")[0];
                                    T && C.push("\u538B\u5F3A\uFF1A" + this.formatPressure(T.pressure) + "Pa")
                                }
                                d.forEachChemical(function(A) {
                                    var S = [];
                                    S.push(g.getFormulaStr(A)),
                                    g.showTemp && S.push(g.getTempStr(A)),
                                    g.showMass && S.push(g.getMassStr(A)),
                                    g.showVolume && (A.phaseType === "l" && A.valence === 0 && S.push(g.getLiquidVolumeStr(A)),
                                    A.phaseType === "g" && S.push(g.getGasVolumeStr(A))),
                                    g.showMol && S.push(g.getMolStr(A)),
                                    g.showConc && A.phaseType === "l" && A.chemicalId !== t.H2O && S.push(g.getSolStr(A)),
                                    1 < S.length && C.push(S.join(`
	`))
                                }),
                                y.style.fill = a[this.bgIsLight ? 1 : 0],
                                y.text = C.join(`
`)
                            }
                        }, {
                            key: "getFormulaStr",
                            value: function(d) {
                                return this.getFormulaAndValence(d) + this.getPhaseTypeStr(d)
                            }
                        }, {
                            key: "getTempStr",
                            value: function(d) {
                                return "\u6E29\u5EA6\uFF1A" + this.formatTemperature(i.K2T(d.phase.temperature)) + "\u2103"
                            }
                        }, {
                            key: "getMassStr",
                            value: function(d) {
                                return "\u8D28\u91CF\uFF1A" + this.formatMass(1e3 * d.mass) + "g"
                            }
                        }, {
                            key: "getMolStr",
                            value: function(d) {
                                return "\u7269\u8D28\u7684\u91CF\uFF1A" + this.formatMol(d.mol) + "mol"
                            }
                        }, {
                            key: "getSolStr",
                            value: function(d) {
                                return "\u6D53\u5EA6\uFF1A" + this.formatMolarConcentration(d.phase.getMolarConcentration(d.chemicalId)) + "mol/L"
                            }
                        }, {
                            key: "getLiquidVolumeStr",
                            value: function(d) {
                                return "\u4F53\u79EF\uFF1A" + this.formatVolume(1e6 * d.mass / d.density) + "mL"
                            }
                        }, {
                            key: "getGasVolumeStr",
                            value: function(d) {
                                return "\u4F53\u79EF\uFF1A" + this.formatVolume(1e6 * d.phase.volume) + "mL"
                            }
                        }, {
                            key: "getText",
                            value: function() {
                                var d = a[this.bgIsLight ? 1 : 0];
                                return this.main.cachePool.popText("", {
                                    fontSize: "24px",
                                    fontFamily: "Arial",
                                    lineHeight: 32,
                                    fill: d,
                                    align: "left",
                                    stroke: 0,
                                    strokeThickness: 0,
                                    wordWrapWidth: 1
                                })
                            }
                        }, {
                            key: "getFormulaAndValence",
                            value: function(d) {
                                return l.convertFormula(d.formula, d.valence)
                            }
                        }, {
                            key: "getPhaseTypeStr",
                            value: function(d) {
                                return d.phaseType === "l" ? d.formula === "H2O" ? "(l)" : "(aq)" : d.phaseType === "g" ? "(g)" : d.phaseType === "s" ? "(s)" : ""
                            }
                        }, {
                            key: "formatPressure",
                            value: function(d) {
                                return m(d)
                            }
                        }, {
                            key: "formatTemperature",
                            value: function(d) {
                                return f(d)
                            }
                        }, {
                            key: "formatMass",
                            value: function(d) {
                                return e.convertNumber(d, 4, this.isScientific)
                            }
                        }, {
                            key: "formatVolume",
                            value: function(d) {
                                return e.convertNumber(d, 4, this.isScientific)
                            }
                        }, {
                            key: "formatMol",
                            value: function(d) {
                                return e.convertNumber(d, 4, this.isScientific)
                            }
                        }, {
                            key: "formatMolarConcentration",
                            value: function(d) {
                                return e.convertNumber(d, 4, this.isScientific)
                            }
                        }]),
                        s
                    }(c);
                    p.ChemicalsInfoItem = n
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {
                            q(this, p)
                        }
                        return N(p, null, [{
                            key: "getEquationsByWorld",
                            value: function(l) {
                                for (var i = [], e = l.getReactionResult(), t = [], a = 0, n; a < e.length; a++) {
                                    n = e[a],
                                    t.push(n.reaction);
                                    for (var o = 0; o < n.molecules.length; o++)
                                        t.push(n.molecules[o])
                                }
                                for (var s = {}, r = 0, u; r < t.length; r++)
                                    if (u = t[r],
                                    !s[u.uid]) {
                                        s[u.uid] = !0;
                                        var d = u.equation.split("->");
                                        i.push({
                                            uid: u.uid,
                                            isIon: u.isIon,
                                            isArrow: !0,
                                            reactant: d[0],
                                            product: d[1],
                                            condition: ""
                                        })
                                    }
                                return i
                            }
                        }]),
                        p
                    }();
                    m.ReactUtil = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.PI;
                (function(f) {
                    var p = PIXI.Point
                      , c = h.chemistry.DropUtil
                      , l = PIXI.Graphics
                      , i = h.pixiExtras.NBGraphicsUtil
                      , e = h.chemistry.AssembleGroup
                      , t = h.chemistry.CardSlotUtil
                      , a = function(n) {
                        function o(r) {
                            var u;
                            return q(this, o),
                            u = s.call(this, r),
                            u.className = "MultiCellPressureContainer",
                            u.isPressureContainer = !0,
                            u.isTube = !0,
                            u.capacityMask = new l,
                            u.cellN = 0,
                            u.capacityVertexs = [],
                            u.cells = [],
                            u.chemicalInfoType = 1,
                            u
                        }
                        H(o, n);
                        var s = M(o);
                        return N(o, [{
                            key: "removed",
                            value: function() {
                                this.cells.forEach(function(u) {
                                    u.destroy()
                                }),
                                this.cells = null,
                                k(E(o.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "init",
                            value: function() {
                                var u = this;
                                k(E(o.prototype), "init", this).call(this),
                                this.cellN = this.capacityVertexs.length,
                                this.capacityMask.beginFill(16711680),
                                this.capacityMask.alpha = 0,
                                this.capacityMask.renderable = !1,
                                this.capacityVertexs.forEach(function(d, y) {
                                    var g = new f.Cell(u,d,y,new p(u.plugXAry[y],0));
                                    u.cells.push(g),
                                    i.drawPolygon(u.capacityMask, d)
                                }),
                                this.capacityMask.endFill(),
                                this.addChild(this.capacityMask)
                            }
                        }, {
                            key: "update",
                            value: function(u) {
                                var d = this;
                                k(E(o.prototype), "update", this).call(this, u),
                                this.cells.forEach(function(y, g) {
                                    y.isConnectWithAir = !d.isCovered,
                                    y.update(u),
                                    y.setPos(d.x - 500 * (g + 1 - d.cells.length / 2), d.y + 200)
                                })
                            }
                        }, {
                            key: "canAddCard",
                            value: function(u) {
                                return !(u.card.mask === e.POUR && this.isCovered) && k(E(o.prototype), "canAddCard", this).call(this, u)
                            }
                        }, {
                            key: "slotAddedCard",
                            value: function(u) {
                                if (k(E(o.prototype), "slotAddedCard", this).call(this, u),
                                u.card.mask === e.RUBBER_PLUG) {
                                    var d = t.getOwner(u.card);
                                    d.rotation = m
                                }
                            }
                        }, {
                            key: "freeCardOver",
                            value: function(u) {
                                if (k(E(o.prototype), "freeCardOver", this).call(this, u),
                                u.card.mask === e.RUBBER_PLUG) {
                                    var d = t.getOwner(u.card);
                                    d.rotation = 0
                                }
                            }
                        }, {
                            key: "getIsBreak",
                            value: function() {
                                for (var u = 0; u < this.cells.length; u++)
                                    if (u == 0 || u === this.cells.length - 1) {
                                        if (321e-6 > this.cells[u].geLiquidVolume())
                                            return !0
                                    } else if (1e-6 >= this.cells[u].geLiquidVolume())
                                        return !0;
                                return !1
                            }
                        }, {
                            key: "firstCell",
                            get: function() {
                                return this.cells[0]
                            }
                        }, {
                            key: "lastCell",
                            get: function() {
                                return this.cells[this.cells.length - 1]
                            }
                        }, {
                            key: "isCovered",
                            get: function() {
                                return !1
                            }
                        }, {
                            key: "hitTestLiquid",
                            value: function(u) {
                                for (var d = 0; d < this.cells.length; d++)
                                    if (this.cells[d].containerRenderer.hitTestLiquid(u))
                                        return !0;
                                return !1
                            }
                        }, {
                            key: "addPlug",
                            value: function(u, d) {
                                this.cells[u] && this.cells[u].addPlug(d)
                            }
                        }, {
                            key: "setLabelText",
                            value: function(u, d) {
                                this.cells[u].setLabelText(d)
                            }
                        }, {
                            key: "getChemInfoItemPos",
                            value: function() {
                                var u = this.getEqPosByDirRatio(.5, 0);
                                return u.x -= this.chemicalInfoGroup.width / 2,
                                u.y += 10,
                                this.showEleAni && this.edge.hasI() && (u.y += 112),
                                u
                            }
                        }, {
                            key: "checkCollisionDrop",
                            value: function(u) {
                                var d = c.checkCollisionDropByMultiVertex(u, this, this.capacityVertexs);
                                if (this.isCovered && (d.ignore = !0),
                                !d.ignore && d.type === 0) {
                                    for (var y = 0; y < this.cells.length; y++)
                                        if (d = this.cells[y].containerRenderer.checkLiquidCollisionDrop(this, u),
                                        d.type !== 0) {
                                            d.index = y;
                                            break
                                        }
                                }
                                return d
                            }
                        }, {
                            key: "addDrop",
                            value: function(u, d) {
                                d.type === -1 && this.cells[d.index].world.addPhasesData([u.phase])
                            }
                        }, {
                            key: "showPourInTip",
                            value: function(u, d) {
                                var y = this.getPourInTipCells(d);
                                u /= y.length,
                                y.forEach(function(g) {
                                    g.showPourInTip(u)
                                })
                            }
                        }, {
                            key: "hidePourInTip",
                            value: function(u) {
                                this.cells.forEach(function(d) {
                                    d.hidePourTip()
                                })
                            }
                        }, {
                            key: "pourInLiquid",
                            value: function(u, d) {
                                var y = this.getCellBySlot(d);
                                y.world.addPhasesData(u)
                            }
                        }, {
                            key: "getPourInVolume",
                            value: function(u) {
                                var d = 0;
                                return this.cells.forEach(function(y) {
                                    d += y.getCapacity()
                                }),
                                d
                            }
                        }, {
                            key: "addMouse",
                            value: function(u, d) {
                                this.getCellBySlot(d).addMouse(u),
                                u.userData.slot = d
                            }
                        }, {
                            key: "updatePressureParam",
                            value: function() {
                                this.cells.forEach(function(u) {
                                    u.updatePressureParam()
                                })
                            }
                        }, {
                            key: "refreshAfterTransfer",
                            value: function() {
                                this.cells.forEach(function(u) {
                                    u.refreshAfterTransfer()
                                })
                            }
                        }, {
                            key: "liquidAddChild",
                            value: function(u, d) {
                                this.addChild(u);
                                var y = d ? this.getCellBySlot(d) : this.firstCell;
                                u.mask = y.containerRenderer.liquidMask
                            }
                        }, {
                            key: "capacityAddChild",
                            value: function(u, d) {
                                this.addChild(u),
                                u.mask = this.capacityMask
                            }
                        }, {
                            key: "gasAddChild",
                            value: function(u, d) {
                                this.addChild(u);
                                var y = d ? this.getCellBySlot(d) : this.firstCell;
                                u.mask = y.containerRenderer.gasMask
                            }
                        }, {
                            key: "getGlobalLiquidTopY",
                            value: function(u) {
                                var d = this.getCellBySlot(u);
                                return d && 0 < d.containerRenderer.liquidVertexsArr.length && 0 < d.containerRenderer.liquidVertexsArr[0].length ? this.toGlobal(d.containerRenderer.liquidVertexsArr[0][0]).y : (console.error("\u6CA1\u6709\u6DB2\u9762\uFF0C\u4E0D\u5E94\u8BE5\u5B58\u5728\u6C14\u6CE1"),
                                -Infinity)
                            }
                        }, {
                            key: "getPhaseAtPoint",
                            value: function(u, d) {
                                var y = this.getMouseParam(u, d);
                                return y.phaseData
                            }
                        }, {
                            key: "getMouseParam",
                            value: function(u, d) {
                                var y = this.toLocal(u);
                                return d ? this.getCellBySlot(d).getMouseParam(y) : this.firstCell.getMouseParam(y)
                            }
                        }, {
                            key: "transferFluid",
                            value: function() {
                                this.cells.forEach(function(u) {
                                    u.transferFluid()
                                })
                            }
                        }, {
                            key: "getCellBySlot",
                            value: function(u) {
                                if (u) {
                                    if (u.name.includes("electrode"))
                                        return u.name === "electrodeR" ? this.firstCell : this.lastCell;
                                    if (u.userData)
                                        return u.userData.cell
                                }
                                return null
                            }
                        }, {
                            key: "getPourInTipCells",
                            value: function(u) {
                                return this.cells
                            }
                        }]),
                        o
                    }(f.ElectricalEquipment);
                    f.MultiCellPressureContainer = a
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.max
                  , p = Math.PI
                  , c = Math.abs
                  , l = Math.sin
                  , i = Math.cos;
                (function(e) {
                    var t = PIXI.Container
                      , a = PIXI.Sprite
                      , n = PIXI.Graphics
                      , o = PIXI.Text
                      , s = h.electroChemistry.ChemMaterialConst
                      , r = function(u) {
                        function d(g, C, T) {
                            var A;
                            return q(this, d),
                            A = y.call(this),
                            A.spWidth = 0,
                            A.spHeight = 0,
                            A.allowGetBounds = !1,
                            A.interactive = !1,
                            A.interactiveChildren = !1,
                            A.formula = g,
                            A.valence = C,
                            A.main = T,
                            A.initChemMaterial(),
                            A
                        }
                        H(d, u);
                        var y = M(d);
                        return N(d, [{
                            key: "initChemMaterial",
                            value: function() {
                                var C = this
                                  , T = this.formula + "_" + c(this.valence);
                                if (s.SPECIAL_ARY.indexOf(T) !== -1)
                                    this.specialName = T,
                                    this.initGraphicsByName("Al_3", 2.25),
                                    this.spWidth = 2.25 * s.DIA_DEFAULT,
                                    this.spHeight = 2.25 * s.DIA_DEFAULT;
                                else if (s.NORMAL_MATER_MAP[T]) {
                                    var A = s.NORMAL_MATER_MAP[T]
                                      , S = A.children;
                                    S.forEach(function(O) {
                                        C.initGraphicsByName(O.name, 0, O.distance, O.angle)
                                    }),
                                    this.spWidth = s.DIA_DEFAULT * A.width,
                                    this.spHeight = s.DIA_DEFAULT * A.height
                                } else {
                                    var B = this.initGraphicsByName(T);
                                    this.spWidth = s.DIA_DEFAULT * B,
                                    this.spHeight = s.DIA_DEFAULT * B
                                }
                                if (this.valence !== 0) {
                                    var b = c(this.valence)
                                      , P = (1 >= b ? "" : "" + b) + (0 < this.valence ? "+" : 0 > this.valence ? "-" : "")
                                      , I = this.main.getText(P, {
                                        fill: 16777215,
                                        stroke: 0,
                                        fontSize: 24
                                    });
                                    I.anchor.set(0, .5),
                                    this.addChild(I),
                                    I.x = this.spWidth / 2,
                                    I.y = -this.spHeight / 2,
                                    I.scale.x = I.scale.y = m(f(this.spHeight / s.SKIN_DIA_DEF, .4), 1)
                                }
                            }
                        }, {
                            key: "initGraphicsByName",
                            value: function(C) {
                                var T = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 0
                                  , A = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : 0
                                  , S = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : 0;
                                if (T = T || s["RATIO_" + C],
                                !T)
                                    return console.log("\u52A8\u753B\u79BB\u5B50\u6570\u636E\u7F3A\u5931".concat(C)),
                                    0;
                                var B = this.createGraphicsByName(C, this.specialName);
                                return this.addChild(B),
                                A && (B.x = s.DIA_DEFAULT / 2 * A * i(S / 180 * p),
                                B.y = s.DIA_DEFAULT / 2 * A * l(S / 180 * p)),
                                B.scale.x = B.scale.y = T * s.DIA_DEFAULT / s.SKIN_DIA_DEF,
                                T
                            }
                        }, {
                            key: "createGraphicsByName",
                            value: function(C, T) {
                                var A = new n
                                  , S = a.fromImage("eleAniSkin/ele_ani_" + C);
                                S.anchor.set(.5, .5),
                                A.addChild(S);
                                var B = this.main.getText((T || C).split("_")[0], {
                                    fill: -1 < s.WHITE_STYLE_ARY.indexOf(C) ? 16777215 : 0,
                                    stroke: 0,
                                    fontSize: 58
                                });
                                return B.anchor.set(.5, .5),
                                B.width > A.width && B.scale.set(A.width / (B.width + 4)),
                                A.addChild(B),
                                A
                            }
                        }, {
                            key: "destroy",
                            value: function() {
                                var C = this;
                                this.children.forEach(function(T) {
                                    T instanceof o && C.main.removeText(T)
                                }),
                                k(E(d.prototype), "destroy", this).call(this)
                            }
                        }]),
                        d
                    }(t);
                    e.ChemMaterialDisplay = r
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {
                            q(this, p)
                        }
                        return N(p, null, [{
                            key: "getLastBridgeOrBeaker",
                            value: function(l) {
                                return p.bridgeFollowBeaker(l, 0, 0)
                            }
                        }, {
                            key: "bridgeFollowBeaker",
                            value: function(l, i, e) {
                                for (var t; l; ) {
                                    if (t = l.getCards()[0],
                                    !t)
                                        return l;
                                    var a = m.CardSlotUtil.getOwner(t);
                                    if (a.x += i,
                                    a.y += e,
                                    t = t.brother,
                                    l = t.slot,
                                    l) {
                                        var n = m.CardSlotUtil.getOwner(l);
                                        n.x += i,
                                        n.y += e,
                                        l = l.brother
                                    } else
                                        return t
                                }
                                return null
                            }
                        }, {
                            key: "getBrotherEq",
                            value: function(l) {
                                var i = l.getCards();
                                if (!i.length)
                                    return null;
                                var e = i[0].brother
                                  , t = e.slot
                                  , a = m.CardSlotUtil.getOwner(t);
                                return a
                            }
                        }]),
                        p
                    }();
                    m.SaltBridgeUtil = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.chemistry.ChemistryModule
                      , p = h.framework.ModuleType
                      , c = h.engines.electroChemistry.ElectroChemistryEngine
                      , l = function(i) {
                        function e() {
                            var a;
                            return q(this, e),
                            a = t.apply(this, arguments),
                            a.type = p.CHEMICAL_ELECTRO,
                            a.className = "ElectrochemistryModule",
                            a.electroEngine = new c,
                            a.aniMemoryMap = new Map,
                            a
                        }
                        H(e, i);
                        var t = M(e);
                        return N(e, [{
                            key: "init",
                            value: function() {
                                k(E(e.prototype), "init", this).call(this)
                            }
                        }, {
                            key: "initData",
                            value: function(n) {
                                k(E(e.prototype), "initData", this).call(this, n),
                                this.electroEngine.dataManager.initData(n.electroReactData)
                            }
                        }, {
                            key: "destroy",
                            value: function() {
                                k(E(e.prototype), "destroy", this).call(this),
                                this.electroEngine.destroy()
                            }
                        }, {
                            key: "update",
                            value: function(n) {
                                k(E(e.prototype), "update", this).call(this, n)
                            }
                        }, {
                            key: "getEqClassByName",
                            value: function(n) {
                                return h.electroChemistry[n] || k(E(e.prototype), "getEqClassByName", this).call(this, n)
                            }
                        }, {
                            key: "clearAniMemoryMap",
                            value: function() {
                                this.aniMemoryMap.forEach(function(n) {
                                    n.map(function(o) {
                                        o.destroy()
                                    })
                                }),
                                this.aniMemoryMap = null
                            }
                        }, {
                            key: "execute",
                            value: function(n, o) {
                                var s = null;
                                return n === h.NBCommand.TOGGLE_ELEANI ? this.setShowEleAni(o.show) : n === h.NBCommand.SET_ELECTRONS ? this.setElectrons(o.show) : n === h.NBCommand.GET_ELECTRONS ? s = this.getElectrons() : s = k(E(e.prototype), "execute", this).call(this, n, o),
                                s
                            }
                        }, {
                            key: "setElectrons",
                            value: function(n) {
                                this.moduleConfig.showElectrons = n
                            }
                        }, {
                            key: "getElectrons",
                            value: function() {
                                return this.moduleConfig.showElectrons
                            }
                        }, {
                            key: "setShowEleAni",
                            value: function(n) {
                                this.forEachEq(function(o) {
                                    o.showEleAni = n
                                })
                            }
                        }, {
                            key: "updateEngines",
                            value: function(n) {
                                k(E(e.prototype), "updateEngines", this).call(this, n),
                                this.electroEngine.update(10 * n)
                            }
                        }, {
                            key: "getModuleConfig",
                            value: function() {
                                return new m.ElectroChemistryModuleConfig
                            }
                        }]),
                        e
                    }(f);
                    l.moduleType = p.CHEMICAL_ELECTRO,
                    m.ElectrochemistryModule = l
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.framework.ModuleConfig
                      , p = function(c) {
                        function l() {
                            return q(this, l),
                            i.call(this)
                        }
                        H(l, c);
                        var i = M(l);
                        return N(l, [{
                            key: "getData",
                            value: function() {
                                var t = k(E(l.prototype), "getData", this).call(this);
                                return t
                            }
                        }, {
                            key: "setData",
                            value: function(t) {
                                k(E(l.prototype), "setData", this).call(this, t)
                            }
                        }]),
                        l
                    }(f);
                    m.ChemicalModuleConfig = p
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = N(function p() {
                        q(this, p)
                    });
                    f.ADDGLASSSTOPPER = "sounds/addGlassStopper.mp3",
                    f.ADDRUBBERPLUG = "sounds/addRubberPlug.mp3",
                    f.ADDWATER = "sounds/addWater.mp3",
                    f.AL2O3 = "sounds/al2o3.mp3",
                    f.BALLOON = "sounds/balloon.mp3",
                    f.BLAST_BURNER = "sounds/blast_burner.mp3",
                    f.BLOCKNAWATERREACTION = "sounds/blockNaWaterReAction.mp3",
                    f.BOOM = "sounds/boom.mp3",
                    f.BUBBLING = "sounds/bubbling.mp3",
                    f.CHECKPUREJIAN = "sounds/checkPureJian.mp3",
                    f.CHECKPUREPU = "sounds/checkPurePu.mp3",
                    f.COLLISION = "sounds/collision.mp3",
                    f.EXTRACTGLASSSTOPPER = "sounds/extractGlassStopper.mp3",
                    f.EXTRACTRUBBERPLUG = "sounds/extractRubberPlug.mp3",
                    f.FIREWORKBOOM = "sounds/fireworkBoom.mp3",
                    f.FIREWORKSHOOT = "sounds/fireworkShoot.mp3",
                    f.GLASSBREAK = "sounds/glassBreak.mp3",
                    f.IRONCLAMP = "sounds/ironClamp.mp3",
                    f.IRON_BURN = "sounds/iron_burn.mp3",
                    f.LINEFIRE = "sounds/lineFire.mp3",
                    f.MAGBURN = "sounds/magBurn.mp3",
                    f.MATCH = "sounds/match.mp3",
                    f.MATTESWITCH = "sounds/matteSwitch.mp3",
                    f.PUTINWATER = "sounds/putInWater.mp3",
                    f.SHAKEBOTTLE = "sounds/shakeBottle.mp3",
                    f.THERMOMETER = "sounds/thermometer.mp3",
                    f.WIRE = "sounds/wire.mp3",
                    m.SoundConst = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = PIXI.Point
                      , p = h.components.SimpleButton
                      , c = h.components.MouseType
                      , l = h.pixiExtras.NBTouchUtil
                      , i = function(e) {
                        function t(n) {
                            var o;
                            return q(this, t),
                            o = a.call(this, n),
                            o.className = "ADropper",
                            o.mouseP = new f(0,133),
                            o.cardPos = new f(0,40),
                            o.dripping = !1,
                            o.headClicked = function(s, r) {
                                o.dripping && (s === c.Down ? o.dripLiquid() : o.getOwnerContainer() ? o.absorbLiquid() : o.dripLiquid())
                            }
                            ,
                            o.headTouchStart = function(s, r) {
                                o.dripping = !0,
                                s.target = oe(o)
                            }
                            ,
                            o
                        }
                        H(t, e);
                        var a = M(t);
                        return N(t, [{
                            key: "removed",
                            value: function() {
                                l.removeTouch(this.headTouchId),
                                this.headButton.destroy(),
                                this.headButton = null,
                                k(E(t.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(t.prototype), "init", this).call(this),
                                this.totalCapacity = 1e-6,
                                this.card = this.addCard("dropper", this, m.AssembleGroup.DROPPER, this.cardPos),
                                this.card.userData.autoFree = !1,
                                this.headButton = new p(this.head,0,1,this.headClicked),
                                this.addCursor(this.head, h.CursorType.Hand),
                                this.headTouchId = l.addTouch(this.head, {
                                    touchStart: this.headTouchStart
                                })
                            }
                        }, {
                            key: "update",
                            value: function(o) {
                                k(E(t.prototype), "update", this).call(this, o),
                                this.headButton.update(o),
                                m.ZIndexUtil.underOwner(this, this.card),
                                this.gasBalanceWithAir()
                            }
                        }, {
                            key: "cardAddedToSlot",
                            value: function(o) {
                                k(E(t.prototype), "cardAddedToSlot", this).call(this, o),
                                o.card.follow(),
                                o.slot.group,
                                m.AssembleGroup.DROPPER
                            }
                        }, {
                            key: "dradStart",
                            value: function() {
                                k(E(t.prototype), "dragStart", this).call(this)
                            }
                        }, {
                            key: "dragMove",
                            value: function() {
                                k(E(t.prototype), "dragMove", this).call(this),
                                this.dripping = !1,
                                this.card.isFree() || m.CardSlotUtil.freeCard(this.card)
                            }
                        }, {
                            key: "dripLiquid",
                            value: function() {
                                var o = this.geLiquidTotalVolume();
                                if (0 < o) {
                                    var s = m.LiquidDrop.DEFAULT_VOLUME;
                                    this.world.sortByDensity();
                                    var r = this.world.getPhaseByType("l")
                                      , u = r[r.length - 1]
                                      , d = u.clone();
                                    u.volume > s ? (d.volume = s,
                                    u.volume -= s) : (d.volume = u.volume,
                                    u.volume = 0,
                                    this.world.tryRemovePhase(u));
                                    var y = this.getOwnerContainer();
                                    y ? !y.noReduce && y.world.addPhasesData([d]) : this.main.liquidDropManager.addDrop(d, this.getMouseGlobalP())
                                }
                            }
                        }, {
                            key: "getMouseGlobalP",
                            value: function() {
                                return this.toGlobal(this.mouseP)
                            }
                        }, {
                            key: "absorbLiquid",
                            value: function() {
                                var o = this.getOwnerContainer();
                                if (o)
                                    for (var s = .8 * this.totalCapacity - this.geLiquidTotalVolume(), r = this.getMouseGlobalP(), u = 10, d; 0 < s && u && (d = o.getPhaseAtPoint(r),
                                    d && d.phaseType === "l"); ) {
                                        if (o.noReduce) {
                                            this.addPhaseDataByVolume(d, s);
                                            break
                                        } else if (d.volume > s) {
                                            this.addPhaseDataByVolume(d, s),
                                            d.volume -= s;
                                            break
                                        } else
                                            this.addPhaseDataByVolume(d, d.volume),
                                            s -= d.volume,
                                            d.world.tryRemovePhase(d),
                                            console.log("\u5BB9\u5668\u91CC\uFF0C\u5F53\u524D\u4F4D\u7F6E\u7684\u6DB2\u4F53\u4E0D\u591F\u7528");
                                        u--
                                    }
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var o = k(E(t.prototype), "getData", this).call(this);
                                return o.chemicalData = this.world.getData(!0),
                                o
                            }
                        }, {
                            key: "setData",
                            value: function(o) {
                                k(E(t.prototype), "setData", this).call(this, o),
                                this.fillWithAir()
                            }
                        }, {
                            key: "getOwnerContainer",
                            value: function() {
                                return m.CardSlotUtil.getOwner(this.card.slot)
                            }
                        }, {
                            key: "addPhaseDataByVolume",
                            value: function(o, s) {
                                var r = o.clone();
                                r.volume = s,
                                this.world.addPhasesData([r])
                            }
                        }]),
                        t
                    }(m.ChemicalContainer);
                    m.ADropper = i
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.PI;
                (function(f) {
                    var p = h.components.VerticalLinearButton
                      , c = h.components.NBComConst
                      , l = function(i) {
                        function e(a) {
                            var n;
                            return q(this, e),
                            n = t.call(this, a),
                            n.className = "StraightGlassCatheter",
                            n.defaultStretchLength = 360,
                            n.stretchLength = n.defaultStretchLength,
                            n.enableAttrEquation = !0,
                            n
                        }
                        H(e, i);
                        var t = M(e);
                        return N(e, [{
                            key: "init",
                            value: function() {
                                k(E(e.prototype), "init", this).call(this),
                                this.initBtns(),
                                this.updateBtnPos()
                            }
                        }, {
                            key: "removed",
                            value: function() {
                                this.stretchBtn.removed(),
                                this.stretchBtn = null,
                                k(E(e.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "update",
                            value: function(n) {
                                k(E(e.prototype), "update", this).call(this, n),
                                this.stretchBtn.setIconScale(.6 / this.main.getScale()),
                                this.stretchBtn.visible = this.isSelect,
                                this.updateBtnPos()
                            }
                        }, {
                            key: "dragMove",
                            value: function() {
                                k(E(e.prototype), "dragMove", this).call(this),
                                this.updateBtnPos()
                            }
                        }, {
                            key: "cardAddedToSlot",
                            value: function(n) {
                                if (k(E(e.prototype), "cardAddedToSlot", this).call(this, n),
                                n.card.mask === f.AssembleGroup.GLASS_CATHETER) {
                                    var o = f.CardSlotUtil.getOwner(n.slot);
                                    this.setStretchLength(o.insertLength - this.insertFixedLength)
                                }
                            }
                        }, {
                            key: "cardFreed",
                            value: function(n) {
                                k(E(e.prototype), "cardFreed", this).call(this, n),
                                this.setStretchLength(this.defaultStretchLength)
                            }
                        }, {
                            key: "initBtns",
                            value: function() {
                                this.stretchBtn = new p(c.BUTTON_EXTEND_NAME,{
                                    btnStartDrag: this.stretchBtnMoveStart.bind(this),
                                    btnDragMove: this.stretchBtnMoved.bind(this),
                                    btnStopDrag: this.stretchBtnMoveEnd.bind(this)
                                },0,this.stretchLength,this),
                                this.stretchBtn.updateArrowRot(-m / 2),
                                this.stretchBtn.visible = !1,
                                this.main.viewStack.assistLayer.addChild(this.stretchBtn),
                                this.stretchBtn.setPercent(.1),
                                this.stretchBtn.setDotVisible(!1),
                                this.updateLengthByPer(.1)
                            }
                        }, {
                            key: "updateBtnPos",
                            value: function() {
                                this.stretchBtn.x = this.x,
                                this.stretchBtn.y = this.y + this.fixedLength + 50
                            }
                        }, {
                            key: "setCurLength",
                            value: function(n) {
                                k(E(e.prototype), "setCurLength", this).call(this, n);
                                var o = this.lengthToPer(this.curLength);
                                this.stretchBtn.setPercent(o),
                                this.updateLengthByPer(o)
                            }
                        }, {
                            key: "perToLength",
                            value: function(n) {
                                return this.fixedLength + n * this.stretchLength
                            }
                        }, {
                            key: "lengthToPer",
                            value: function(n) {
                                return (n - this.fixedLength) / this.stretchLength
                            }
                        }, {
                            key: "setStretchLength",
                            value: function(n) {
                                this.stretchLength = n,
                                this.stretchBtn.setLength(n),
                                this.updateLengthByPer(this.stretchBtn.getPercent())
                            }
                        }, {
                            key: "stretchBtnMoveStart",
                            value: function() {
                                this.main.hideSettingPanel()
                            }
                        }, {
                            key: "stretchBtnMoved",
                            value: function(n) {
                                this.updateLengthByPer(n)
                            }
                        }, {
                            key: "stretchBtnMoveEnd",
                            value: function(n) {
                                this.main.showSettingPanel(this)
                            }
                        }, {
                            key: "updateLengthByPer",
                            value: function(n) {
                                this.curLength = this.perToLength(n);
                                var o = this.ropePointAry[0];
                                o.y = this.curLength,
                                this.updateAfterLengthChanged()
                            }
                        }, {
                            key: "updateAfterLengthChanged",
                            value: function() {
                                this.updateSlotPosition(),
                                this.updateCardInfo(),
                                this.updateSelectReact(),
                                this.updateTubeInfo()
                            }
                        }]),
                        e
                    }(f.GlassCatheter);
                    f.StraightGlassCatheter = l
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.round
                  , f = Math.max;
                (function(p) {
                    var c = PIXI.Graphics, l = h.engines.chemicalReaction.PhaseUtil, i = 150, e = 22, t;
                    (function(n) {
                        n[n.PLANE = 0] = "PLANE",
                        n[n.DOT = 1] = "DOT"
                    }
                    )(t || (t = {}));
                    var a = function(n) {
                        function o(r) {
                            var u;
                            return q(this, o),
                            u = s.call(this, r),
                            u.paperType = p.TestPaperType.NONE,
                            u.className = "TestPaper",
                            u._curveNum = 0,
                            u.disabled = !1,
                            u.corroded = !1,
                            u._skinColor = 16777215,
                            u.phNum = 7,
                            u.COLOR_DISABLE = 16777215,
                            u.isOnDrag = !1,
                            u.dropVertex = [{
                                x: i,
                                y: 0
                            }, {
                                x: 0,
                                y: 0
                            }],
                            u.crtColorObj = {
                                r: 0,
                                g: 0,
                                b: 0
                            },
                            u.COLOR_CORRODE = 0,
                            u.medTouchType = null,
                            u.colorTweenStyle = null,
                            u.targetR = (i >> 1) + 1,
                            u.canAddDrop = !0,
                            u.canAddGasDrop = !0,
                            u.attrMode = p.EqAttrMode.NONE,
                            u.saveWorldData = !0,
                            u.medTouchType = t.DOT,
                            u
                        }
                        H(o, n);
                        var s = M(o);
                        return N(o, [{
                            key: "init",
                            value: function() {
                                k(E(o.prototype), "init", this).call(this),
                                this.world.enabled = !0
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var u = k(E(o.prototype), "getData", this).call(this);
                                return u.corroded = this.corroded,
                                u.disabled = this.disabled,
                                u
                            }
                        }, {
                            key: "setData",
                            value: function(u) {
                                if (k(E(o.prototype), "setData", this).call(this, u),
                                this.corroded = u.corroded || !1,
                                this.disabled = u.disabled || !1,
                                this.corroded)
                                    return void (this.skinColor = this.COLOR_CORRODE);
                                if (this.disabled)
                                    return void (this.skinColor = this.COLOR_DISABLE);
                                var d = this.world.getPhaseByType("l");
                                if (d.length !== 0) {
                                    var y = d[0]
                                      , g = this.getPhasePH(y);
                                    if (g !== 1 / 0) {
                                        var C = p.TestPaperUtil.getPaperColor(this.paperType, g);
                                        this.skinColor = C
                                    }
                                }
                            }
                        }, {
                            key: "initSkin",
                            value: function() {
                                k(E(o.prototype), "initSkin", this).call(this),
                                this.bgGra = new c,
                                this.addChild(this.bgGra),
                                this.bgGra.beginFill(this.skinColor, 1),
                                this.bgGra.drawRect(0, 0, i, e),
                                this.bgGra.endFill(),
                                this.colorGra = new c,
                                this.colorGra.visible = !1,
                                this.addChild(this.colorGra),
                                this.colorGra.position.set(i / 2, e / 2),
                                this.colorGraMask = new c,
                                this.colorGraMask.drawRect(0, 0, i, e),
                                this.addChild(this.colorGraMask),
                                this.colorGra.mask = this.colorGraMask
                            }
                        }, {
                            key: "skinColor",
                            get: function() {
                                return this._skinColor
                            },
                            set: function(u) {
                                u !== this.skinColor && (this._skinColor = u,
                                this.updateSkinGra())
                            }
                        }, {
                            key: "curveNum",
                            get: function() {
                                return this._curveNum
                            },
                            set: function(u) {
                                u !== this.curveNum && (this._curveNum = u,
                                this.updateSkinGra())
                            }
                        }, {
                            key: "updateSkinGra",
                            value: function() {
                                this.colorTweenStyle === t.DOT && this.crtR !== this.targetR ? (this.colorGra.visible = !0,
                                this.colorGra.clear(),
                                this.colorGra.beginFill(m(this.skinColor)),
                                this.colorGra.drawCircle(0, 0, this.crtR),
                                this.colorGra.endFill()) : (this.colorGra.visible = !1,
                                this.bgGra.visible = !0,
                                this.bgGra.clear(),
                                this.bgGra.beginFill(m(this.skinColor)),
                                this.bgGra.drawRect(0, 0, i, e),
                                this.bgGra.endFill())
                            }
                        }, {
                            key: "update",
                            value: function(u) {
                                k(E(o.prototype), "update", this).call(this, u),
                                0 < this.curveNum && !this.isOnDrag && (this.curveNum = f(0, this.curveNum - 1)),
                                this.updateColorByPhase()
                            }
                        }, {
                            key: "dragStart",
                            value: function() {
                                k(E(o.prototype), "dragStart", this).call(this),
                                this.isOnDrag = !0,
                                this.curveNum = 10
                            }
                        }, {
                            key: "dragEnd",
                            value: function() {
                                k(E(o.prototype), "dragEnd", this).call(this),
                                this.isOnDrag = !1
                            }
                        }, {
                            key: "addDrop",
                            value: function(u, d) {
                                this.medTouchType = t.DOT,
                                this.world.addPhasesData([u.phase]),
                                this.limitPhases()
                            }
                        }, {
                            key: "addGasDrop",
                            value: function(u, d) {
                                this.medTouchType = t.PLANE,
                                u.phase.mol = u.getMolByPer(d.t),
                                this.world.addPhasesData([u.phase]),
                                this.limitPhases()
                            }
                        }, {
                            key: "getDropVertex",
                            value: function() {
                                return this.dropVertex
                            }
                        }, {
                            key: "getGasDropVertex",
                            value: function() {
                                return this.dropVertex
                            }
                        }, {
                            key: "limitPhases",
                            value: function() {
                                this.world.forEachPhase(function(u) {
                                    u.phaseType === "g" ? 1e-5 < u.mol && (u.mol = 1e-5) : u.phaseType === "l" ? 5 < u.mol && (u.mol = 5) : u.phaseType === "s" ? 1 < u.mol && (u.mol = 1) : u.mol = 0
                                }),
                                this.world.removeEmptyPhase()
                            }
                        }, {
                            key: "updateColorByPhase",
                            value: function() {
                                if (!this.corroded) {
                                    var u = this.world.getPhaseByType("l");
                                    if (u.length !== 0) {
                                        var d = u[0];
                                        return this.disabled ? void this.processCorrode(d) : void this.updateColorByPhaseIfEnable(d)
                                    }
                                }
                            }
                        }, {
                            key: "updateColorByPhaseIfEnable",
                            value: function(u) {
                                this.updateColorByPhasePh(u, this.processSpChemEffect.bind(this))
                            }
                        }, {
                            key: "tweenColor",
                            value: function(u) {
                                var d = this
                                  , y = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 2
                                  , g = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null
                                  , C = function() {
                                    g && g()
                                };
                                if (!this.skinColor || !y)
                                    return this.skinColor = u,
                                    void C();
                                if (this.targetColor === u)
                                    return void C();
                                if (this.colorTween && this.colorTween.isActive())
                                    this.colorTween.kill(this.crtColorObj);
                                else {
                                    if (this.skinColor === u)
                                        return void C();
                                    this.crtR = 5
                                }
                                this.crtColorObj = p.ColorUtil.hexToRgb(this.skinColor),
                                this.targetColor = u;
                                var T = p.ColorUtil.hexToRgb(u);
                                this.colorTweenStyle === null && (this.colorTweenStyle = this.medTouchType);
                                var A = this.crtR;
                                this.colorTween = TweenMax.to(this.crtColorObj, y, {
                                    r: T.r,
                                    g: T.g,
                                    b: T.b,
                                    onUpdate: function() {
                                        d.crtR = A + (d.targetR - A) * d.colorTween.ratio,
                                        d.skinColor = p.ColorUtil.rgbToHex(d.crtColorObj.r, d.crtColorObj.g, d.crtColorObj.b)
                                    },
                                    onComplete: function() {
                                        d.colorTweenStyle = null,
                                        d.crtR = d.targetR,
                                        d.skinColor = p.ColorUtil.rgbToHex(d.crtColorObj.r, d.crtColorObj.g, d.crtColorObj.b),
                                        C()
                                    }
                                })
                            }
                        }, {
                            key: "processSpChemEffect",
                            value: function(u) {
                                this.processCorrode(u) || this.processFade(u)
                            }
                        }, {
                            key: "processCorrode",
                            value: function(u) {
                                var d = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : null
                                  , y = u.getMolarConcentrationByFormula("H2SO4", 0)
                                  , g = u.getMolarConcentrationByFormula("SO4", -2);
                                return 12 < y + g && (d ? d() : this.corrodeColor(),
                                !0)
                            }
                        }, {
                            key: "corrodeColor",
                            value: function() {
                                this.disabled = !0,
                                this.corroded = !0,
                                this.tweenColor(this.COLOR_CORRODE, 7)
                            }
                        }, {
                            key: "processFade",
                            value: function(u) {
                                var d = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : null
                                  , y = u.getChemicalByFormula("HClO", 0)
                                  , g = y ? y.mol : 0
                                  , C = u.getChemicalByFormula("ClO", -1)
                                  , T = C ? C.mol : 0
                                  , A = g + T;
                                return 1e-10 < A && (d ? d() : this.fadeColor(),
                                !0)
                            }
                        }, {
                            key: "slowCorrodeColor",
                            value: function() {
                                this.disabled = !0,
                                this.tweenColor(this.COLOR_CORRODE, 2)
                            }
                        }, {
                            key: "updateColorByPhasePh",
                            value: function(u, d) {
                                var y = function() {
                                    d && d(u)
                                }
                                  , g = this.getPhasePH(u);
                                if (g === 1 / 0)
                                    return void y();
                                var C = p.TestPaperUtil.getPaperColor(this.paperType, g);
                                this.tweenColor(C, 5, function() {
                                    y()
                                })
                            }
                        }, {
                            key: "fadeColor",
                            value: function() {
                                this.disabled = !0,
                                this.tweenColor(this.COLOR_DISABLE, 5)
                            }
                        }, {
                            key: "getPhasePH",
                            value: function(u) {
                                return l.getPhasePH(u)
                            }
                        }]),
                        o
                    }(p.ChemicalEquipment);
                    p.TestPaper = a
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = PIXI.Graphics
                      , p = PIXI.Point
                      , c = -160
                      , l = -44
                      , i = 150
                      , e = 90
                      , t = function(a) {
                        function n(s) {
                            var r;
                            return q(this, n),
                            r = o.call(this, s),
                            r.className = "TestPaperBook",
                            r.attrMode = m.EqAttrMode.NONE,
                            r
                        }
                        H(n, a);
                        var o = M(n);
                        return N(n, [{
                            key: "init",
                            value: function() {
                                k(E(n.prototype), "init", this).call(this),
                                this.addPaperGra = new f,
                                this.addPaperGra.alpha = 0,
                                this.addPaperGra.beginFill(16711680),
                                this.addPaperGra.drawRect(0, 0, i, e),
                                this.addPaperGra.endFill(),
                                this.addChild(this.addPaperGra),
                                this.addPaperGra.x = c,
                                this.addPaperGra.y = l,
                                this.initEvents()
                            }
                        }, {
                            key: "initEvents",
                            value: function() {
                                var r = this;
                                this.addPaperGra.addEventListener("pointerdown", function(u) {
                                    r.createPaperAndDrag(u)
                                })
                            }
                        }, {
                            key: "createPaperAndDrag",
                            value: function(r) {
                                var u = this.main.viewStack.toLocal(r.data.global).y - 11
                                  , d = this.main.viewStack.toLocal(new p(c,l), this).x
                                  , y = this.className.replace("Book", "")
                                  , g = this.main.getEqConfData(y)
                                  , C = this.main.addEqSync(y, {
                                    x: d,
                                    y: u
                                }, g);
                                r.target = C
                            }
                        }]),
                        n
                    }(m.ChemicalEquipment);
                    m.TestPaperBook = t
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min;
                (function(f) {
                    var p = h.engines.assemble.AssembleShape
                      , c = PIXI.Point
                      , l = h.engines.pressure.PContainer
                      , i = function(e) {
                        function t(n) {
                            var o;
                            return q(this, t),
                            o = a.call(this, n),
                            o.className = "TestTube",
                            o.isPressureContainer = !0,
                            o.world.enabled = !0,
                            o.canAddDrop = !0,
                            o
                        }
                        H(t, e);
                        var a = M(t);
                        return N(t, [{
                            key: "isCovered",
                            get: function() {
                                return !!this.getCardByName("plug")
                            }
                        }, {
                            key: "removed",
                            value: function() {
                                this.pContainer.destroy(),
                                this.pContainer = null,
                                k(E(t.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(t.prototype), "init", this).call(this);
                                var o = this.getLocalBounds();
                                this.plugSlot = this.addSlot("plug", this.getPlugAssembleShape(), f.AssembleGroup.RUBBER_PLUG, new c(0,0), null, null, new c(0,-1)),
                                this.catheterSlot0 = this.addSlot("catheter0", this, f.AssembleGroup.GLASS_CATHETER, new c(o.x + .25 * o.width,o.y)),
                                this.catheterSlot1 = this.addSlot("catheter1", this, f.AssembleGroup.GLASS_CATHETER, new c(o.x + .75 * o.width,o.y)),
                                this.catheterSlot2 = this.addSlot("catheter2", this, f.AssembleGroup.GLASS_CATHETER, new c(o.x + .5 * o.width,o.y)),
                                this.pourOutCard = this.addCard("pourOut", p.getCircle(30, this, o.x, o.y), f.AssembleGroup.POUR, new c(0,0)),
                                this.pourInSlot = this.addSlot("pourIn", p.getCircle(30, this, o.x + o.width, o.y), f.AssembleGroup.POUR, new c(0,0)),
                                this.pContainer = new l(this.main.pressureEngine,{
                                    eq: this
                                }),
                                this.dropperSlot = this.addSlot("dropper", this, f.AssembleGroup.DROPPER, new c(0,0)),
                                this.dropperSlot.disabled = !0
                            }
                        }, {
                            key: "canAddCard",
                            value: function(o) {
                                if (o.card.mask === f.AssembleGroup.GLASS_CATHETER) {
                                    if (!o.slot.canAddCard(o.card))
                                        return !1
                                } else if (o.slot.group === f.AssembleGroup.DROPPER) {
                                    var s = o.slot.assembleData.hitArea.toLocal(o.card.assembleData.p0, o.card.assembleData.hitArea);
                                    this.dropperSlot.assembleData.p0.y = m(s.y, 165)
                                }
                                return k(E(t.prototype), "canAddCard", this).call(this, o)
                            }
                        }, {
                            key: "slotAddedCard",
                            value: function(o) {
                                if (k(E(t.prototype), "slotAddedCard", this).call(this, o),
                                o.card.mask === f.AssembleGroup.GLASS_CATHETER) {
                                    var s = f.CardSlotUtil.getOwner(o.card);
                                    s.insertIndex = this.getIndexByCatheterSlot(o.slot)
                                } else if (o.card.mask === f.AssembleGroup.RUBBER_PLUG) {
                                    for (var r = f.CardSlotUtil.getOwner(o.card), u = f.CardSlotUtil.getCardsInSlotsByGroup(r, f.AssembleGroup.GLASS_CATHETER), d = 0, y = u.length, g; d < y; d++)
                                        g = u[d],
                                        r.freeCard(g);
                                    this.appendCatheterCards(u)
                                }
                            }
                        }, {
                            key: "freeCardOver",
                            value: function(o) {
                                if (k(E(t.prototype), "freeCardOver", this).call(this, o),
                                o.card.mask === f.AssembleGroup.RUBBER_PLUG) {
                                    for (var s = f.CardSlotUtil.getOwner(o.card), r = f.CardSlotUtil.getCardsInSlotsByGroup(this, f.AssembleGroup.GLASS_CATHETER), u = 0, d = r.length, y; u < d; u++)
                                        y = r[u],
                                        this.freeCard(y);
                                    s.appendCatheterCards(r)
                                }
                            }
                        }, {
                            key: "getIndexByCatheterSlot",
                            value: function(o) {
                                return o === this.catheterSlot0 ? 0 : o === this.catheterSlot1 ? 1 : o === this.catheterSlot2 ? 2 : void console.error("getIndexByCatheterSlot -> slot:".concat(o.name))
                            }
                        }, {
                            key: "getCatheterSlotByIndex",
                            value: function(o) {
                                return o === 0 ? this.catheterSlot0 : o === 1 ? this.catheterSlot1 : o === 2 ? this.catheterSlot2 : void console.error("getCatheterSlotByIndex -> index:".concat(o))
                            }
                        }, {
                            key: "isConnectWithAir",
                            value: function() {
                                return this.plugSlot.isEmpty()
                            }
                        }, {
                            key: "getPlugAssembleShape",
                            value: function() {
                                var o = this.getLocalBounds();
                                return p.getRect(o.width, o.width, this, o.x + o.width / 2, o.y, -o.width / 2, 0)
                            }
                        }, {
                            key: "appendCatheterCards",
                            value: function(o) {
                                for (var s = 0, r = o.length, u, d, y; s < r; s++)
                                    d = o[s],
                                    u = f.CardSlotUtil.getOwner(d),
                                    y = this.getCatheterSlotByIndex(u.insertIndex),
                                    y && f.CardSlotUtil.tryCardAddToSlot(d, y)
                            }
                        }]),
                        t
                    }(f.PressureContainer);
                    f.TestTube = i
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.max
                  , p = Math.sin
                  , c = Math.cos;
                (function(l) {
                    var i = PIXI.Container
                      , e = h.utils.NBPolygonUtil
                      , t = PIXI.Graphics
                      , a = h.pixiExtras.NBGraphicsUtil
                      , n = h.utils.Constant
                      , o = h.engines.chemicalReaction.WorldUtil
                      , s = function(r) {
                        function u(y, g, C, T) {
                            var A;
                            return q(this, u),
                            A = d.call(this),
                            A.rot = 0,
                            A.liquidVertexsArr = [],
                            A.vertexs = [],
                            A.aabb = {
                                x: 0,
                                y: 0,
                                width: 1,
                                height: 1
                            },
                            A.vertexs = y,
                            A.world = g,
                            A.air = T,
                            A.area = e.getArea(y),
                            A.aabb = e.getAABB(y),
                            A.capacity = 0 < C ? C : n.area2m3(A.area, A.aabb.height),
                            A.liquidGra = new t,
                            A.addChild(A.liquidGra),
                            A.gasGra = new t,
                            A.addChild(A.gasGra),
                            A.tipGra = new t,
                            A.addChild(A.tipGra),
                            A.liquidMask = new t,
                            A.addChild(A.liquidMask),
                            A.gasMask = new t,
                            A.addChild(A.gasMask),
                            A.liquidMask.alpha = 0,
                            A.gasMask.alpha = 0,
                            A
                        }
                        H(u, r);
                        var d = M(u);
                        return N(u, [{
                            key: "removed",
                            value: function() {
                                this.vertexs = null,
                                this.world = null,
                                this.liquidVertexsArr = null,
                                this.air = null
                            }
                        }, {
                            key: "fillWithAir",
                            value: function() {
                                this.world.getPhaseByType("g").forEach(function(T) {
                                    T.mol = 0
                                }),
                                this.world.removeEmptyPhase();
                                var g = this.capacity - this.geLiquidVolume();
                                if (0 < g) {
                                    var C = o.getAirPhase(this.world.engine, g, 101324);
                                    this.world.addPhasesData([C])
                                }
                                this.update(0)
                            }
                        }, {
                            key: "geLiquidVolume",
                            value: function() {
                                return this.world.getLiquidV()
                            }
                        }, {
                            key: "volume2area",
                            value: function(g) {
                                return this.area * g / this.capacity
                            }
                        }, {
                            key: "area2volume",
                            value: function(g) {
                                return this.capacity * g / this.area
                            }
                        }, {
                            key: "update",
                            value: function(g) {
                                this.liquidGra.clear(),
                                this.liquidMask.clear(),
                                this.liquidVertexsArr = [];
                                for (var C = this.world.getLiquidMessage().reverse(), T = this.vertexs, A = this.capacity, S = this.getHDir(), B = 0, b; B < C.length; B++) {
                                    var P = C[B]
                                      , I = this.volume2area(P.vol)
                                      , O = this.volume2area(A);
                                    b = e.getDivideByArea(T, m(I, O), O, S),
                                    A -= P.vol,
                                    T = b.up,
                                    this.refreshLiquid(this.liquidGra, b.down, P.color.color, P.color.alpha),
                                    this.refreshLiquid(this.liquidMask, b.down, P.color.color, P.color.alpha),
                                    this.liquidVertexsArr.push(b.down)
                                }
                                if (T && 3 <= T.length) {
                                    var D = this.world.getPhaseByType("g")[0];
                                    if (D) {
                                        var w = D.getColor();
                                        this.refreshGas(this.gasGra, T, w.color, w.alpha),
                                        this.refreshGas(this.gasMask, T, w.color, w.alpha)
                                    }
                                }
                            }
                        }, {
                            key: "getLiquids",
                            value: function() {
                                return this.world.sortByDensity(),
                                this.world.getPhaseByType("l")
                            }
                        }, {
                            key: "getTopLiquidVertex",
                            value: function() {
                                return this.liquidVertexsArr[this.liquidVertexsArr.length - 1] || []
                            }
                        }, {
                            key: "getMouseParam",
                            value: function(g) {
                                for (var C = this.world.getPhaseByType("g")[0] || this.air, T = {
                                    type: h.FluidType.gas,
                                    rho: C.density,
                                    molecular: C.molecular,
                                    p: C.pressure,
                                    phaseData: C
                                }, A = this.getHDir(), S = e.disP2S(A, g), B = this.getLiquids().reverse(), b = m(B.length, this.liquidVertexsArr.length), P = b - 1; 0 <= P; P--) {
                                    var I = this.liquidVertexsArr[P]
                                      , O = e.getMinMax(I, A)
                                      , D = O[0] - S
                                      , w = O[1] - S;
                                    if (0 <= D)
                                        break;
                                    var R = B[P];
                                    if (T.type = h.FluidType.liquid,
                                    T.rho = R.density,
                                    T.phaseData = R,
                                    T.molecular = R.molecular,
                                    0 >= w)
                                        T.p += this.calcP(R.density, w - D);
                                    else {
                                        T.p += this.calcP(R.density, -D);
                                        break
                                    }
                                }
                                return T
                            }
                        }, {
                            key: "showPourInTip",
                            value: function(g) {
                                this.showTip(g, 2)
                            }
                        }, {
                            key: "showPourOutTip",
                            value: function(g) {
                                this.showTip(g, 1)
                            }
                        }, {
                            key: "getDivideByAreaRange",
                            value: function(g, C, T, A, S) {
                                var B = e.getDivideByArea(g, A, C, S)
                                  , b = e.getDivideByArea(B.down, T, A, S);
                                return b.up
                            }
                        }, {
                            key: "hidePourTip",
                            value: function() {
                                this.tipGra.clear(),
                                this.tipGra.visible = !1
                            }
                        }, {
                            key: "getCurrentCapacity",
                            value: function() {
                                if (this.rot === 0)
                                    return this.capacity;
                                var g = this.vertexs[0]
                                  , C = this.vertexs[this.vertexs.length - 1]
                                  , T = this.getHDir()
                                  , A = e.disP2S(T, g)
                                  , S = e.disP2S(T, C)
                                  , B = S > A ? C : g
                                  , b = {
                                    x: B.x + T.x,
                                    y: B.y + T.y
                                }
                                  , P = e.getDivideSpace(this.vertexs, B, b);
                                return P ? this.area2volume(e.getArea(P.down)) : 0
                            }
                        }, {
                            key: "getPourCapacity",
                            value: function() {
                                var g = this.getCurrentCapacity()
                                  , C = this.geLiquidVolume();
                                return f(C - g, 0)
                            }
                        }, {
                            key: "getHDir",
                            value: function() {
                                return {
                                    x: c(-this.rot),
                                    y: p(-this.rot)
                                }
                            }
                        }, {
                            key: "hitTestLiquid",
                            value: function(g) {
                                return this.liquidGra.hitTest(g)
                            }
                        }, {
                            key: "hitTestPointLiquid",
                            value: function(g) {
                                return this.liquidGra.hitTestPoint(g)
                            }
                        }, {
                            key: "getLiquidGlobalBounds",
                            value: function() {
                                return this.liquidGra.getBounds()
                            }
                        }, {
                            key: "getLiquidRect",
                            value: function() {
                                var g = this.liquidVertexsArr[0];
                                if (g && 0 < g.length) {
                                    var C = m.apply(Math, re(g.map(function(B) {
                                        return B.y
                                    })))
                                      , T = f.apply(Math, re(g.map(function(B) {
                                        return B.y
                                    })))
                                      , A = m.apply(Math, re(g.map(function(B) {
                                        return B.x
                                    })))
                                      , S = f.apply(Math, re(g.map(function(B) {
                                        return B.x
                                    })));
                                    return [A, S, C, T]
                                }
                                return [-Infinity, -Infinity, 0, 0]
                            }
                        }, {
                            key: "checkLiquidCollisionDrop",
                            value: function(g, C) {
                                var T = l.DropUtil.getDefaultResult(g)
                                  , A = C.parent.toGlobal(C.position)
                                  , S = this.hitTestPointLiquid(A);
                                if (S) {
                                    var B = C.getLastP()
                                      , b = this.getLiquidGlobalBounds()
                                      , P = (b.y - A.y) / (B.y - A.y);
                                    T.t = P,
                                    T.type = -1
                                }
                                return T
                            }
                        }, {
                            key: "calcP",
                            value: function(g, C) {
                                return 9.8 * g * n.px2m(C)
                            }
                        }, {
                            key: "showTip",
                            value: function(g, C) {
                                if (this.tipGra.visible = !0,
                                this.tipGra.clear(),
                                !(0 >= g)) {
                                    var T = this.volume2area(this.geLiquidVolume()), A = this.volume2area(g), S;
                                    if (C === 1)
                                        S = T,
                                        T -= A;
                                    else {
                                        if (T >= this.area)
                                            return;
                                        S = T + A,
                                        S > this.area && (S = this.area)
                                    }
                                    var B = this.getHDir()
                                      , b = this.getDivideByAreaRange(this.vertexs, this.area, T, S, B);
                                    this.drawTip(b)
                                }
                            }
                        }, {
                            key: "drawTip",
                            value: function(g) {
                                var C = this.tipGra;
                                C.beginFill(0, .2);
                                for (var T = 0, A; T < g.length; T++)
                                    A = g[T],
                                    T == 0 ? C.moveTo(A.x, A.y) : C.lineTo(A.x, A.y);
                                C.endFill(),
                                C.lineStyle(2, 16777215);
                                for (var S = 1; S < g.length; S++)
                                    a.drawDash(C, g[S - 1], g[S], 5, 5)
                            }
                        }, {
                            key: "refreshGas",
                            value: function(g, C, T, A) {
                                1 < A && (A = 1);
                                var S;
                                g.clear(),
                                g.beginFill(T, A);
                                for (var B = 0; B < C.length; B++)
                                    S = C[B],
                                    B == 0 ? g.moveTo(S.x, S.y) : g.lineTo(S.x, S.y);
                                g.closePath(),
                                g.endFill()
                            }
                        }, {
                            key: "refreshLiquid",
                            value: function(g, C, T, A) {
                                var S;
                                g.beginFill(T, A);
                                for (var B = 0; B < C.length; B++)
                                    S = C[B],
                                    B == 0 ? g.moveTo(S.x, S.y) : g.lineTo(S.x, S.y);
                                g.closePath(),
                                g.endFill()
                            }
                        }]),
                        u
                    }(i);
                    l.ContainerRenderer = s
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.round
                  , f = Math.min;
                (function(p) {
                    var c = PIXI.Container
                      , l = PIXI.mesh.Rope
                      , i = PIXI.Point
                      , e = PIXI.Texture
                      , t = function(a) {
                        function n(s, r) {
                            var u;
                            q(this, n),
                            u = o.call(this),
                            u.points = [],
                            u.pointNum = 100,
                            u.terminalCallBack = function(y, g) {
                                switch (y) {
                                case p.Terminal.TYPE_DRAG_START:
                                    break;
                                case p.Terminal.TYPE_DRAG_MOVE:
                                    g.isOnDragMove || u.eq.freeCard(g.card),
                                    u.updateLine();
                                    break;
                                case p.Terminal.TYPE_DRAG_END:
                                    u.eq.checkCardCollision(g.card);
                                    break
                                }
                            }
                            ,
                            u.eq = s,
                            u.conf = r,
                            r.pointNum && (u.pointNum = r.pointNum);
                            for (var d = 0; d < u.pointNum; d++)
                                u.points.push(new i);
                            return u.rope = new l(u.getTexture(r.ropeTextureId, r.textureTrim),u.points),
                            u.addChild(u.rope),
                            u.terminal0 = new p.Terminal(r.terminalTextureId,r.terminalAnchor.x,r.terminalAnchor.y,-1),
                            u.terminal1 = new p.Terminal(r.terminalTextureId,r.terminalAnchor.x,r.terminalAnchor.y,1),
                            u.addChild(u.terminal0),
                            u.addChild(u.terminal1),
                            u.terminal0.x = -(r.defaultLen || 200) / 2,
                            u.terminal1.x = (r.defaultLen || 200) / 2,
                            u.terminal0.card = s.addCard("terminal0", u.terminal0, r.terminalGroup, r.cardP0, u.terminal0),
                            u.terminal1.card = s.addCard("terminal1", u.terminal1, r.terminalGroup, r.cardP0, u.terminal1),
                            u.terminal0.callBack = u.terminalCallBack,
                            u.terminal1.callBack = u.terminalCallBack,
                            s.addCursor(u.terminal0, h.CursorType.Hand),
                            s.addCursor(u.terminal1, h.CursorType.Hand),
                            u
                        }
                        H(n, a);
                        var o = M(n);
                        return N(n, [{
                            key: "update",
                            value: function(r) {
                                this.terminal0.update(r),
                                this.terminal1.update(r),
                                this.updateLine()
                            }
                        }, {
                            key: "removed",
                            value: function() {
                                this.terminal0.removed(),
                                this.terminal0 = null,
                                this.terminal1.removed(),
                                this.terminal1 = null,
                                this.rope = null,
                                this.eq = null
                            }
                        }, {
                            key: "moveTo",
                            value: function(r, u) {
                                this.x = r,
                                this.y = u
                            }
                        }, {
                            key: "updateLine",
                            value: function() {
                                var r = this.terminal0.dir, u = this.terminal1.dir, d = new i(this.terminal0.x,this.terminal0.y), y = new i(this.terminal1.x,this.terminal1.y), g = d.distance(d, y), C = f(80, g / 2), T = new i(d.x - C * r.x,d.y - C * r.y), A = new i(y.x - C * u.x,y.y - C * u.y), S = this.getBezierCurve(d, T, A, y), B;
                                this.points.length = 0,
                                (B = this.points).push.apply(B, re(S))
                            }
                        }, {
                            key: "getData",
                            value: function(r) {
                                r.terminal0 = {
                                    x: this.terminal0.x,
                                    y: this.terminal0.y
                                },
                                r.terminal1 = {
                                    x: this.terminal1.x,
                                    y: this.terminal1.y
                                }
                            }
                        }, {
                            key: "setData",
                            value: function(r) {
                                this.terminal0.x = r.terminal0.x,
                                this.terminal0.y = r.terminal0.y,
                                this.terminal1.x = r.terminal1.x,
                                this.terminal1.y = r.terminal1.y
                            }
                        }, {
                            key: "getBezierCurve",
                            value: function(r, u, d, y) {
                                for (var g = [], C = 0; C < this.pointNum; C++) {
                                    var T = C / (this.pointNum - 1)
                                      , A = 1 - T
                                      , S = A * A
                                      , B = T * T
                                      , b = A * S
                                      , P = 3 * T * S
                                      , I = 3 * B * A
                                      , O = B * T
                                      , D = new i(r.x * b + u.x * P + d.x * I + y.x * O,r.y * b + u.y * P + d.y * I + y.y * O);
                                    g.push(D)
                                }
                                return g
                            }
                        }, {
                            key: "canAddTo",
                            value: function(r) {
                                return !(r.slot.hasCard(this.terminal0.card) || r.slot.hasCard(this.terminal1.card))
                            }
                        }, {
                            key: "cardAddToSlot",
                            value: function(r) {
                                r.card === this.terminal0.card ? this.terminal0.updateRotationByCard() : this.terminal1.updateRotationByCard()
                            }
                        }, {
                            key: "setRopeTextureId",
                            value: function(r) {
                                this.rope.texture.destroy(),
                                this.rope.texture = this.getTexture(r, this.conf.textureTrim)
                            }
                        }, {
                            key: "getTexture",
                            value: function(r) {
                                var u = !(1 < arguments.length && arguments[1] !== void 0) || arguments[1];
                                if (!u)
                                    return PIXI.Texture.fromImage(r);
                                var d = PIXI.Texture.fromImage(r);
                                if (d.width === 0 || d.height === 0)
                                    return d;
                                var y = d.frame.clone();
                                return y.x = m(y.x + y.width / 2),
                                y.width = 1,
                                new e(d.baseTexture,y,d.orig,d.trim)
                            }
                        }]),
                        n
                    }(c);
                    p.TwoTerminalRope = t
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = PIXI.Point
                      , p = h.engines.assemble.AssembleShape
                      , c = function(l) {
                        function i(t) {
                            var a;
                            return q(this, i),
                            a = e.call(this, t),
                            a.className = "DropperBottle",
                            a.enableAttrPlug = !1,
                            a.saveWorldData = !1,
                            a
                        }
                        H(i, l);
                        var e = M(i);
                        return N(i, [{
                            key: "removed",
                            value: function() {
                                m.CardSlotUtil.removeOwner(this.dropperSlot.getCards()[0]),
                                k(E(i.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(i.prototype), "init", this).call(this),
                                this.noReduce = !0,
                                this.totalCapacity = 25e-5,
                                this.dropperSlot = this.addSlot("dropper", this, m.AssembleGroup.DROPPER, new f(0,0)),
                                this.pourOutCard = this.addCard("pourOut", p.getCircle(30, this, -20, -95), m.AssembleGroup.POUR, new f(0,0)),
                                this.setLabelScale(.8)
                            }
                        }, {
                            key: "addDropper",
                            value: function(a) {
                                m.CardSlotUtil.tryCardAddToSlot(a, this.dropperSlot)
                            }
                        }, {
                            key: "canAddTo",
                            value: function(a) {
                                return k(E(i.prototype), "canAddTo", this).call(this, a) && this.dropperSlot.isEmpty()
                            }
                        }]),
                        i
                    }(m.PourAbleContainer);
                    m.DropperBottle = c
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.pixiExtras.NBSimpleLabel
                      , p = h.utils.NBChemStrConvert
                      , c = function() {
                        function l() {
                            q(this, l)
                        }
                        return N(l, null, [{
                            key: "getLabelStr",
                            value: function(e) {
                                var t = "";
                                if (e && e.label) {
                                    var a = p.convertFormula(e.label[0]) || ""
                                      , n = p.convertFormula(e.label[1]) || ""
                                      , o = [];
                                    a && o.push(a),
                                    n && o.push(n),
                                    t = o.join(`
`)
                                }
                                return t
                            }
                        }, {
                            key: "getLabelStrByPos",
                            value: function(e, t) {
                                var a = "";
                                return e && t ? a = e + `
` + t : e ? a = e : t && (a = t),
                                a
                            }
                        }, {
                            key: "createLabel",
                            value: function(e, t, a, n, o) {
                                var s = {
                                    width: 120,
                                    height: 70,
                                    fontSize: 24,
                                    text: a
                                }
                                  , r = new f(s,o);
                                return r.scale.x = n,
                                r.scale.y = n,
                                r.x = e,
                                r.y = t,
                                r
                            }
                        }]),
                        l
                    }();
                    m.LabelUtil = c
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.max;
                (function(f) {
                    var p = h.dataStruct.CdequeItem
                      , c = PIXI.Point
                      , l = h.utils.Constant
                      , i = function() {
                        function e() {
                            q(this, e)
                        }
                        return N(e, null, [{
                            key: "getAnotherEqInTube",
                            value: function(a, n) {
                                var o = e.getEqByMouse(a.mouse0.friend);
                                if (o !== n)
                                    return o;
                                var s = e.getEqByMouse(a.mouse1.friend);
                                return s === n ? null : s
                            }
                        }, {
                            key: "getEqByMouse",
                            value: function(a) {
                                return a && a.tube ? e.getEqByTube(a.tube) : null
                            }
                        }, {
                            key: "getEqByTube",
                            value: function(a) {
                                return a && a.userData ? a.userData.eq : null
                            }
                        }, {
                            key: "getTubeComp",
                            value: function(a) {
                                return a && a.tube && a.tube.userData ? a.tube.userData.owner : null
                            }
                        }, {
                            key: "getEqByContainer",
                            value: function(a) {
                                return a && a.userData ? a.userData.eq : null
                            }
                        }, {
                            key: "getContainerEqByMouse",
                            value: function(a) {
                                return a && a.parent ? e.getEqByContainer(a.parent) : null
                            }
                        }, {
                            key: "getSlotByMouse",
                            value: function(a) {
                                return a.userData.slot
                            }
                        }, {
                            key: "containerTransfer",
                            value: function(a, n) {
                                var o = a.getAllMouse();
                                o.forEach(function(s) {
                                    if (0 > s.v) {
                                        var r = e.getTubeComp(s);
                                        r.transferIn(n)
                                    }
                                }),
                                o.forEach(function(s) {
                                    if (0 < s.v) {
                                        var r = e.getTubeComp(s);
                                        r.transferOut(n)
                                    }
                                })
                            }
                        }, {
                            key: "getItemMol",
                            value: function(a, n) {
                                var o = a.length * n * a.data.density;
                                return o / a.data.molecular
                            }
                        }, {
                            key: "updateOneMouseParam",
                            value: function(a, n) {
                                if (a.parent) {
                                    var o = e.getContainerEqByMouse(a)
                                      , s = o.getMouseParam(a.userData.globalP, e.getSlotByMouse(a));
                                    this.setMouseParam(a, s)
                                } else
                                    a.friend || this.setMouseParam(a, e.getAirParam(n))
                            }
                        }, {
                            key: "getCdequeItem",
                            value: function(a, n, o) {
                                var s = a.clone()
                                  , r = 0
                                  , u = 0;
                                return a.phaseType === "g" ? u = n * s.molecular / s.density : (n > a.volume && (n = a.volume),
                                u = n),
                                r = u / o,
                                new p(r,s)
                            }
                        }, {
                            key: "liquid2air",
                            value: function(a) {
                                var n = e.getTubeComp(a)
                                  , o = n.cdeque.getLastRemoveArr();
                                o.forEach(function(s) {
                                    if (s.data.phaseType === "g") {
                                        var r = s.data.clone();
                                        r.mol = e.getItemMol(s, n.S);
                                        var u = l.m2px(.0224 * -a.v / (.016 * m(n.S, f.TubeComp.DEFAULT_S)))
                                          , d = new c(u * a.userData.dir.x,u * a.userData.dir.y);
                                        n.main.gasDropManager.addDrop(r, a.userData.globalP, d)
                                    }
                                })
                            }
                        }, {
                            key: "setMouseParam",
                            value: function(a, n) {
                                a.fluid.type = n.type,
                                a.fluid.rho = n.rho,
                                a.fluid.molecular = n.molecular,
                                a.p = n.p,
                                a.userData.phase = n.phaseData
                            }
                        }, {
                            key: "getAirParam",
                            value: function(a) {
                                return {
                                    type: h.FluidType.gas,
                                    rho: a.density,
                                    p: a.pressure,
                                    molecular: a.molecular,
                                    phaseData: a
                                }
                            }
                        }, {
                            key: "setGasParam",
                            value: function(a, n) {
                                n ? (a.V = n.volume,
                                a.n = n.mol,
                                a.T = n.temperature) : (a.V = 0,
                                a.n = 0,
                                a.T = 300)
                            }
                        }]),
                        e
                    }();
                    f.PressureUtil = i
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.chemistry.ChemicalEquipment
                      , p = h.chemistry.AssembleGroup
                      , c = PIXI.Point
                      , l = h.chemistry.EqAttrMode
                      , i = function(e) {
                        function t(n) {
                            var o;
                            return q(this, t),
                            o = a.call(this, n),
                            o.className = "IonExchangeMembrane",
                            o.type = 0,
                            o.addCard("membrane", oe(o), p.MEMBRANE, new c(0,13)),
                            o.attrMode = l.NONE,
                            o
                        }
                        H(t, e);
                        var a = M(t);
                        return N(t, [{
                            key: "cardAddedToSlot",
                            value: function(o) {
                                k(E(t.prototype), "cardAddedToSlot", this).call(this, o),
                                this.bg.currentFrame = 1
                            }
                        }, {
                            key: "cardFreed",
                            value: function(o) {
                                k(E(t.prototype), "cardFreed", this).call(this, o),
                                this.bg.currentFrame = 0
                            }
                        }]),
                        t
                    }(f);
                    m.IonExchangeMembrane = i
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.max
                  , p = Math.abs;
                (function(c) {
                    var l = h.chemistry.Beaker
                      , i = h.engines.electroChemistry.Edge
                      , e = h.chemistry.AssembleGroup
                      , t = h.engines.assemble.Card
                      , a = h.chemistry.SaltBridgeUtil
                      , n = h.chemistry.CardSlotUtil
                      , o = PIXI.Point
                      , s = h.plugins.ComponentProperty
                      , r = function(u) {
                        function d(g) {
                            var C;
                            return q(this, d),
                            C = y.call(this, g),
                            C.className = "ElectroBeaker",
                            C.U = 0,
                            C.I = 0,
                            C.Q = 0,
                            C.eleAnimatManager = new c.EleAnimationManager(oe(C)),
                            C.enableEleAni = !0,
                            C.showEleAni = !1,
                            C.enableAttrEleAni = !0,
                            C.chemicalInfoType = 1,
                            C.getMaxQ = function() {
                                if (!C.edge.hasI())
                                    return 0;
                                var T = C.getElectrodeReaction(C.electrodeSlotR)
                                  , A = C.getElectrodeReaction(C.electrodeSlotL)
                                  , S = T ? c.ElectroReactUtil.getMaxQ(T, C.world) : 1e6
                                  , B = A ? c.ElectroReactUtil.getMaxQ(A, C.world) : 1e6
                                  , b = .5 * m(S, B);
                                return b
                            }
                            ,
                            C.edge = new i(g.electroEngine.elecWorld),
                            C.edge.userData.eq = oe(C),
                            C.edge.R = 1,
                            C.edge.userData.getMaxQ = C.getMaxQ,
                            C.edge.isBreak = !0,
                            C
                        }
                        H(d, u);
                        var y = M(d);
                        return N(d, [{
                            key: "removed",
                            value: function() {
                                this.halfReactionMerger.destroy(),
                                this.halfReactionMerger = null,
                                this.electrodeSlotR.brother = null,
                                this.electrodeSlotL.brother = null,
                                this.edge.destroy(),
                                this.edge = null,
                                k(E(d.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(d.prototype), "init", this).call(this),
                                this.electrodeSlotR = this.addSlot("electrodeR", this, e.ELECTRODE, new o(140,0), null, null, null),
                                this.electrodeSlotL = this.addSlot("electrodeL", this, e.ELECTRODE, new o(-110,0), null, null, null),
                                this.bridgeSlotR = this.addSlot("bridgeR", this, e.SALT_BRIDGE_LEFT, new o(140,0), null, null, null),
                                this.bridgeSlotL = this.addSlot("bridgeL", this, e.SALT_BRIDGE_RIGHT, new o(-110,0), null, null, null),
                                this.electrodeSlotR.userData.vertex = this.edge.vertex1,
                                this.electrodeSlotL.userData.vertex = this.edge.vertex0,
                                this.electrodeSlotR.userData.cardMaxOffX = -100,
                                this.electrodeSlotL.userData.cardMaxOffX = 100,
                                this.bridgeSlotR.userData.vertex = this.edge.vertex1,
                                this.bridgeSlotL.userData.vertex = this.edge.vertex0,
                                this.electrodeSlotR.brother = this.electrodeSlotL,
                                this.electrodeSlotL.brother = this.electrodeSlotR,
                                this.electrodeSlotL.userData.world = this.world,
                                this.electrodeSlotR.userData.world = this.world,
                                this.pourOutCard.disabled = !0,
                                this.halfReactionMerger = new c.HalfReactionMerger
                            }
                        }, {
                            key: "update",
                            value: function(C) {
                                k(E(d.prototype), "update", this).call(this, C),
                                this.U = this.edge.U,
                                this.I = this.edge.I,
                                this.Q = this.edge.Q,
                                this.edge.isBreak = this.getIsBreak(),
                                this.electrodeReact(),
                                this.eleAnimatManager.update(this.enableEleAni && this.showEleAni && this.edge.hasI())
                            }
                        }, {
                            key: "getIsBreak",
                            value: function() {
                                return !1
                            }
                        }, {
                            key: "dragEnd",
                            value: function() {
                                k(E(d.prototype), "dragEnd", this).call(this),
                                this.checkSlotCollision(this.bridgeSlotR),
                                this.checkSlotCollision(this.bridgeSlotL),
                                this.checkLastConnectedCollision(this.bridgeSlotR),
                                this.checkLastConnectedCollision(this.bridgeSlotL)
                            }
                        }, {
                            key: "moveBy",
                            value: function(C, T) {
                                k(E(d.prototype), "moveBy", this).call(this, C, T),
                                this.tryMoveConnectedSaltBridge(C, T)
                            }
                        }, {
                            key: "canAddCard",
                            value: function(C) {
                                if (C.slot === this.electrodeSlotL)
                                    return this.electrodeSlotL.isEmpty() && this.bridgeSlotL.isEmpty();
                                if (C.slot === this.electrodeSlotR)
                                    return this.electrodeSlotR.isEmpty() && this.bridgeSlotR.isEmpty();
                                if (C.slot === this.bridgeSlotL || C.slot === this.bridgeSlotR)
                                    if (this.bridgeSlotL.isEmpty() && this.bridgeSlotR.isEmpty() && !this.pourOutCard.slot && this.pourInSlot.isEmpty()) {
                                        if (C.slot === this.bridgeSlotL)
                                            return this.electrodeSlotL.isEmpty() && this.bridgeSlotL.isEmpty();
                                        if (C.slot === this.bridgeSlotR)
                                            return this.electrodeSlotR.isEmpty() && this.bridgeSlotR.isEmpty()
                                    } else
                                        return !1;
                                return C.slot === this.pourInSlot ? !this.pourOutCard.slot : k(E(d.prototype), "canAddCard", this).call(this, C)
                            }
                        }, {
                            key: "canMoveWith",
                            value: function(C) {
                                var T = a.getBrotherEq(this.bridgeSlotL);
                                if (!T)
                                    return !0;
                                for (var A = 0, S = C.length, B; A < S; A++)
                                    if (B = C[A],
                                    B === T)
                                        return !1;
                                return !0
                            }
                        }, {
                            key: "getChemInfoItemPos",
                            value: function() {
                                var C = this.getEqPosByDirRatio(.88, 0);
                                return C.y += 10,
                                this.enableEleAni && this.showEleAni && this.edge.hasI() && (C.y += 112),
                                C
                            }
                        }, {
                            key: "getTransferEleCount",
                            value: function() {
                                return c.ElectroReactUtil.getTransferEleCount(this.edge)
                            }
                        }, {
                            key: "getElectrodeReaction",
                            value: function(C) {
                                if (!C.isEmpty()) {
                                    var T = n.getOwner(C.getCards()[0]);
                                    return T.getElectroHalfReaction()
                                }
                                return null
                            }
                        }, {
                            key: "getMouseLocalPosBySide",
                            value: function(C, T) {
                                var A = n.getOwner((C ? this.catheterSlotL : this.catheterSlotR).getCards()[0]);
                                return A ? this.toLocal(A.tube.mouse0.userData.globalP) : T
                            }
                        }, {
                            key: "getElectroReaction",
                            value: function() {
                                var C = this.getElectrodeReaction(this.electrodeSlotL)
                                  , T = this.getElectrodeReaction(this.electrodeSlotR)
                                  , A = this.halfReactionMerger.calculate(C, T);
                                return A ? [[A]] : [[]]
                            }
                        }, {
                            key: "hasGasIn",
                            value: function(C, T) {
                                if (T) {
                                    var A = T === this.electrodeSlotL ? this.catheterSlotL : this.catheterSlotR;
                                    if (A && !A.isEmpty()) {
                                        var S = n.getOwner(A.getCards()[0]);
                                        return S.hasGasIn(C, 0)
                                    }
                                }
                                return !1
                            }
                        }, {
                            key: "getWorldByElectrodeSlot",
                            value: function(C) {
                                return this.world
                            }
                        }, {
                            key: "hitTestLiquid",
                            value: function(C) {
                                return this.containerRenderer.hitTestLiquid(C)
                            }
                        }, {
                            key: "getLeftPole",
                            value: function() {
                                return n.getOwner(this.electrodeSlotL.getCards()[0]) || n.getOwner(this.bridgeSlotL.getCards()[0])
                            }
                        }, {
                            key: "getRightPole",
                            value: function() {
                                return n.getOwner(this.electrodeSlotR.getCards()[0]) || n.getOwner(this.bridgeSlotR.getCards()[0])
                            }
                        }, {
                            key: "getLiquidRect",
                            value: function() {
                                var C = this.containerRenderer.getLiquidRect();
                                return C[0] = f(C[0], -144),
                                C
                            }
                        }, {
                            key: "getMaxMolIonMed",
                            value: function(C) {
                                var T;
                                return this.world.forEachChemical(function(A) {
                                    (C && 0 < A.valence || !C && 0 > A.valence) && (T ? A.mol * p(A.valence) > T.mol * p(T.valence) && (T = A) : T = A)
                                }),
                                T
                            }
                        }, {
                            key: "getLiquidTopGlobalPos",
                            value: function() {
                                var C = this.getLiquidRect();
                                return this.toGlobal(new o(0,C[2]))
                            }
                        }, {
                            key: "getConfigureData",
                            value: function() {
                                var C = this
                                  , T = k(E(d.prototype), "getConfigureData", this).call(this)
                                  , A = T.confArr.findIndex(function(B) {
                                    return B.type === 5
                                })
                                  , S = s.getInputSwitch2("\u539F\u7406\u52A8\u753B", this.showEleAni, function(B) {
                                    C.showEleAni = B.checked
                                }, this);
                                return 0 <= A ? T.confArr.splice(A, 0, S) : T.confArr.push(S),
                                T.confArr.push(s.getButton("clear", "\u6E05\u7A7A", function() {
                                    C.reset()
                                }, this)),
                                T
                            }
                        }, {
                            key: "reset",
                            value: function() {
                                this.world.clear(),
                                this.containerRenderer.fillWithAir(),
                                this.edge.isBreak = !0
                            }
                        }, {
                            key: "tryMoveConnectedSaltBridge",
                            value: function(C, T) {
                                a.bridgeFollowBeaker(this.bridgeSlotL, C, T),
                                a.bridgeFollowBeaker(this.bridgeSlotR, C, T)
                            }
                        }, {
                            key: "checkLastConnectedCollision",
                            value: function(C) {
                                var T = a.getLastBridgeOrBeaker(C);
                                T && (T instanceof t ? n.checkCardCollision(T) : n.checkSlotCollision(T))
                            }
                        }, {
                            key: "electrodeReact",
                            value: function() {
                                if (this.edge.hasI()) {
                                    if (c.ElectroReactUtil.reactInCell(this.world, this.getElectrodeReaction(this.electrodeSlotR), this.Q),
                                    c.ElectroReactUtil.reactInCell(this.world, this.getElectrodeReaction(this.electrodeSlotL), this.Q),
                                    !this.bridgeSlotL.isEmpty()) {
                                        var C = n.getOwner(this.bridgeSlotL.getCards()[0])
                                          , T = 0 < this.edge.I ? C.getAnion() : C.getCation();
                                        this.world.addChemical(T)
                                    }
                                    if (!this.bridgeSlotR.isEmpty()) {
                                        var A = n.getOwner(this.bridgeSlotR.getCards()[0])
                                          , S = 0 > this.edge.I ? A.getAnion() : A.getCation();
                                        this.world.addChemical(S)
                                    }
                                }
                            }
                        }]),
                        d
                    }(l);
                    c.ElectroBeaker = r
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.round
                  , f = Math.min
                  , p = Math.max
                  , c = Math.abs;
                (function(l) {
                    var i = h.chemistry.AssembleGroup
                      , e = PIXI.Point
                      , t = PIXI.Container
                      , a = h.engines.electroChemistry.DPole
                      , n = h.engines.chemicalReaction.WorldUtil
                      , o = h.engines.chemicalReaction.PhaseUtil
                      , s = h.chemistry.CardSlotUtil
                      , r = h.plugins.ComponentProperty
                      , u = h.utils.Constant
                      , d = PIXI.Sprite
                      , y = PIXI.Graphics
                      , g = PIXI.RenderTexture
                      , C = h.particles.NbParticles
                      , T = h.particles.ParticleConst
                      , A = 10
                      , S = function(B) {
                        function b(I) {
                            var O;
                            return q(this, b),
                            O = P.call(this, I),
                            O.className = "Electrode",
                            O.equationStr = "",
                            O.showPolarity = !1,
                            O.totalPieces = 50,
                            O.pointNum = 50,
                            O.corrodedCount = 0,
                            O.adheringData = [],
                            O.graMap = new Map,
                            O.adheringCount = 0,
                            O.bubbleCount = 0,
                            O.filmMgOHCount = 0,
                            O.filmOffsetY = 1 / 0,
                            O
                        }
                        H(b, B);
                        var P = M(b);
                        return N(b, [{
                            key: "removed",
                            value: function() {
                                this.reactUtil.destroy(),
                                this.reactUtil = null,
                                this.card = null,
                                this.slot = null,
                                this.polarityCon.destroy(),
                                this.polarityCon = null,
                                this.pole.destroy(),
                                this.pole = null,
                                this.bubbleParticle && (this.bubbleParticle.destroy(),
                                this.bubbleParticle = null),
                                k(E(b.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(b.prototype), "init", this).call(this),
                                this.card = this.addCard("electrode", this, i.ELECTRODE, new e(0,45), null, null),
                                this.card.userData.vertex = this.edge.vertex1,
                                this.slot = this.addSlot("terminal", this.head, i.TERMINAL, new e(0,0), 1, null, new e(0,-1)),
                                this.slot.userData.vertex = this.edge.vertex0,
                                this.pole = new a(this.main.electroEngine,this.edge.vertex1,this),
                                this.initPolarity(),
                                this.initMetalMask(),
                                this.initAdhringTexture(),
                                this.initBubble(),
                                this.reactUtil = new l.ElectrodeReactUtil(this)
                            }
                        }, {
                            key: "initPolarity",
                            value: function() {
                                this.polarityCon = new t,
                                this.main.viewStack.assistLayer.addChild(this.polarityCon),
                                this.polarityCon.interactive = this.polarityCon.interactiveChildren = !1,
                                this.anodeSp = d.fromImage("Skin/anode.png"),
                                this.cathodeSp = d.fromImage("Skin/cathode.png"),
                                this.anodeSp.anchor.set(.5, 1),
                                this.cathodeSp.anchor.set(.5, 1),
                                this.polarityCon.addChild(this.anodeSp),
                                this.polarityCon.addChild(this.cathodeSp),
                                this.polarityCon.visible = !1
                            }
                        }, {
                            key: "update",
                            value: function(O) {
                                if (k(E(b.prototype), "update", this).call(this, O),
                                this.showPolarity && this.edge.hasI()) {
                                    this.polarityCon.visible = !0;
                                    var D = this.polarityCon.parent.toLocal(this.toGlobal(new e(0,-255)));
                                    this.polarityCon.x = D.x,
                                    this.polarityCon.y = D.y,
                                    0 > this.edge.I ? (this.anodeSp.visible = !0,
                                    this.cathodeSp.visible = !1) : (this.anodeSp.visible = !1,
                                    this.cathodeSp.visible = !0)
                                } else
                                    this.polarityCon.visible = !1;
                                this.renderBubble(),
                                this.electrodeReact(),
                                this.edge.hasI() || this.reactUtil.reactInContainer()
                            }
                        }, {
                            key: "getReactionElecNum",
                            value: function() {
                                var O = this.getElectroHalfReaction();
                                return O ? O.react.eNum : 0
                            }
                        }, {
                            key: "getChemInfoItemPos",
                            value: function() {
                                var O = this.getEqPosByDirRatio(.5, 1)
                                  , D = this.chemicalInfoGroup.width / 2;
                                if (O.x -= D,
                                O.y -= this.chemicalInfoGroup.height + 36,
                                this.card.slot) {
                                    var w = this.card.slot.userData.cardMaxOffX;
                                    if (w !== 0) {
                                        var R = D - c(w);
                                        0 < R && (0 < w ? O.x -= R : O.x += R)
                                    }
                                }
                                return O
                            }
                        }, {
                            key: "cardAddedToSlot",
                            value: function(O) {
                                k(E(b.prototype), "cardAddedToSlot", this).call(this, O);
                                var D = O.card.userData.vertex
                                  , w = O.slot.userData.vertex;
                                D.connect(w)
                            }
                        }, {
                            key: "cardFreed",
                            value: function(O) {
                                k(E(b.prototype), "cardFreed", this).call(this, O);
                                var D = O.card.userData.vertex;
                                D.disConnect()
                            }
                        }, {
                            key: "hasChemical",
                            value: function(O, D) {
                                if (this.card.slot) {
                                    var w = s.getOwner(this.card.slot);
                                    if (O.phaseType === "g")
                                        return w.hasGasIn(O.formula, this.card.slot);
                                    if (O.phaseType === "s") {
                                        if (O.formula === this.pole.formula) {
                                            var R = this.checkFilmed();
                                            if (R)
                                                return !1
                                        }
                                        return n.hasChemical(this.world, O)
                                    }
                                    return n.hasChemical(w.getWorldByElectrodeSlot(this.card.slot), O, 1e-9)
                                }
                                return !1
                            }
                        }, {
                            key: "getGasPartialPressure",
                            value: function(O) {
                                var D = this.getContainerWorld();
                                if (D) {
                                    var w = D.getPhaseByType("g")[0];
                                    if (w)
                                        return o.getGasPartialPressure(w, O.chemicalId) / u.ATM
                                }
                                return 0
                            }
                        }, {
                            key: "getPH",
                            value: function() {
                                var O = this.getContainerWorld();
                                if (O) {
                                    var D = n.getSolution(O, "H2O");
                                    if (D)
                                        return o.getPhasePH(D)
                                }
                                return 7
                            }
                        }, {
                            key: "getContainerWorld",
                            value: function() {
                                return this.card.slot ? this.card.slot.userData.world : null
                            }
                        }, {
                            key: "getConcentration",
                            value: function(O) {
                                if (this.card.slot) {
                                    var D = s.getOwner(this.card.slot)
                                      , w = n.getSolution(D.world, "H2O");
                                    if (w) {
                                        var R = o.getMolarConcentration0(w, O.formula, O.valence);
                                        return R
                                    }
                                }
                                return 0
                            }
                        }, {
                            key: "getElectroHalfReaction",
                            value: function() {
                                return this.edge && this.edge.hasI() ? 0 < this.edge.I ? this.pole.getReactionN() : this.pole.getReactionP() : null
                            }
                        }, {
                            key: "getEquations",
                            value: function() {
                                var O = []
                                  , D = this.getElectroHalfReaction();
                                if (D) {
                                    var w = D.react
                                      , R = w.equation.split("->");
                                    O.push({
                                        uid: w.uid,
                                        isIon: !0,
                                        isArrow: !0,
                                        reactant: R[0],
                                        product: R[1],
                                        condition: ""
                                    })
                                }
                                return [O]
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var O = k(E(b.prototype), "getData", this).call(this);
                                return O.showPolarity = this.showPolarity,
                                this.corrodedCount !== 0 && (O.corrodedCount = this.corrodedCount,
                                O.metalMaskLeftPos = this.metalMaskLeftPos,
                                O.metalMaskRightPos = this.metalMaskRightPos),
                                0 < this.adheringCount && (O.adheringCount = this.adheringCount,
                                O.adheringData = this.adheringData),
                                0 < this.filmMgOHCount && (O.filmMgOHCount = this.filmMgOHCount,
                                O.filmOffsetY = this.filmOffsetY),
                                O
                            }
                        }, {
                            key: "setData",
                            value: function(O) {
                                k(E(b.prototype), "setData", this).call(this, O),
                                this.showPolarity = !!O.showPolarity,
                                O.corrodedCount && (this.corrodedCount = O.corrodedCount,
                                this.metalMaskLeftPos = O.metalMaskLeftPos,
                                this.metalMaskRightPos = O.metalMaskRightPos,
                                this.drawMetalMask()),
                                O.adheringCount && !Array.isArray(O.adheringData[0]) && (this.adheringCount = O.adheringCount,
                                this.adheringData = O.adheringData,
                                this.initAdheringData()),
                                O.filmMgOHCount && (this.filmMgOHCount = O.filmMgOHCount,
                                this.filmOffsetY = O.filmOffsetY)
                            }
                        }, {
                            key: "getConfigureData",
                            value: function() {
                                var O = this
                                  , D = {
                                    confArr: []
                                };
                                return D.confArr.push(r.getInputSwitch("\u534A\u53CD\u5E94\u65B9\u7A0B\u5F0F", this.showEquation, function(w) {
                                    O.showEquation = w.checked
                                }, this)),
                                D.confArr.push(r.getInputSwitch("\u6B63\u8D1F\u6781", this.showPolarity, function(w) {
                                    O.showPolarity = w.checked
                                }, this)),
                                D.confArr.push(r.getButton("\u91CD\u7F6E", "\u91CD\u7F6E", function() {
                                    O.reset()
                                }, this)),
                                D
                            }
                        }, {
                            key: "needGasBubble",
                            value: function() {
                                var O = !(0 < arguments.length && arguments[0] !== void 0) || arguments[0];
                                this.bubbleParticle || this.initBubble(),
                                this.bubbleParticle.renderable || this.setBubbleRender(!0),
                                this.bubbleParticle.loaded && (this.bubbleParticle.particle.spawnRect.width = this.metal.width + 4,
                                this.bubbleParticle.particle.frequency = O ? .05 : .1),
                                this.bubbleCount = 10
                            }
                        }, {
                            key: "corrodingMetal",
                            value: function() {
                                if (this.corrodedCount++,
                                this.corrodedCount % 50 == 0) {
                                    var O = 250 < this.corrodedCount ? .001 : .1
                                      , D = this.getSlotLiquidTopLocalY()
                                      , w = m((D - this.metal.y + this.metal.height / 2) / this.metal.height * this.totalPieces);
                                    w = p(w, 0);
                                    for (var R = w, L; R <= this.pointNum; R++) {
                                        if (L = 20 * (O * Math.random()),
                                        !this.metalMaskLeftPos[R])
                                            throw "Error: metalMaskLeftPos[i] is null";
                                        this.metalMaskLeftPos[R].x + O + L < this.metalMaskRightPos[R].x - 2 ? this.metalMaskLeftPos[R].x += O + L : this.metalMaskLeftPos[R].x = this.metalMaskRightPos[R].x - 2,
                                        L = 20 * (O * Math.random()),
                                        this.metalMaskRightPos[R].x - O - L > this.metalMaskLeftPos[R].x + 2 ? this.metalMaskRightPos[R].x -= O + L : this.metalMaskRightPos[R].x = this.metalMaskLeftPos[R].x + 2
                                    }
                                    this.drawMetalMask()
                                }
                            }
                        }, {
                            key: "checkFilmed",
                            value: function() {
                                return 30 <= this.filmMgOHCount
                            }
                        }, {
                            key: "reset",
                            value: function() {
                                this.initMetalMask(),
                                this.resetAdhringSprite()
                            }
                        }, {
                            key: "addChimical",
                            value: function(O) {
                                var D = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 2e-5
                                  , w = this.main.reactionEngine.createChemicalData(O, 0, null, 1);
                                w.mol *= w.density * D / w.mass,
                                this.world.addChemical(w)
                            }
                        }, {
                            key: "electrodeReact",
                            value: function() {
                                if (this.edge.hasI()) {
                                    var O = this.getElectroHalfReaction();
                                    if (O) {
                                        var D = this.Q
                                          , w = O.react;
                                        if (u.getNbyQ(D, 1),
                                        0 < this.filmMgOHCount) {
                                            var R = p(this.getSlotLiquidTopLocalY() + this.metal.height / 2, 0);
                                            5 < this.filmOffsetY - R && (this.filmMgOHCount = 0,
                                            this.filmOffsetY = R)
                                        }
                                        for (var L = !1, G = 0, V; G < w.products.length; G++)
                                            V = w.products[G],
                                            V.phaseType === "s" && (this.adheringMetal(V.formula),
                                            L = !0),
                                            V.phaseType === "g" && this.needGasBubble();
                                        for (var W = 0, ie; W < w.reactants.length; W++)
                                            ie = w.reactants[W],
                                            ie.formula !== "e" && (ie.phaseType !== "s" || L || this.corrodingMetal())
                                    }
                                }
                            }
                        }, {
                            key: "initMetalMask",
                            value: function() {
                                this.metalMaskLeftPos = [],
                                this.metalMaskRightPos = [];
                                for (var O = 0; O <= this.totalPieces; O++)
                                    this.metalMaskLeftPos.push({
                                        x: this.metal.x - this.metal.width / 2,
                                        y: this.metal.y - this.metal.height / 2 + this.metal.height / this.totalPieces * O
                                    }),
                                    this.metalMaskRightPos.push({
                                        x: this.metal.x + this.metal.width / 2,
                                        y: this.metal.y - this.metal.height / 2 + this.metal.height / this.totalPieces * O
                                    });
                                this.corrodedCount = 0,
                                this.drawMetalMask(),
                                this.metal.mask = this.metalMask
                            }
                        }, {
                            key: "getSlotLiquidTopLocalY",
                            value: function() {
                                if (this.card.slot) {
                                    var O = s.getOwner(this.card.slot);
                                    return this.toLocal(O.getLiquidTopGlobalPos(this.card.slot.name)).y
                                }
                                return -Infinity
                            }
                        }, {
                            key: "drawMetalMask",
                            value: function() {
                                this.metalMask ? this.metalMask.clear() : (this.metalMask = new y,
                                this.metalMask.alpha = 0,
                                this.metalMask.renderable = !1,
                                this.addChild(this.metalMask)),
                                this.metalMask.beginFill(16777215, 0);
                                for (var O = 0, D; O <= this.pointNum; O++)
                                    D = this.metalMaskLeftPos[O],
                                    O == 0 ? this.metalMask.moveTo(D.x, D.y) : this.metalMask.lineTo(D.x, D.y);
                                for (var w = this.pointNum, R; 0 <= w; w--)
                                    R = this.metalMaskRightPos[w],
                                    this.metalMask.lineTo(R.x, R.y);
                                this.metalMask.closePath(),
                                this.metalMask.endFill()
                            }
                        }, {
                            key: "initAdhringTexture",
                            value: function() {
                                this.adhringTexture = g.create(this.metal.width, this.metal.height),
                                this.adhringSprite = new d(this.adhringTexture),
                                this.adhringSprite.anchor.set(.5),
                                this.graSilver = new y,
                                this.graSilver.beginFill(15066597, 1),
                                this.graSilver.drawCircle(0, 0, 2),
                                this.graSilver.endFill(),
                                this.graCopper = new y,
                                this.graCopper.beginFill(11166810, 1),
                                this.graCopper.drawCircle(0, 0, 2),
                                this.graCopper.endFill(),
                                this.metal.addChild(this.adhringSprite);
                                for (var O = 0; O < A; O++)
                                    this.adheringData.push({})
                            }
                        }, {
                            key: "getGraphicsByColor",
                            value: function(O) {
                                var D = this.graMap.get(O);
                                return D || (D = new y,
                                D.beginFill(O, 1),
                                D.drawCircle(0, 0, 2),
                                D.endFill(),
                                this.graMap.set(O, D)),
                                D
                            }
                        }, {
                            key: "initAdheringData",
                            value: function() {
                                for (var O = 0; O < this.adheringData.length; O++) {
                                    var D = this.adheringData[O]
                                      , w = this.metal.height / 9 * O;
                                    for (var R in D)
                                        if (D[R] && 0 < D[R])
                                            for (var L = 0; L < D[R]; L++) {
                                                var G = this.getAdheringPoint(w)
                                                  , V = this.getGraphicsByColor(+R);
                                                this.renderAdhringTexture(V, G)
                                            }
                                }
                            }
                        }, {
                            key: "renderAdhringTexture",
                            value: function(O, D) {
                                this.main.renderer.render(O, this.adhringTexture, !1),
                                O.x = D.x,
                                O.y = D.y
                            }
                        }, {
                            key: "resetAdhringSprite",
                            value: function() {
                                var O = g.create(this.metal.width, this.metal.height);
                                this.adhringSprite.texture = O,
                                this.adhringTexture.destroy(),
                                this.adhringTexture = O,
                                this.adheringCount = 0;
                                for (var D = 0; D < A; D++)
                                    this.adheringData[D] = {}
                            }
                        }, {
                            key: "adheringMetal",
                            value: function(O) {
                                if (this.adheringCount++,
                                !(3 > this.adheringCount)) {
                                    this.adheringCount = 1;
                                    var D;
                                    D = O === "Cu" ? 11166810 : O === "Cu(OH)2" ? 225477 : 15066597;
                                    var w = this.getGraphicsByColor(D)
                                      , R = p(this.getSlotLiquidTopLocalY() + this.metal.height / 2, 0)
                                      , L = m(R / this.metal.height * (A - 1));
                                    this.adheringData[L][D] = this.adheringData[L][D] ? f(1e3, this.adheringData[L][D] + 1) : 1;
                                    var G = this.getAdheringPoint(R);
                                    if (this.renderAdhringTexture(w, G),
                                    O === "Mg(OH)2" && 35 > this.filmMgOHCount) {
                                        this.filmMgOHCount++;
                                        for (var V = 0, W; 20 > V; V++)
                                            W = this.getAdheringPoint(R),
                                            this.renderAdhringTexture(w, W)
                                    }
                                }
                            }
                        }, {
                            key: "getAdheringPoint",
                            value: function(O) {
                                var D = this.metal.height - O;
                                return {
                                    x: Math.random() * this.metal.width,
                                    y: Math.random() * D + O
                                }
                            }
                        }, {
                            key: "initBubble",
                            value: function() {
                                var O = this.main.getCdnUrl();
                                this.bubbleParticle = new C(O,T.ELECTROD_BUBBLE),
                                this.bubbleParticle.renderable = !1,
                                this.bubbleParticle.visible = !1,
                                this.bubbleParticle.allowGetBounds = !1,
                                this.bubbleParticle.bind(this, this.metal.x - this.metal.width / 2, this.metal.y + this.metal.height / 2)
                            }
                        }, {
                            key: "renderBubble",
                            value: function() {
                                this.bubbleParticle && (0 < this.bubbleCount ? (this.bubbleParticle.render(),
                                this.bubbleCount--) : this.bubbleParticle.renderable && this.setBubbleRender(!1))
                            }
                        }, {
                            key: "setBubbleRender",
                            value: function(O) {
                                if (!O)
                                    this.bubbleParticle.renderable && (this.bubbleParticle.mask = null,
                                    this.bubbleParticle.parent && this.bubbleParticle.parent.removeChild(this.bubbleParticle));
                                else if (!this.bubbleParticle.renderable) {
                                    var D = s.getOwner(this.card.slot);
                                    D.noBubble || D.liquidAddChild(this.bubbleParticle, this.card.slot)
                                }
                                this.bubbleParticle.renderable = O,
                                this.bubbleParticle.visible = O
                            }
                        }]),
                        b
                    }(l.ElectricalEquipment);
                    l.Electrode = S
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.max
                  , p = Math.abs;
                (function(c) {
                    var l = h.chemistry.AssembleGroup
                      , i = PIXI.Point
                      , e = h.chemistry.CardSlotUtil
                      , t = h.plugins.ComponentProperty
                      , a = function(n) {
                        function o(r) {
                            var u;
                            return q(this, o),
                            u = s.call(this, r),
                            u.className = "Electrolyzer",
                            u.insertLength = 400,
                            u.showEleAni = !1,
                            u.enableAttrEleAni = !0,
                            u.eleAnimatManager = new c.EleAnimationManager(oe(u)),
                            u.cellWidth = 722,
                            u.membraneSlots = [],
                            u.getMaxQ = function() {
                                if (!u.edge.hasI())
                                    return 0;
                                var d = u.getElectrodeReaction(u.electrodeSlotR)
                                  , y = u.getElectrodeReaction(u.electrodeSlotL)
                                  , g = c.ElectroReactUtil.getMaxQ(d, u.firstCell.world)
                                  , C = c.ElectroReactUtil.getMaxQ(y, u.lastCell.world)
                                  , T = .5 * m(g, C);
                                return T
                            }
                            ,
                            u.world.enabled = !0,
                            u.edge.userData.getMaxQ = u.getMaxQ,
                            u.edge.isBreak = !0,
                            u
                        }
                        H(o, n);
                        var s = M(o);
                        return N(o, [{
                            key: "removed",
                            value: function() {
                                this.halfReactionMerger.destroy(),
                                this.halfReactionMerger = null,
                                this.membraneSlots.forEach(function(u) {
                                    e.removeOwner(u.getCards()[0])
                                }),
                                this.membraneSlots = null,
                                this.electrodeSlotR = null,
                                this.electrodeSlotL = null,
                                this.removeCover(),
                                this.coverSlot = null,
                                this.cellCalculator.destroy(),
                                this.cellCalculator = null,
                                this.eleAnimatManager.destory(),
                                k(E(o.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(o.prototype), "init", this).call(this),
                                this.coverSlot = this.addSlot("cellCover", this, l.CELL_COVER, new i(0,-240));
                                for (var u = 0, d; u < this.cellN - 1; u++)
                                    d = this.addSlot("membrane_" + u, this, l.MEMBRANE, new i(175 * (this.cellN - 2) - 350 * u,0)),
                                    this.membraneSlots.push(d);
                                this.electrodeSlotR = this.addSlot("electrodeR", this, l.ELECTRODE, new i(350 * this.cellN / 2 - 50,0), null, null, null),
                                this.electrodeSlotL = this.addSlot("electrodeL", this, l.ELECTRODE, new i(-350 * this.cellN / 2 + 50,0), null, null, null),
                                this.electrodeSlotR.userData.vertex = this.edge.vertex1,
                                this.electrodeSlotL.userData.vertex = this.edge.vertex0,
                                this.electrodeSlotR.userData.cardMaxOffX = 175 * -this.cellN + 10,
                                this.electrodeSlotL.userData.cardMaxOffX = 175 * this.cellN - 10,
                                this.electrodeSlotR.userData.world = this.firstCell.world,
                                this.electrodeSlotL.userData.world = this.lastCell.world,
                                this.electrodeSlotR.userData.minV = 321e-6,
                                this.electrodeSlotL.userData.minV = 321e-6,
                                this.cellCalculator = new c.CellCalculator(this.cells,this.membraneSlots),
                                this.halfReactionMerger = new c.HalfReactionMerger,
                                this.cells.forEach(function(g) {
                                    g.world.userData.ignoreGasSolubility = !0
                                }),
                                this.eleLableArr = [];
                                for (var y = 0; y < this.cells.length; y++)
                                    this.eleLableArr.push(["", ""])
                            }
                        }, {
                            key: "update",
                            value: function(u) {
                                k(E(o.prototype), "update", this).call(this, u),
                                this.electrodeReact(),
                                this.cellCalculator.Q = this.Q,
                                this.cellCalculator.U = this.U,
                                this.cellCalculator.calculate(),
                                this.eleAnimatManager.update(this.showEleAni && this.edge.hasI())
                            }
                        }, {
                            key: "pourInLiquid",
                            value: function(u, d) {
                                k(E(o.prototype), "pourInLiquid", this).call(this, u, d),
                                this.cellCalculator.calculate()
                            }
                        }, {
                            key: "isCovered",
                            get: function() {
                                return !this.coverSlot.isEmpty()
                            }
                        }, {
                            key: "addCellCover",
                            value: function(u) {
                                e.tryCardAddToSlot(u, this.coverSlot)
                            }
                        }, {
                            key: "slotAddedCard",
                            value: function(u) {
                                k(E(o.prototype), "slotAddedCard", this).call(this, u),
                                u.slot === this.coverSlot && (e.getOwner(u.card).width = this.cellWidth)
                            }
                        }, {
                            key: "hasGasIn",
                            value: function(u, d) {
                                if (d) {
                                    var y = d === this.electrodeSlotL ? this.lastCell.catheterSlotL : this.firstCell.catheterSlotR;
                                    if (y && !y.isEmpty()) {
                                        var g = e.getOwner(y.getCards()[0]);
                                        return g.hasGasIn(u, 0)
                                    }
                                }
                                return !1
                            }
                        }, {
                            key: "getWorldByElectrodeSlot",
                            value: function(u) {
                                return u === this.electrodeSlotR ? this.firstCell.world : u === this.electrodeSlotL ? this.lastCell.world : null
                            }
                        }, {
                            key: "getElectrodeReaction",
                            value: function(u) {
                                if (!u.isEmpty()) {
                                    var d = e.getOwner(u.getCards()[0]);
                                    return d.getElectroHalfReaction()
                                }
                                return null
                            }
                        }, {
                            key: "getElectroReaction",
                            value: function() {
                                var u = this.getElectrodeReaction(this.electrodeSlotL)
                                  , d = this.getElectrodeReaction(this.electrodeSlotR)
                                  , y = this.halfReactionMerger.calculate(u, d);
                                return y ? this.cells.map(function() {
                                    return [y]
                                }) : this.cells.map(function() {
                                    return []
                                })
                            }
                        }, {
                            key: "getMembraneByIndex",
                            value: function(u) {
                                var d = this.membraneSlots[u];
                                return e.getOwner(d.getCards()[0])
                            }
                        }, {
                            key: "containMembrane",
                            value: function() {
                                for (var u = 0; u < this.cellN - 1; u++)
                                    if (this.getMembraneByIndex(u))
                                        return !0;
                                return !1
                            }
                        }, {
                            key: "getCellsLen",
                            value: function() {
                                return this.cellN
                            }
                        }, {
                            key: "getMembraneXByValence",
                            value: function(u, d) {
                                return this.cellCalculator.getMembraneXByValence(u, d)
                            }
                        }, {
                            key: "getMembraneIndexByValence",
                            value: function(u, d) {
                                return this.cellCalculator.getCellGroupsLenByValence(u, d)[0]
                            }
                        }, {
                            key: "getLeftPole",
                            value: function() {
                                return e.getOwner(this.electrodeSlotL.getCards()[0])
                            }
                        }, {
                            key: "getRightPole",
                            value: function() {
                                return e.getOwner(this.electrodeSlotR.getCards()[0])
                            }
                        }, {
                            key: "getTransferEleCount",
                            value: function() {
                                return c.ElectroReactUtil.getTransferEleCount(this.edge)
                            }
                        }, {
                            key: "getMouseLocalPosBySide",
                            value: function(u, d) {
                                var y = e.getOwner((u ? this.lastCell.catheterSlotL : this.firstCell.catheterSlotR).getCards()[0]);
                                return y ? this.toLocal(y.tube.mouse0.userData.globalP) : d
                            }
                        }, {
                            key: "getLiquidRect",
                            value: function() {
                                var u = this.capacityVertex[0].x
                                  , d = this.capacityVertex[this.capacityVertex.length - 1].x
                                  , y = 210
                                  , g = f.apply(Math, re(this.cells.map(function(C) {
                                    return C.containerRenderer.liquidVertexsArr[0][0].y
                                })));
                                return [m(u, d), f(u, d), g, y]
                            }
                        }, {
                            key: "getMaxMolIonMed",
                            value: function(u) {
                                var d = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 0, y;
                                return this.cells[d].world.getPhaseByType("l")[0].chemicals.forEach(function(g) {
                                    0 < (u ? 1 : -1) * g.valence && (y ? g.mol * p(g.valence) > y.mol * p(y.valence) && (y = g) : y = g)
                                }),
                                y
                            }
                        }, {
                            key: "getLiquidTopGlobalPos",
                            value: function(u) {
                                var d = (u === "electrodeR" ? this.firstCell : this.lastCell).containerRenderer.liquidVertexsArr[0][0].y;
                                return this.toGlobal(new i(0,d))
                            }
                        }, {
                            key: "getWorldAry",
                            value: function() {
                                return this.cells && this.cells.length !== 0 ? this.cells.map(function(u) {
                                    return u.world
                                }) : []
                            }
                        }, {
                            key: "getConfigureData",
                            value: function() {
                                var u = this
                                  , d = k(E(o.prototype), "getConfigureData", this).call(this);
                                return d.confArr.push(t.getInputSwitch2("\u539F\u7406\u52A8\u753B", this.showEleAni, function(y) {
                                    u.showEleAni = y.checked
                                }, this)),
                                d.confArr.push(t.getInputSwitch2("\u76D6\u5B50", this.isCovered, function(y) {
                                    y.checked ? u.addNewCover() : u.removeCover()
                                }, this)),
                                d.confArr.push(t.getEleLabel(this.eleLableArr, function(y, g, C) {
                                    u.eleLableArr[y][g] = C;
                                    var T = u.cells[u.eleLableArr.length - 1 - y];
                                    T.updateLabelText(u.eleLableArr[y][0], u.eleLableArr[y][1])
                                })),
                                d.confArr.push(t.getButton("clear", "\u6E05\u7A7A", function() {
                                    u.reset()
                                }, this)),
                                d
                            }
                        }, {
                            key: "getWorldDataAry",
                            value: function() {
                                return this.cells && this.cells.length !== 0 ? this.cells.map(function(u) {
                                    return u.world.getData()
                                }) : []
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var u = k(E(o.prototype), "getData", this).call(this);
                                return u.chemicalDataAry = this.getWorldDataAry(),
                                u.labels = this.eleLableArr,
                                u
                            }
                        }, {
                            key: "setData",
                            value: function(u) {
                                k(E(o.prototype), "setData", this).call(this, u),
                                this.cells.map(function(d, y) {
                                    u.chemicalDataAry[y] && d.world.setData(u.chemicalDataAry[y])
                                }),
                                u.labels && (this.eleLableArr = u.labels,
                                this.updateCellLabel(this.eleLableArr))
                            }
                        }, {
                            key: "reset",
                            value: function() {
                                this.cells.forEach(function(u) {
                                    u.world.clear(),
                                    u.containerRenderer.fillWithAir()
                                }),
                                this.edge.isBreak = !0
                            }
                        }, {
                            key: "getPourInTipCells",
                            value: function(u) {
                                var d = this.getCellBySlot(u);
                                if (d) {
                                    for (var y = c.CellUtil.getCellGroups(this.cells, this.membraneSlots, 0), g = 0; g < y.length; g++)
                                        if (y[g].indexOf(d) !== -1)
                                            return y[g]
                                }
                                return k(E(o.prototype), "getPourInTipCells", this).call(this, u)
                            }
                        }, {
                            key: "electrodeReact",
                            value: function() {
                                this.edge.hasI() && (c.ElectroReactUtil.reactInCell(this.firstCell.world, this.getElectrodeReaction(this.electrodeSlotR), this.Q),
                                c.ElectroReactUtil.reactInCell(this.lastCell.world, this.getElectrodeReaction(this.electrodeSlotL), this.Q))
                            }
                        }, {
                            key: "updateCellLabel",
                            value: function(u) {
                                if (u)
                                    for (var d = u.length, y = 0, g, C; y < d; y++)
                                        g = u[y],
                                        C = this.cells[d - 1 - y],
                                        C.updateLabelText(g[0], g[1])
                            }
                        }, {
                            key: "removeCover",
                            value: function() {
                                if (this.isCovered) {
                                    var u = e.getOwner(this.coverSlot.getCards()[0]);
                                    this.main.removeEq(u)
                                }
                            }
                        }, {
                            key: "addNewCover",
                            value: function() {
                                var u = this;
                                this.isCovered || this.main.addEq("CellCover", null, function(d) {
                                    u.addCellCover(d.card)
                                })
                            }
                        }]),
                        o
                    }(c.MultiCellPressureContainer);
                    c.Electrolyzer = a
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.framework.BaseCombinationEquipment
                      , p = function(c) {
                        function l(e) {
                            var t;
                            return q(this, l),
                            t = i.call(this, e),
                            t.className = "ElectrolyzerCombEq",
                            t.cellN = 4,
                            t
                        }
                        H(l, c);
                        var i = M(l);
                        return N(l, [{
                            key: "create",
                            value: function(t) {
                                for (var a = this.getElectrolyzer(), n = this.main.getEqConfData("RubberPlug"), o = 0, s; o < this.cellN; o++)
                                    s = this.main.addEqSync("RubberPlug", this.p, n),
                                    a.addPlug(o, s.card);
                                return a
                            }
                        }, {
                            key: "getElectrolyzer",
                            value: function() {
                                var t = this.main.getEqConfData("FourCellElectrolyzer");
                                return this.main.addEqSync("FourCellElectrolyzer", this.p, t)
                            }
                        }]),
                        l
                    }(f);
                    m.ElectrolyzerCombEq = p
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.floor;
                (function(f) {
                    var p = PIXI.Sprite
                      , c = PIXI.particles.ParticleContainer
                      , l = h.utils.NBPointUtils
                      , i = function(e) {
                        function t(n) {
                            var o;
                            return q(this, t),
                            o = a.call(this),
                            o.isStartLoop = !0,
                            o.dotLen = 50,
                            o.firstDis = 0,
                            o._speed = 0,
                            o.isEleAni = 1,
                            o._skin = null,
                            o.dotArr = [],
                            o.allowGetBounds = !1,
                            o.sprites = new c(1e4,{
                                scale: !1,
                                position: !0,
                                rotation: !0,
                                uvs: !1,
                                alpha: !1
                            }),
                            o.addChild(o.sprites),
                            o.sprites.visible = !1,
                            o.main = n,
                            o
                        }
                        H(t, e);
                        var a = M(t);
                        return N(t, [{
                            key: "setSkin",
                            value: function(o) {
                                var s = !(1 < arguments.length && arguments[1] !== void 0) || arguments[1];
                                this._skin !== o && (this.removeAllDot(),
                                this._skin = o,
                                this.isEleAni = s ? -1 : 1,
                                this.setPoints(this._points))
                            }
                        }, {
                            key: "getPoints",
                            value: function() {
                                return this._points
                            }
                        }, {
                            key: "setPoints",
                            value: function(o) {
                                if (this.firstDis = 0,
                                !!this.sprites && (this.removeAllDot(),
                                this._points = o,
                                this.isStartLoop && this._skin && this._points && this._speed && o && o.length)) {
                                    for (var s = 0, r = 1; r < o.length; r++) {
                                        var u = o[r - 1]
                                          , d = o[r]
                                          , y = l.distance(u, d);
                                        s += y
                                    }
                                    for (var g = m(s / this.dotLen), C = 0, T; C < g; C++)
                                        T = this.createDot(),
                                        this.sprites.addChild(T),
                                        this.dotArr.push(T);
                                    this.freshDotLocation()
                                }
                            }
                        }, {
                            key: "freshDotLocation",
                            value: function() {
                                if (this.isStartLoop && this._skin && this._points && this._speed && this._points && this._points.length) {
                                    var o = 0
                                      , s = 0
                                      , r = 0
                                      , u = this._points[r]
                                      , d = this._points[r + 1];
                                    s += l.distance(u, d);
                                    for (var y = 0; y < this.dotArr.length; y++) {
                                        for (var g = this.dotArr[y], C = this.firstDis + y * this.dotLen; s <= C && r + 1 !== this._points.length; )
                                            r++,
                                            o = s,
                                            u = d,
                                            d = this._points[r + 1],
                                            d && (s += l.distance(u, d));
                                        var T = C - o;
                                        if (d) {
                                            var A = l.getXianDianByDis(T, !0, u, d);
                                            g && A && g.transform && (g.x = A.x,
                                            g.y = A.y);
                                            var S = l.getAngleP(d, u);
                                            S = 0 < this._speed ? S - 90 : S + 90;
                                            var B = l.toHu(S);
                                            g && g.transform && (g.rotation = B)
                                        }
                                    }
                                }
                            }
                        }, {
                            key: "removed",
                            value: function() {
                                this.removeAllDot()
                            }
                        }, {
                            key: "removeAllDot",
                            value: function() {
                                for (; 0 < this.dotArr.length; ) {
                                    var o = this.dotArr.pop()
                                      , s = this.main.aniMemoryMap.get("wire_" + this._skin);
                                    s || (s = [],
                                    this.main.aniMemoryMap.set("wire_" + this._skin, s)),
                                    s.push(o),
                                    this.sprites.removeChild(o)
                                }
                                this.dotArr.length = 0
                            }
                        }, {
                            key: "createDot",
                            value: function() {
                                var o = this.main.aniMemoryMap.get("wire_" + this._skin), s;
                                return o && 0 < o.length && (s = o.pop()),
                                s || (s = PIXI.Sprite.fromImage(this._skin),
                                0 > this.isEleAni && (s.scale.x = s.scale.y = .064),
                                s.anchor.set(.5)),
                                s
                            }
                        }, {
                            key: "setSpeed",
                            value: function(o) {
                                this._speed = o === 0 ? 0 : 0 < o ? 1 : -1
                            }
                        }, {
                            key: "getSpeed",
                            value: function() {
                                return this._speed * this.isEleAni
                            }
                        }, {
                            key: "fresh",
                            value: function() {
                                this.setPoints(this._points)
                            }
                        }, {
                            key: "loop",
                            value: function() {
                                return this.isactive ? this.isStartLoop && this._skin && this._points && this._speed ? (!this.sprites.visible && (this.sprites.visible = !0),
                                this.firstDis -= this.getSpeed(),
                                this.firstDis > this.dotLen ? this.firstDis -= this.dotLen : 0 > this.firstDis && (this.firstDis += this.dotLen),
                                void this.freshDotLocation()) : void (this.sprites.visible && (this.removeAllDot(),
                                this.sprites.visible = !1)) : void 0
                            }
                        }, {
                            key: "setActive",
                            value: function(o) {
                                this.isactive = o
                            }
                        }, {
                            key: "destroy",
                            value: function() {
                                this.sprites && (this.sprites.destroy(),
                                this.sprites = null)
                            }
                        }]),
                        t
                    }(p);
                    f.PCDot = i
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.chemistry.ChemicalModuleConfig
                      , p = function(c) {
                        function l() {
                            var e;
                            return q(this, l),
                            e = i.call(this),
                            e.showElectrons = !0,
                            e
                        }
                        H(l, c);
                        var i = M(l);
                        return N(l, [{
                            key: "getData",
                            value: function() {
                                var t = k(E(l.prototype), "getData", this).call(this);
                                return t.showElectrons = this.showElectrons,
                                t
                            }
                        }, {
                            key: "setData",
                            value: function(t) {
                                k(E(l.prototype), "setData", this).call(this, t),
                                this.showElectrons = !!t.showElectrons
                            }
                        }]),
                        l
                    }(f);
                    m.ElectroChemistryModuleConfig = p
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        f[f.Default = 0] = "Default",
                        f[f.Added = 1] = "Added"
                    }
                    )(m.PriorityType || (m.PriorityType = {})),
                    m.PRIORITY_MAP = {
                        Galvanometer: {
                            default: 5,
                            added: 5
                        },
                        GasCollectingBottle: {
                            default: 15,
                            added: 15
                        },
                        BigTestTube: {
                            default: 15,
                            added: 15
                        },
                        HugeBeaker: {
                            default: 15,
                            added: 15
                        },
                        NarrowMouthBottle: {
                            default: 15,
                            added: 15
                        },
                        GasBag: {
                            default: 15,
                            added: 15
                        },
                        DropperBottle: {
                            default: 15,
                            added: 15
                        },
                        DropperBottleBrown: {
                            default: 15,
                            added: 15
                        },
                        GlassSheet: {
                            default: 17,
                            added: 17
                        },
                        Dish: {
                            default: 15,
                            added: 15
                        },
                        NailWithZn: {
                            default: 15,
                            added: 15
                        },
                        Nail: {
                            default: 15,
                            added: 15
                        },
                        NailWithCu: {
                            default: 15,
                            added: 15
                        },
                        FlexibleGlassCatheter: {
                            default: 19,
                            added: 19
                        },
                        StraightGlassCatheter: {
                            default: 19,
                            added: 19
                        },
                        ElectrodeZn: {
                            default: 19,
                            added: 19
                        },
                        Electrode: {
                            default: 19,
                            added: 19
                        },
                        ElectrodeAg: {
                            default: 19,
                            added: 19
                        },
                        ElectrodeAl: {
                            default: 19,
                            added: 19
                        },
                        ElectrodeMg: {
                            default: 19,
                            added: 19
                        },
                        ElectrodeC: {
                            default: 19,
                            added: 19
                        },
                        ElectrodeFe: {
                            default: 19,
                            added: 19
                        },
                        ElectrodeCrudeCu: {
                            default: 19,
                            added: 19
                        },
                        ElectrodePb: {
                            default: 19,
                            added: 19
                        },
                        ElectrodePt: {
                            default: 19,
                            added: 19
                        },
                        ElectrodePbO2: {
                            default: 19,
                            added: 19
                        },
                        ElectrodeCu: {
                            default: 19,
                            added: 19
                        },
                        RedWire: {
                            default: 21,
                            added: 21
                        },
                        Wire: {
                            default: 21,
                            added: 21
                        },
                        BlackWire: {
                            default: 21,
                            added: 21
                        },
                        RubberCatheter: {
                            default: 21,
                            added: 21
                        },
                        SaltBridge: {
                            default: 13,
                            added: 13
                        },
                        ADropper: {
                            default: 15,
                            added: 16
                        },
                        TestPaperBookPH: {
                            default: 23,
                            added: 23
                        },
                        TestPaperBookRed: {
                            default: 23,
                            added: 23
                        },
                        TestPaperBookBlue: {
                            default: 23,
                            added: 23
                        },
                        TestPaperBookKI: {
                            default: 23,
                            added: 23
                        },
                        TestPaperBookPt: {
                            default: 23,
                            added: 23
                        },
                        RubberPlug: {
                            default: 25,
                            added: 25
                        },
                        NarrowGlassPlug: {
                            default: 25,
                            added: 25
                        },
                        TestPaperPH: {
                            default: 25,
                            added: 25
                        },
                        TestPaperRed: {
                            default: 25,
                            added: 25
                        },
                        TestPaperBlue: {
                            default: 25,
                            added: 25
                        },
                        TestPaperKI: {
                            default: 25,
                            added: 25
                        },
                        TestPaperPt: {
                            default: 25,
                            added: 25
                        },
                        AcidDropper: {
                            default: 15,
                            added: 15
                        },
                        AcidBrownDropper: {
                            default: 15,
                            added: 15
                        },
                        AnionExchangeMembrane: {
                            default: 17,
                            added: 17
                        },
                        CationExchangeMembrane: {
                            default: 17,
                            added: 17
                        },
                        CellCover: {
                            default: 17,
                            added: 17
                        },
                        FourCellElectrolyzer: {
                            default: 15,
                            added: 15
                        },
                        ThreeCellElectrolyzer: {
                            default: 15,
                            added: 15
                        },
                        TwoCellElectrolyzer: {
                            default: 15,
                            added: 15
                        },
                        Battery: {
                            default: 15,
                            added: 15
                        },
                        Bulb: {
                            default: 15,
                            added: 15
                        },
                        SingleSwitch: {
                            default: 15,
                            added: 15
                        },
                        Catheter90: {
                            default: 17,
                            added: 17
                        },
                        FilterPaper: {
                            default: 15,
                            added: 15
                        },
                        Apple: {
                            default: 15,
                            added: 15
                        },
                        Led: {
                            default: 15,
                            added: 15
                        },
                        Motor: {
                            default: 15,
                            added: 15
                        }
                    }
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    (function(f) {
                        f[f.Default = 0] = "Default",
                        f[f.Added = 1] = "Added"
                    }
                    )(m.ZIndexType || (m.ZIndexType = {})),
                    m.ZINDEX_MAP = {
                        Galvanometer: {
                            default: 5,
                            added: 5
                        },
                        GasCollectingBottle: {
                            default: 15,
                            added: 17
                        },
                        BigTestTube: {
                            default: 15,
                            added: 15
                        },
                        HugeBeaker: {
                            default: 15,
                            added: 17
                        },
                        NarrowMouthBottle: {
                            default: 15,
                            added: 17
                        },
                        GasBag: {
                            default: 15,
                            added: 15
                        },
                        DropperBottle: {
                            default: 15,
                            added: 17
                        },
                        DropperBottleBrown: {
                            default: 15,
                            added: 17
                        },
                        GlassSheet: {
                            default: 17,
                            added: 17
                        },
                        Dish: {
                            default: 15,
                            added: 15
                        },
                        NailWithZn: {
                            default: 16,
                            added: 16
                        },
                        Nail: {
                            default: 16,
                            added: 16
                        },
                        NailWithCu: {
                            default: 16,
                            added: 16
                        },
                        FlexibleGlassCatheter: {
                            default: 19,
                            added: 13
                        },
                        StraightGlassCatheter: {
                            default: 19,
                            added: 13
                        },
                        ElectrodeZn: {
                            default: 19,
                            added: 13
                        },
                        Electrode: {
                            default: 19,
                            added: 13
                        },
                        ElectrodeAg: {
                            default: 19,
                            added: 13
                        },
                        ElectrodeAl: {
                            default: 19,
                            added: 13
                        },
                        ElectrodeMg: {
                            default: 19,
                            added: 13
                        },
                        ElectrodeC: {
                            default: 19,
                            added: 13
                        },
                        ElectrodeFe: {
                            default: 19,
                            added: 13
                        },
                        ElectrodeCrudeCu: {
                            default: 19,
                            added: 13
                        },
                        ElectrodePb: {
                            default: 19,
                            added: 13
                        },
                        ElectrodePt: {
                            default: 19,
                            added: 13
                        },
                        ElectrodePbO2: {
                            default: 19,
                            added: 13
                        },
                        ElectrodeCu: {
                            default: 19,
                            added: 13
                        },
                        RedWire: {
                            default: 21,
                            added: 21
                        },
                        Wire: {
                            default: 21,
                            added: 21
                        },
                        BlackWire: {
                            default: 21,
                            added: 21
                        },
                        RubberCatheter: {
                            default: 21,
                            added: 21
                        },
                        SaltBridge: {
                            default: 13,
                            added: 13
                        },
                        ADropper: {
                            default: 23,
                            added: 16
                        },
                        TestPaperBookPH: {
                            default: 23,
                            added: 23
                        },
                        TestPaperBookRed: {
                            default: 23,
                            added: 23
                        },
                        TestPaperBookBlue: {
                            default: 23,
                            added: 23
                        },
                        TestPaperBookKI: {
                            default: 23,
                            added: 23
                        },
                        TestPaperBookPt: {
                            default: 23,
                            added: 23
                        },
                        RubberPlug: {
                            default: 25,
                            added: 14
                        },
                        NarrowGlassPlug: {
                            default: 25,
                            added: 14
                        },
                        TestPaperPH: {
                            default: 25,
                            added: 11
                        },
                        TestPaperRed: {
                            default: 25,
                            added: 11
                        },
                        TestPaperBlue: {
                            default: 25,
                            added: 11
                        },
                        TestPaperKI: {
                            default: 25,
                            added: 11
                        },
                        TestPaperPt: {
                            default: 25,
                            added: 11
                        },
                        AcidDropper: {
                            default: 25,
                            added: 13
                        },
                        AcidBrownDropper: {
                            default: 25,
                            added: 13
                        },
                        AnionExchangeMembrane: {
                            default: 17,
                            added: 13
                        },
                        CationExchangeMembrane: {
                            default: 17,
                            added: 13
                        },
                        CellCover: {
                            default: 17,
                            added: 14
                        },
                        FourCellElectrolyzer: {
                            default: 15,
                            added: 15
                        },
                        ThreeCellElectrolyzer: {
                            default: 15,
                            added: 15
                        },
                        TwoCellElectrolyzer: {
                            default: 15,
                            added: 15
                        },
                        Battery: {
                            default: 15,
                            added: 15
                        },
                        Bulb: {
                            default: 15,
                            added: 15
                        },
                        SingleSwitch: {
                            default: 15,
                            added: 15
                        },
                        Catheter90: {
                            default: 17,
                            added: 13
                        },
                        FilterPaper: {
                            default: 10,
                            added: 10
                        },
                        Apple: {
                            default: 15,
                            added: 12
                        },
                        Led: {
                            default: 15,
                            added: 15
                        },
                        Motor: {
                            default: 15,
                            added: 15
                        }
                    }
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = N(function p() {
                        q(this, p)
                    });
                    f.NONE = 0,
                    f.LEFT = 1,
                    f.RIGHT = 2,
                    f.ALL = 3,
                    m.CapCoverState = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = N(function p() {
                        q(this, p)
                    });
                    f.NONE = 0,
                    f.UNIVERSAL_PH_INDICATOR = 1,
                    f.RED_LITMUS = 2,
                    f.BLUE_LITMUS = 3,
                    f.PHENOLPHTHALEIN = 4,
                    f.KI = 5,
                    m.TestPaperType = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.PI;
                (function(f) {
                    var p = h.framework.BaseCombinationEquipment
                      , c = function(l) {
                        function i(t) {
                            var a;
                            return q(this, i),
                            a = e.call(this, t),
                            a.className = "Catheter90",
                            console.log("90\u5EA6\u73BB\u7483\u5BFC\u7BA1"),
                            a
                        }
                        H(i, l);
                        var e = M(i);
                        return N(i, [{
                            key: "create",
                            value: function(a) {
                                var n = this.main.getEqConfData("FlexibleGlassCatheter")
                                  , o = {
                                    x: this.p.x - 400,
                                    y: this.p.y
                                }
                                  , s = this.main.addEqSync("FlexibleGlassCatheter", o, n);
                                s.setCatherRotation(m / 2);
                                var r = {
                                    x: this.p.x + 400,
                                    y: this.p.y
                                }
                                  , u = this.main.addEqSync("FlexibleGlassCatheter", r, n);
                                u.setCatherRotation(-m / 2);
                                var d = this.main.getEqConfData("RubberCatheter")
                                  , y = this.main.addEqSync("RubberCatheter", this.p, d);
                                return this.addRubber(s, y, 1),
                                this.addRubber(u, y, 2),
                                s
                            }
                        }, {
                            key: "addRubber",
                            value: function(a, n, o) {
                                var s = {
                                    slot: a.slot1,
                                    card: o === 1 ? n.rope.terminal0.card : n.rope.terminal1.card
                                };
                                a.canAddTo(s) && (s.slot.addCard(s.card),
                                n.cardAddedToSlot(s))
                            }
                        }]),
                        i
                    }(p);
                    f.Catheter90 = c
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "Dish",
                            e.tweenObj = {
                                scale: 0
                            },
                            e.playType = 0,
                            e.tongEquations = [{
                                uid: 999980,
                                isIon: !0,
                                isArrow: !0,
                                reactant: "Fe-2e\u207B",
                                product: "Fe\xB2\u207A",
                                condition: ""
                            }, {
                                uid: 999982,
                                isIon: !0,
                                isArrow: !0,
                                reactant: "O\u2082+H\u2082O+4e\u207B",
                                product: "4OH\u207B",
                                condition: ""
                            }, {
                                uid: 999981,
                                isIon: !0,
                                isArrow: !0,
                                reactant: "3Fe\xB2\u207A+2[Fe(CN)\u2086]\xB3\u207B",
                                product: "Fe\u2083[Fe(CN)\u2086]\u2082\u2193",
                                condition: ""
                            }],
                            e.xinEquations = [{
                                uid: 999990,
                                isIon: !0,
                                isArrow: !0,
                                reactant: "Zn-2e\u207B",
                                product: "Zn\xB2\u207A",
                                condition: ""
                            }, {
                                uid: 999991,
                                isIon: !0,
                                isArrow: !0,
                                reactant: "O\u2082+H\u2082O+4e\u207B",
                                product: "4OH\u207B",
                                condition: ""
                            }],
                            e.addSlot("dish", oe(e), m.AssembleGroup.DISH),
                            e.canAddDrop = !1,
                            e.attrMode = m.EqAttrMode.NONE,
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this),
                                this.tongGraCon.visible = this.xinGraCon.visible = !1
                            }
                        }, {
                            key: "removed",
                            value: function() {
                                k(E(c.prototype), "removed", this).call(this),
                                this.scaleTween && (this.scaleTween.kill(this.tweenObj),
                                this.scaleTween = null)
                            }
                        }, {
                            key: "slotAddedCard",
                            value: function(e) {
                                console.log("slotAddedCard");
                                var t = m.CardSlotUtil.getOwner(e.card);
                                t.interactive = !1,
                                this.playEffect(t.ironType, this.tweenObj.scale)
                            }
                        }, {
                            key: "playEffect",
                            value: function(e) {
                                var t = this
                                  , a = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 0;
                                this.isPlaying = !0,
                                this.playType = e;
                                var n = e === 1
                                  , o = n ? this.tongGraCon : this.xinGraCon;
                                this.tongGraCon.visible = n,
                                this.xinGraCon.visible = !n,
                                o.left.scale.set(a, a),
                                n && o.mid.scale.set(a, a),
                                o.right.scale.set(a, a),
                                this.tweenObj.scale = a,
                                this.scaleTween && (this.scaleTween.kill(this.tweenObj),
                                this.scaleTween = null),
                                this.scaleTween = TweenMax.to(this.tweenObj, 30, {
                                    scale: 1,
                                    onUpdate: function() {
                                        o.left.scale.set(t.tweenObj.scale, t.tweenObj.scale),
                                        n && o.mid.scale.set(t.tweenObj.scale, t.tweenObj.scale),
                                        o.right.scale.set(t.tweenObj.scale, t.tweenObj.scale)
                                    }
                                })
                            }
                        }, {
                            key: "getEquations",
                            value: function() {
                                var e;
                                if (this.isPlaying) {
                                    var t = this.playType === 1
                                      , a = t ? this.tongEquations : this.xinEquations;
                                    e = [a]
                                } else
                                    e = [[]];
                                return e
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var e = k(E(c.prototype), "getData", this).call(this);
                                return e.per = this.tweenObj.scale,
                                e
                            }
                        }, {
                            key: "setData",
                            value: function(e) {
                                k(E(c.prototype), "setData", this).call(this, e),
                                this.tweenObj.scale = e.per
                            }
                        }]),
                        c
                    }(m.ChemicalEquipment);
                    m.Dish = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "Equation",
                            e.enableAttrPascal = !1,
                            e.enableAttrTemp = !1,
                            e.enableAttrMass = !1,
                            e.enableAttrVolume = !1,
                            e.enableAttrMol = !1,
                            e.enableAttrConc = !1,
                            e.enableAttrEquation = !1,
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this)
                            }
                        }, {
                            key: "initEquationsDisplay",
                            value: function(e) {
                                this.equationInfo = e,
                                this.equationDisplay = new m.EquationsDisplay(e,this.main.globalConfig.equTypeIsArrow,!0,this.main),
                                this.addChild(this.equationDisplay),
                                this.equationDisplay.x = -this.equationDisplay.width / 2,
                                this.equationDisplay.y = -this.equationDisplay.height / 2,
                                this.updateSelectReact()
                            }
                        }, {
                            key: "update",
                            value: function(e) {
                                if (k(E(c.prototype), "update", this).call(this, e),
                                this.equationDisplay) {
                                    var t = this.main.globalConfig;
                                    this.equationDisplay.setStyleColor(t.bgColorIsLight),
                                    this.equationDisplay.changeCentextType(t.bgColorIsLight)
                                }
                                var a = this.main.getScale();
                                this.scale.set(1.5 / a)
                            }
                        }, {
                            key: "getMenuPos",
                            value: function() {
                                var e = this.getBounds();
                                return {
                                    x: e.right + 10,
                                    y: e.y - 10
                                }
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var e = k(E(c.prototype), "getData", this).call(this);
                                return e.equationInfo = this.equationInfo,
                                e
                            }
                        }, {
                            key: "setData",
                            value: function(e) {
                                k(E(c.prototype), "setData", this).call(this, e),
                                this.initEquationsDisplay(e.equationInfo)
                            }
                        }]),
                        c
                    }(m.ChemicalEquipment);
                    m.Equation = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.PI
                  , f = Math.sin
                  , p = Math.cos;
                (function(c) {
                    var l = PIXI.Point
                      , i = h.components.ArcRotateButton
                      , e = h.components.NBComConst
                      , t = function(a) {
                        function n(s) {
                            var r;
                            return q(this, n),
                            r = o.call(this, s),
                            r.className = "FlexibleGlassCatheter",
                            r.curveAngle = m / 3,
                            r.r = 200,
                            r.ang0 = -m - m / 6,
                            r.ang1 = 0 + m / 6,
                            r.curveR = 20,
                            r
                        }
                        H(n, a);
                        var o = M(n);
                        return N(n, [{
                            key: "init",
                            value: function() {
                                k(E(n.prototype), "init", this).call(this),
                                this.setCatherRotation(-m / 4)
                            }
                        }, {
                            key: "removed",
                            value: function() {
                                this.rotateBtn.removed(),
                                this.rotateBtn = null,
                                k(E(n.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "update",
                            value: function(r) {
                                k(E(n.prototype), "update", this).call(this, r),
                                this.rotateBtn.setIconScale(.6 / this.main.getScale()),
                                this.rotateBtn.visible = this.isSelect
                            }
                        }, {
                            key: "setCatherRotation",
                            value: function(r) {
                                var u = r - m / 2;
                                this.setRotAngle(u),
                                this.rotateBtn.setPercent(this.angToPer(u))
                            }
                        }, {
                            key: "initBtns",
                            value: function() {
                                k(E(n.prototype), "initBtns", this).call(this),
                                this.rotateBtn = new i(e.BUTTON_ROTATE_NAME,{
                                    btnStartDrag: this.rotateBtnStart.bind(this),
                                    btnDragMove: this.rotateBtnMoved.bind(this),
                                    btnStopDrag: this.rotateBtnEnd.bind(this)
                                },50,this.r + 10,this.ang0,this.ang1,this),
                                this.rotateBtn.visible = !1,
                                this.rotateBtn.setDotVisible(!1),
                                this.main.viewStack.assistLayer.addChild(this.rotateBtn),
                                this.rotateBtn.setPercent(.5),
                                this.setRotPer(.5)
                            }
                        }, {
                            key: "initRopePoint",
                            value: function() {
                                k(E(n.prototype), "initRopePoint", this).call(this);
                                for (var r = 0; 20 > r; r++)
                                    this.ropePointAry.push(new l(0,0));
                                this.ropePointAry.push(new l(0,0)),
                                this.ropePointAry[1].y = this.curveR
                            }
                        }, {
                            key: "updateBtnPos",
                            value: function() {
                                k(E(n.prototype), "updateBtnPos", this).call(this),
                                this.rotateBtn.x = this.x,
                                this.rotateBtn.y = this.y
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var r = k(E(n.prototype), "getData", this).call(this);
                                return r.angle = this.perToAng(this.rotateBtn.getPercent()),
                                r
                            }
                        }, {
                            key: "setData",
                            value: function(r) {
                                k(E(n.prototype), "setData", this).call(this, r);
                                var u = this.angToPer(r.angle);
                                this.rotateBtn.setPercent(u),
                                this.setRotPer(u)
                            }
                        }, {
                            key: "flipHorizontal",
                            value: function(r) {
                                k(E(n.prototype), "flipHorizontal", this).call(this, r);
                                var u = 1 - this.rotateBtn.getPercent();
                                this.setRotPer(u),
                                this.rotateBtn.setPercent(u)
                            }
                        }, {
                            key: "getMenuPos",
                            value: function() {
                                if (!this.isSelect)
                                    return k(E(n.prototype), "getMenuPos", this).call(this);
                                var r = this.getBounds()
                                  , u = this.rotateBtn.getBounds();
                                return r.enlarge(u),
                                {
                                    x: r.right,
                                    y: r.y
                                }
                            }
                        }, {
                            key: "rotateBtnStart",
                            value: function(r) {
                                this.rotateBtn.setDotVisible(!0),
                                this.main.hideSettingPanel()
                            }
                        }, {
                            key: "rotateBtnMoved",
                            value: function(r) {
                                this.setRotPer(r)
                            }
                        }, {
                            key: "rotateBtnEnd",
                            value: function(r) {
                                this.rotateBtn.setDotVisible(!1),
                                this.main.showSettingPanel(this)
                            }
                        }, {
                            key: "setRotPer",
                            value: function(r) {
                                this.setRotAngle(this.perToAng(r))
                            }
                        }, {
                            key: "angToPer",
                            value: function(r) {
                                return (r - this.ang0) / (this.ang1 - this.ang0)
                            }
                        }, {
                            key: "perToAng",
                            value: function(r) {
                                return r * (this.ang1 - this.ang0) + this.ang0
                            }
                        }, {
                            key: "setRotAngle",
                            value: function(r) {
                                var u = this.ropePointAry[this.ropePointAry.length - 1];
                                u.x = this.r * p(r),
                                u.y = this.r * f(r),
                                this.updateCurveGlass(r),
                                this.updateSlotPosition(),
                                this.updateSelectReact()
                            }
                        }, {
                            key: "updateCurveGlass",
                            value: function(r) {
                                var u = Math.tan;
                                r = this.formatAngle(r + m / 2),
                                r === 0 && (r = 1e-10);
                                for (var d = r / 20, y = this.curveR / u(r / 2), g = 0, C = 0, T; 20 > C; C++)
                                    g += d,
                                    T = this.ropePointAry[2 + C],
                                    T.x = y - y * p(g),
                                    T.y = this.curveR - y * f(g)
                            }
                        }, {
                            key: "formatAngle",
                            value: function(r) {
                                return r %= 2 * m,
                                r > m && (r -= 2 * m),
                                r
                            }
                        }]),
                        n
                    }(c.StraightGlassCatheter);
                    c.FlexibleGlassCatheter = t
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "GlassSheet",
                            e.addCard("glassSheet", oe(e), m.AssembleGroup.GLASS_SHEET),
                            e.canAddDrop = !0,
                            e.attrMode = m.EqAttrMode.NONE,
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "getDropVertex",
                            value: function() {
                                return [{
                                    x: -this.width / 2,
                                    y: 0
                                }, {
                                    x: this.width / 2,
                                    y: 0
                                }]
                            }
                        }]),
                        c
                    }(m.ChemicalEquipment);
                    m.GlassSheet = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "Nail",
                            e.ironType = 0,
                            e.addCard("dish", oe(e), m.AssembleGroup.DISH),
                            e.attrMode = m.EqAttrMode.NONE,
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "initData",
                            value: function(e) {
                                k(E(c.prototype), "initData", this).call(this, e),
                                e && e.initData && this.setIronType(parseInt(e.initData.ironType, 10) ? 1 : 0)
                            }
                        }, {
                            key: "setIronType",
                            value: function(e) {
                                this.ironType = e,
                                e === 1 ? (this.tong.visible = !0,
                                this.xin.visible = !1) : (this.tong.visible = !1,
                                this.xin.visible = !0)
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var e = k(E(c.prototype), "getData", this).call(this);
                                return e.ironType = this.ironType,
                                e
                            }
                        }, {
                            key: "setData",
                            value: function(e) {
                                k(E(c.prototype), "setData", this).call(this, e),
                                this.setIronType(e.ironType)
                            }
                        }]),
                        c
                    }(m.ChemicalEquipment);
                    m.Nail = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "NarrowGlassPlug",
                            e.sounds = [m.SoundConst.ADDGLASSSTOPPER, m.SoundConst.EXTRACTGLASSSTOPPER],
                            console.log("\u7EC6\u53E3\u74F6\u7684\u78E8\u7802\u73BB\u7483\u585E"),
                            e.group = m.AssembleGroup.NARROW_GLASS_PLUG,
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this),
                                this.card.userData.soundOn = m.SoundConst.ADDGLASSSTOPPER,
                                this.card.userData.soundOff = m.SoundConst.EXTRACTGLASSSTOPPER
                            }
                        }, {
                            key: "setAttrByMode",
                            value: function() {
                                this.attrMode === m.EqAttrMode.SAMPLE_AQ && (this.enableInvert = !0)
                            }
                        }]),
                        c
                    }(m.Plug);
                    m.NarrowGlassPlug = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = PIXI.Point
                      , p = function(c) {
                        function l(e) {
                            var t;
                            return q(this, l),
                            t = i.call(this, e),
                            t.className = "RubberCatheter",
                            t.terminalTextureId = "Skin/rubberHead.png",
                            t.ropeTextureId = "Skin/rubber.png",
                            t.terminalAnchor = {
                                x: 1,
                                y: 12
                            },
                            t.terminalGroup = m.AssembleGroup.RUBBER_CATHETER,
                            t.pointNum = 100,
                            t.cardP0 = new f(0,0),
                            t.textureTrim = !0,
                            console.log("\u6A61\u80F6\u7BA1"),
                            t.curLength = .001,
                            t.attrMode = m.EqAttrMode.NONE,
                            t
                        }
                        H(l, c);
                        var i = M(l);
                        return N(l, [{
                            key: "card0",
                            get: function() {
                                return this.rope.terminal0.card
                            }
                        }, {
                            key: "card1",
                            get: function() {
                                return this.rope.terminal1.card
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(l.prototype), "init", this).call(this),
                                this.card0.userData.mouse = this.tube.mouse0,
                                this.card1.userData.mouse = this.tube.mouse1,
                                this.card0.userData.autoFree = !1,
                                this.card1.userData.autoFree = !1
                            }
                        }, {
                            key: "update",
                            value: function(t) {
                                k(E(l.prototype), "update", this).call(this, t),
                                this.rope.update(t),
                                this.isSelect && this.updateSelectReact()
                            }
                        }, {
                            key: "removed",
                            value: function() {
                                this.rope.removed(),
                                this.rope = null,
                                k(E(l.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "initSkin",
                            value: function() {
                                k(E(l.prototype), "initSkin", this).call(this),
                                this.rope = new m.TwoTerminalRope(this,this),
                                this.addChild(this.rope)
                            }
                        }, {
                            key: "moveBy",
                            value: function(t, a) {
                                k(E(l.prototype), "moveBy", this).call(this, t, a),
                                this.tryMoveConnectedTubes(t, a)
                            }
                        }, {
                            key: "canMoveWith",
                            value: function(t) {
                                var a = m.PressureUtil.getEqByMouse(this.tube.mouse0.friend)
                                  , n = m.PressureUtil.getEqByMouse(this.tube.mouse1.friend);
                                a && a.className !== "GasBag" && (a = null),
                                n && n.className !== "GasBag" && (n = null);
                                for (var o = 0, s = t.length, r; o < s; o++)
                                    if (r = t[o],
                                    r === a || r === n)
                                        return !1;
                                return !0
                            }
                        }, {
                            key: "canAddTo",
                            value: function(t) {
                                if (this.rope.canAddTo(t)) {
                                    var a = this.getMouseBySlot(t.slot);
                                    return !a.parent
                                }
                                return !1
                            }
                        }, {
                            key: "cardAddedToSlot",
                            value: function(t) {
                                k(E(l.prototype), "cardAddedToSlot", this).call(this, t),
                                this.rope.cardAddToSlot(t);
                                var a = this.getMouseBySlot(t.slot)
                                  , n = this.getMouseBySlot(t.card);
                                a.connect(n)
                            }
                        }, {
                            key: "cardFreed",
                            value: function(t) {
                                var a = this.getMouseBySlot(t.slot);
                                a.disConnect(),
                                k(E(l.prototype), "cardFreed", this).call(this, t)
                            }
                        }, {
                            key: "hitPoint",
                            value: function(t) {
                                return this.rope.rope.containsPoint(t)
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var t = k(E(l.prototype), "getData", this).call(this);
                                return this.rope.getData(t),
                                t
                            }
                        }, {
                            key: "setData",
                            value: function(t) {
                                k(E(l.prototype), "setData", this).call(this, t),
                                this.rope.setData(t)
                            }
                        }, {
                            key: "flipHorizontal",
                            value: function(t) {
                                this.rope.terminal0.x = 2 * t.x - this.rope.terminal0.x,
                                this.rope.terminal1.x = 2 * t.x - this.rope.terminal1.x
                            }
                        }, {
                            key: "getMouseP0",
                            value: function() {
                                return this.getTerminalP(this.rope.terminal0)
                            }
                        }, {
                            key: "getMouseP1",
                            value: function() {
                                return this.getTerminalP(this.rope.terminal1)
                            }
                        }, {
                            key: "getTerminalP",
                            value: function(t) {
                                return new f(this.x + this.rope.x + t.x + 36 * t.dir.x,this.x + this.rope.y + t.y + 36 * t.dir.y)
                            }
                        }, {
                            key: "getMouseDir0",
                            value: function() {
                                return this.rope.terminal0.dir
                            }
                        }, {
                            key: "getMouseDir1",
                            value: function() {
                                return this.rope.terminal1.dir
                            }
                        }, {
                            key: "tryMoveConnectedTubes",
                            value: function(t, a) {
                                m.TubeUtil.tubeFollowRubber(this.tube.mouse0, t, a),
                                m.TubeUtil.tubeFollowRubber(this.tube.mouse1, t, a),
                                this.x -= 2 * t,
                                this.y -= 2 * a
                            }
                        }]),
                        l
                    }(m.Catheter);
                    m.RubberCatheter = p
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "TestPaperBlue",
                            e._skinColor = 12632277,
                            e.paperType = m.TestPaperType.BLUE_LITMUS,
                            console.log("\u84DD\u8272\u77F3\u854A\u8BD5\u7EB8"),
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c)
                    }(m.TestPaper);
                    m.TestPaperBlue = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "TestPaperBookBlue",
                            console.log("\u84DD\u8272\u77F3\u854A\u8BD5\u7EB8(\u672C)"),
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c)
                    }(m.TestPaperBook);
                    m.TestPaperBookBlue = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "TestPaperBookKI",
                            console.log("\u7898\u5316\u94BE\u8BD5\u7EB8(\u672C)"),
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c)
                    }(m.TestPaperBook);
                    m.TestPaperBookKI = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "TestPaperBookPH",
                            console.log("PH\u8BD5\u7EB8(\u672C)"),
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c)
                    }(m.TestPaperBook);
                    m.TestPaperBookPH = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "TestPaperBookPt",
                            console.log("\u915A\u915E\u8BD5\u7EB8(\u672C)"),
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c)
                    }(m.TestPaperBook);
                    m.TestPaperBookPt = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "TestPaperBookRed",
                            console.log("\u7EA2\u8272\u77F3\u854A\u8BD5\u7EB8(\u672C)"),
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c)
                    }(m.TestPaperBook);
                    m.TestPaperBookRed = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "TestPaperKI",
                            e._skinColor = 16777215,
                            e.COLOR_DISABLE = 16777215,
                            e.blueColor = 1915797,
                            e.paperType = m.TestPaperType.KI,
                            console.log("\u7898\u5316\u94BE\u8BD5\u7EB8"),
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "initData",
                            value: function(e) {
                                k(E(c.prototype), "initData", this).call(this, e);
                                var t = this.main.reactionEngine.createChemicalData("KI", 0, null, .001);
                                this.world.addChemical(t)
                            }
                        }, {
                            key: "updateColorByPhaseIfEnable",
                            value: function(e) {
                                var t = this
                                  , a = e.getChemicalByFormula("I2", 0);
                                a ? this.changeToBlue(function() {
                                    t.processSpChemEffect(e)
                                }) : this.processCorrode(e, function() {
                                    t.changeToBlue(t.corrodeColor.bind(t), e)
                                })
                            }
                        }, {
                            key: "changeToBlue",
                            value: function() {
                                var e = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : null
                                  , t = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : null;
                                this.disabled = !0,
                                this.tweenColor(this.blueColor, 2, function() {
                                    e && e(t)
                                })
                            }
                        }]),
                        c
                    }(m.TestPaper);
                    m.TestPaperKI = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "TestPaperPH",
                            e._skinColor = 14726956,
                            e.paperType = m.TestPaperType.UNIVERSAL_PH_INDICATOR,
                            console.log("pH\u8BD5\u7EB8"),
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c)
                    }(m.TestPaper);
                    m.TestPaperPH = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "TestPaperPt",
                            e._skinColor = 16777215,
                            e.paperType = m.TestPaperType.PHENOLPHTHALEIN,
                            console.log("\u915A\u915E\u8BD5\u7EB8"),
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c)
                    }(m.TestPaper);
                    m.TestPaperPt = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "TestPaperRed",
                            e._skinColor = 16636125,
                            e.paperType = m.TestPaperType.RED_LITMUS,
                            console.log("\u7EA2\u8272\u77F3\u854A\u8BD5\u7EB8"),
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c)
                    }(m.TestPaper);
                    m.TestPaperRed = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.framework.BaseCombinationEquipment
                      , p = function(c) {
                        function l(e) {
                            var t;
                            return q(this, l),
                            t = i.call(this, e),
                            t.className = "BottleWithDropper",
                            t
                        }
                        H(l, c);
                        var i = M(l);
                        return N(l, [{
                            key: "create",
                            value: function(t) {
                                var a = this.main.getEqConfData("DropperBottle")
                                  , n = this.main.addEqSync("DropperBottle", this.p, a);
                                n.attrMode = m.EqAttrMode.SAMPLE_AQ,
                                n.setAttrByMode(),
                                n.initSampleByData(t);
                                var o = this.main.getEqConfData("AcidDropper")
                                  , s = this.main.addEqSync("AcidDropper", this.p, o);
                                return n.addDropper(s.card),
                                this.isSpecialUse(t) && (n.dropperSlot.targetID = s.card.UID,
                                s.card.targetID = n.dropperSlot.UID),
                                n
                            }
                        }, {
                            key: "isSpecialUse",
                            value: function(t) {
                                return !0
                            }
                        }]),
                        l
                    }(f);
                    m.BottleWithDropper = p
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.framework.BaseCombinationEquipment
                      , p = function(c) {
                        function l(e) {
                            var t;
                            return q(this, l),
                            t = i.call(this, e),
                            t.className = "BrownBottleWithDropper",
                            t
                        }
                        H(l, c);
                        var i = M(l);
                        return N(l, [{
                            key: "create",
                            value: function(t) {
                                var a = this.main.getEqConfData("DropperBottleBrown")
                                  , n = this.main.addEqSync("DropperBottleBrown", this.p, a);
                                n.attrMode = m.EqAttrMode.SAMPLE_AQ,
                                n.setAttrByMode(),
                                n.initSampleByData(t);
                                var o = this.main.getEqConfData("AcidBrownDropper")
                                  , s = this.main.addEqSync("AcidBrownDropper", this.p, o);
                                return n.addDropper(s.card),
                                this.isSpecialUse(t) && (n.dropperSlot.targetID = s.card.UID,
                                s.card.targetID = n.dropperSlot.UID),
                                n
                            }
                        }, {
                            key: "isSpecialUse",
                            value: function(t) {
                                return !0
                            }
                        }]),
                        l
                    }(f);
                    m.BrownBottleWithDropper = p
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.framework.BaseCombinationEquipment
                      , p = function(c) {
                        function l(e) {
                            var t;
                            return q(this, l),
                            t = i.call(this, e),
                            t.className = "FrostedLiquidBottle",
                            t
                        }
                        H(l, c);
                        var i = M(l);
                        return N(l, [{
                            key: "create",
                            value: function(t) {
                                var a = this.main.getEqConfData("NarrowMouthBottle")
                                  , n = this.main.addEqSync("NarrowMouthBottle", this.p, a);
                                n.attrMode = m.EqAttrMode.SAMPLE_AQ,
                                n.setBottleHeadType("NarrowGlassPlug"),
                                n.setAttrByMode(),
                                n.initSampleByData(t);
                                var o = this.main.getEqConfData("NarrowGlassPlug")
                                  , s = this.main.addEqSync("NarrowGlassPlug", this.p, o);
                                return s.attrMode = m.EqAttrMode.SAMPLE_AQ,
                                s.setAttrByMode(),
                                s.bindBottle(n),
                                n.addPlug(s.card),
                                this.isSpecialUse(t) && (n.plugSlot.targetID = s.card.UID,
                                s.card.targetID = n.plugSlot.UID),
                                n
                            }
                        }, {
                            key: "isSpecialUse",
                            value: function(t) {
                                return !0
                            }
                        }]),
                        l
                    }(f);
                    m.FrostedLiquidBottle = p
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.PI;
                (function(f) {
                    var p = h.framework.BaseCombinationEquipment
                      , c = function(l) {
                        function i(t) {
                            var a;
                            return q(this, i),
                            a = e.call(this, t),
                            a.className = "GasBagWithRubber",
                            a
                        }
                        H(i, l);
                        var e = M(i);
                        return N(i, [{
                            key: "create",
                            value: function(a) {
                                var n = this.main.addEqSync("GasBag", this.p, a)
                                  , o = {
                                    x: this.p.x + 370,
                                    y: this.p.y + 12
                                }
                                  , s = this.main.getEqConfData("RubberCatheter")
                                  , r = this.main.addEqSync("RubberCatheter", o, s);
                                n.addRubber(r.card0);
                                var u = {
                                    x: this.p.x + 670,
                                    y: this.p.y + 12
                                }
                                  , d = this.main.getEqConfData("FlexibleGlassCatheter")
                                  , y = this.main.addEqSync("FlexibleGlassCatheter", u, d);
                                return y.setCatherRotation(-m / 2),
                                f.CardSlotUtil.tryCardAddToSlot(r.card1, y.slot1),
                                n
                            }
                        }]),
                        i
                    }(p);
                    f.GasBagWithRubber = c
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.framework.BaseCombinationEquipment
                      , p = function(c) {
                        function l(e) {
                            var t;
                            return q(this, l),
                            t = i.call(this, e),
                            t.className = "LiquidBottle",
                            t
                        }
                        H(l, c);
                        var i = M(l);
                        return N(l, [{
                            key: "create",
                            value: function(t) {
                                var a = this.main.getEqConfData("NarrowMouthBottle")
                                  , n = this.main.addEqSync("NarrowMouthBottle", this.p, a);
                                n.attrMode = m.EqAttrMode.SAMPLE_AQ,
                                n.setBottleHeadType("RubberPlug"),
                                n.setAttrByMode(),
                                n.initSampleByData(t);
                                var o = this.main.getEqConfData("RubberPlug")
                                  , s = this.main.addEqSync("RubberPlug", this.p, o);
                                return s.attrMode = m.EqAttrMode.SAMPLE_AQ,
                                s.setAttrByMode(),
                                s.bindBottle(n),
                                n.addPlug(s.card),
                                this.isSpecialUse(t) && (n.plugSlot.targetID = s.card.UID,
                                s.card.targetID = n.plugSlot.UID),
                                n
                            }
                        }, {
                            key: "isSpecialUse",
                            value: function(t) {
                                return !0
                            }
                        }]),
                        l
                    }(f);
                    m.LiquidBottle = p
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p(c, l, i, e, t) {
                            q(this, p),
                            this.life = 1,
                            this.manager = c,
                            this.phase = l,
                            this.position = i.clone(),
                            this.vp = e,
                            this.size = t,
                            this.lastP = i.clone(),
                            this.lastMol = this.phase.mol
                        }
                        return N(p, [{
                            key: "update",
                            value: function(l) {
                                this.life--,
                                this.lastP.x = this.position.x,
                                this.lastP.y = this.position.y,
                                this.lastMol = this.phase.mol;
                                var i = this.vp.x * l
                                  , e = this.vp.y * l;
                                this.position.x += i,
                                this.position.y += e,
                                this.phase.mol *= .1,
                                this.vp.x *= .1,
                                this.vp.y *= .1
                            }
                        }, {
                            key: "getMolByPer",
                            value: function(l) {
                                return this.lastMol - (this.lastMol - this.phase.mol) * l
                            }
                        }, {
                            key: "tryRemove",
                            value: function() {
                                return !!(0 >= this.life || this.isEmpty() || this.isNotMove()) && (this.phase.destroy(),
                                this.phase = null,
                                this.manager = null,
                                !0)
                            }
                        }, {
                            key: "getLastP",
                            value: function() {
                                return this.manager.toGlobal(this.lastP)
                            }
                        }, {
                            key: "getCurP",
                            value: function() {
                                return this.manager.toGlobal(this.position)
                            }
                        }, {
                            key: "isNotMove",
                            value: function() {
                                return 1 > this.vp.x * this.vp.x + this.vp.y * this.vp.y
                            }
                        }, {
                            key: "isEmpty",
                            value: function() {
                                return 1e-6 > this.phase.mol
                            }
                        }]),
                        p
                    }();
                    m.GasDrop = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = PIXI.Graphics
                      , p = function() {
                        function c(l) {
                            q(this, c),
                            this.dropList = [],
                            this.main = l,
                            this.gra = new f,
                            this.main.viewStack.addChild(this.gra)
                        }
                        return N(c, [{
                            key: "destroy",
                            value: function() {
                                this.main = null,
                                this.dropList = null
                            }
                        }, {
                            key: "update",
                            value: function(i) {
                                for (var e = this.dropList.length - 1, t; 0 <= e; e--)
                                    t = this.dropList[e],
                                    t.update(i),
                                    this.checkCollision(t),
                                    t.tryRemove() && this.dropList.splice(e, 1)
                            }
                        }, {
                            key: "addDrop",
                            value: function(i, e, t) {
                                var a = this.main.viewStack.toLocal(e)
                                  , n = new m.GasDrop(this,i,a,t,20);
                                this.dropList.push(n)
                            }
                        }, {
                            key: "toGlobal",
                            value: function(i) {
                                return this.main.viewStack.toGlobal(i)
                            }
                        }, {
                            key: "checkCollision",
                            value: function(i) {
                                var e;
                                return this.main.forEachEq(function(t) {
                                    var a = t.checkCollisionGasDrop(i);
                                    a && (!e || a.t < e.t) && (e = a)
                                }),
                                !!(e && e.type !== 0) && (e.eq.addGasDrop(i, e),
                                !0)
                            }
                        }, {
                            key: "refresh",
                            value: function() {
                                this.gra.clear(),
                                this.gra.lineStyle(1, 16711680),
                                this.gra.beginFill(65280, 0);
                                for (var i = this.dropList.length - 1, e; 0 <= i; i--)
                                    e = this.dropList[i],
                                    e.update(.016),
                                    this.gra.drawCircle(e.position.x, e.position.y, e.size);
                                this.gra.endFill()
                            }
                        }]),
                        c
                    }();
                    m.GasDropManager = p
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.max;
                (function(f) {
                    var p = PIXI.Container
                      , c = function() {
                        function l(i) {
                            q(this, l),
                            this.main = i,
                            this.dropCon = new p,
                            this.main.viewStack.particleLayer.addChild(this.dropCon)
                        }
                        return N(l, [{
                            key: "destroy",
                            value: function() {
                                this.main = null,
                                this.dropCon.parent && this.dropCon.parent.removeChild(this.dropCon),
                                this.dropCon = null
                            }
                        }, {
                            key: "update",
                            value: function(e) {
                                for (var t = this.getMaxY(), a = this.dropCon.children.length - 1, n; 0 <= a; a--)
                                    n = this.dropCon.children[a],
                                    n.update(e),
                                    (this.checkCollision(n) || n.y > t) && n.removed()
                            }
                        }, {
                            key: "addDrop",
                            value: function(e, t) {
                                var a = new f.LiquidDrop(this,e);
                                this.dropCon.addChild(a);
                                var n = this.dropCon.toLocal(t);
                                a.x = n.x,
                                a.y = n.y + a.height / 2
                            }
                        }, {
                            key: "checkCollision",
                            value: function(e) {
                                var t;
                                return this.main.forEachEq(function(a) {
                                    var n = a.checkCollisionDrop(e);
                                    (!t || n.t < t.t) && (t = n)
                                }),
                                !!(t && !t.ignore && 1 >= t.t) && (t.eq.addDrop(e, t),
                                !0)
                            }
                        }, {
                            key: "getMaxY",
                            value: function() {
                                var e = -Infinity;
                                this.main.forEachEq(function(a) {
                                    a.y > e && (e = a.y)
                                });
                                var t = (this.main.renderer.screen.height - this.main.stage.y - this.main.viewStack.y) / this.main.getScale();
                                return m(e, t)
                            }
                        }]),
                        l
                    }();
                    f.LiquidDropManager = c
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.atan2
                  , f = Math.PI
                  , p = Math.abs
                  , c = Math.sin
                  , l = Math.cos;
                (function(i) {
                    var e = PIXI.Container
                      , t = PIXI.Sprite
                      , a = PIXI.Point
                      , n = h.pixiExtras.NBDragUtil
                      , o = function(s) {
                        function r(d, y, g, C) {
                            var T;
                            q(this, r),
                            T = u.call(this),
                            T.dir = new a(0,1),
                            T.targetRot = 0;
                            var A = new e;
                            T.addChild(A);
                            var S = t.fromFrame(d);
                            return A.addChild(S),
                            S.x = -y,
                            S.y = -g,
                            C === -1 ? (T.targetRot = T.rotation = f,
                            A.scale.y = -1) : T.targetRot = T.rotation = 0,
                            T.dir.x = l(T.rotation),
                            T.dir.y = c(T.rotation),
                            T.interactive = !0,
                            T.dragId = n.addDrag(oe(T), null, oe(T)),
                            T
                        }
                        H(r, s);
                        var u = M(r);
                        return N(r, [{
                            key: "update",
                            value: function(y) {
                                if (this.updateRotationByCard(),
                                this.card.priority = 2,
                                this.rotation !== this.targetRot) {
                                    var g = this.targetRot - this.rotation;
                                    p(g) > f && (g = 0 < g ? 2 * f - g : 2 * f + g),
                                    .01 > p(g) ? this.rotation = this.targetRot : this.rotation += .2 * g,
                                    this.dir.x = l(this.rotation),
                                    this.dir.y = c(this.rotation)
                                }
                            }
                        }, {
                            key: "removed",
                            value: function() {
                                n.removeDrag(this.dragId),
                                this.card = null,
                                this.callBack = null
                            }
                        }, {
                            key: "setRotation",
                            value: function(y) {
                                var g = 1 < arguments.length && arguments[1] !== void 0 && arguments[1];
                                this.targetRot = y,
                                g && (this.rotation = y)
                            }
                        }, {
                            key: "updateRotationByCard",
                            value: function() {
                                if (this.card && this.card.slot) {
                                    var y = this.card.slot.assembleData.p1
                                      , g = m(-y.y, -y.x);
                                    this.setRotation(g)
                                }
                            }
                        }, {
                            key: "dragStart",
                            value: function(y, g) {
                                this.callBack && this.callBack(r.TYPE_DRAG_START, this),
                                this.isOnDragMove = !1
                            }
                        }, {
                            key: "dragMove",
                            value: function(y, g, C) {
                                g === 0 && C === 0 || (this.callBack && this.callBack(r.TYPE_DRAG_MOVE, this),
                                this.targetRot = m(C, g),
                                this.isOnDragMove = !0)
                            }
                        }, {
                            key: "dragEnd",
                            value: function(y) {
                                this.callBack && this.callBack(r.TYPE_DRAG_END, this),
                                this.isOnDragMove = !1
                            }
                        }]),
                        r
                    }(e);
                    o.TYPE_DRAG_START = "dragStart",
                    o.TYPE_DRAG_MOVE = "dragMove",
                    o.TYPE_DRAG_END = "dragEnd",
                    i.Terminal = o
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = PIXI.Point
                      , p = function(c) {
                        function l(e) {
                            var t;
                            return q(this, l),
                            t = i.call(this, e),
                            t.className = "AcidBrownDropper",
                            t.mouseP = new f(0,90),
                            t.cardPos = new f(0,40),
                            t
                        }
                        H(l, c);
                        var i = M(l);
                        return N(l)
                    }(m.ADropper);
                    m.AcidBrownDropper = p
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = PIXI.Point
                      , p = function(c) {
                        function l(e) {
                            var t;
                            return q(this, l),
                            t = i.call(this, e),
                            t.className = "AcidDropper",
                            t.mouseP = new f(0,90),
                            t.cardPos = new f(0,30),
                            t
                        }
                        H(l, c);
                        var i = M(l);
                        return N(l)
                    }(m.ADropper);
                    m.AcidDropper = p
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "BigTestTube",
                            e.insertLength = 520,
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c)
                    }(m.TestTube);
                    m.BigTestTube = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "DropperBottleBrown",
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c)
                    }(m.DropperBottle);
                    m.DropperBottleBrown = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.round
                  , f = Math.PI;
                (function(p) {
                    var c = h.engines.assemble.AssembleShape
                      , l = PIXI.Point
                      , i = h.components.HorizontalLineButton
                      , e = h.engines.pressure.PContainer
                      , t = h.utils.Constant
                      , a = h.components.NBComConst
                      , n = h.plugins.ComponentProperty
                      , o = h.utils.NBChemStrConvert
                      , s = h.pixiExtras.NBTouchUtil
                      , r = h.utils.NBMath
                      , u = function(d) {
                        function y(C) {
                            var T;
                            return q(this, y),
                            T = g.call(this, C),
                            T.className = "GasBag",
                            T.isPressureContainer = !0,
                            T.isTube = !0,
                            T.showLabel = !0,
                            T.flipped = !1,
                            T.switchTouchStart = function(A, S) {}
                            ,
                            T.switchTouchMove = function(A, S, B) {
                                var b = S / 100
                                  , P = r.limitAB(T.getPercent() + b, 0, 1);
                                T.setPercent(P)
                            }
                            ,
                            T.switchTouchEnd = function(A) {}
                            ,
                            T.showPascal = !1,
                            T.showTemp = !1,
                            T.showMass = !1,
                            T.showVolume = !1,
                            T.showMol = !1,
                            T.showConc = !1,
                            T
                        }
                        H(y, d);
                        var g = M(y);
                        return N(y, [{
                            key: "removed",
                            value: function() {
                                s.removeTouch(this.touchId),
                                this.tube.destroy(),
                                this.tube = null,
                                this.pContainer.destroy(),
                                this.pContainer = null,
                                this.switchBtn.removed(),
                                this.switchBtn = null,
                                this.label.removed(),
                                this.label = null,
                                k(E(y.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(y.prototype), "init", this).call(this),
                                this.rubberSlot = this.addSlot("rubber", c.getCircle(30, this, 250, 10), p.AssembleGroup.RUBBER_CATHETER, new l(0,0), 1, null, new l(1,0)),
                                this.initLabel(),
                                this.switchBtn = new i(a.BUTTON_ADJUST_NAME,{
                                    btnStartDrag: this.switchBtnMoveStart.bind(this),
                                    btnDragMove: this.switchBtnMoved.bind(this),
                                    btnStopDrag: this.switchBtnMoveEnd.bind(this)
                                },-60,150,this),
                                this.switchBtn.updateArrowRot(f / 2),
                                this.switchBtn.visible = !1,
                                this.main.viewStack.assistLayer.addChild(this.switchBtn),
                                this.updateSwitchBtnPos(),
                                this.setPercent(0),
                                this.switchBtn.setDotVisible(!0),
                                this.touchId = s.addTouch(this.switchMc, {
                                    touchStart: this.switchTouchStart,
                                    touchMove: this.switchTouchMove,
                                    touchEnd: this.switchTouchEnd
                                }),
                                this.addCursor(this.switchMc, h.CursorType.EwResize),
                                this.pContainer = new e(this.main.pressureEngine,{
                                    eq: this
                                }),
                                this.tube = new p.TubeComp(this,.001),
                                this.pContainer.addMouse(this.tube.mouse0),
                                this.rubberSlot.userData.mouse = this.tube.mouse1,
                                this.switchBtn.interactive = !0,
                                this.addCursor(this.switchBtn, h.CursorType.EwResize)
                            }
                        }, {
                            key: "initData",
                            value: function(T) {
                                k(E(y.prototype), "initData", this).call(this, T),
                                T.initData && (this.initGasPhaseData(T.initData.chemical),
                                this.label.labelText = o.convertFormula(T.initData.label))
                            }
                        }, {
                            key: "initGasPhaseData",
                            value: function(T) {
                                this.gasType = T;
                                var A = this.main.reactionEngine.createChemicalData(T, 0, null, 1);
                                this.world.addChemical(A);
                                var S = this.getGasPhase();
                                S.temperature = t.K0,
                                S.volume = 1,
                                S.pressure = 121200,
                                S.temperature = t.AMB
                            }
                        }, {
                            key: "update",
                            value: function(T) {
                                k(E(y.prototype), "update", this).call(this, T),
                                this.switchBtn.setIconScale(.6 / this.main.getScale()),
                                this.switchBtn.visible = this.isSelect,
                                this.updateSwitchBtnPos(),
                                this.label.visible = this.showLabel,
                                this.rubberSlot.assembleData.p1.x = this.label.scale.x = this.scale.x = this.flipped ? -1 : 1
                            }
                        }, {
                            key: "addMouse",
                            value: function(T, A) {
                                this.pContainer.addMouse(T),
                                T.userData.slot = A
                            }
                        }, {
                            key: "updatePressureParam",
                            value: function() {
                                var T = this.getGasPhase();
                                this.pContainer.gas.V = T.volume,
                                this.pContainer.gas.n = T.mol,
                                this.pContainer.gas.T = T.temperature;
                                var A = this.toGlobal(new l(250,10));
                                this.tube.mouse0.userData.globalP = A,
                                this.tube.mouse1.userData.globalP = A,
                                this.tube.mouse0.userData.dir = new l(-1,0),
                                this.tube.mouse1.userData.dir = new l(1,0),
                                this.tube.S = p.TubeComp.DEFAULT_S * this.getPercent(),
                                p.PressureUtil.updateOneMouseParam(this.tube.mouse0, this.main.air),
                                p.PressureUtil.updateOneMouseParam(this.tube.mouse1, this.main.air),
                                this.tube.updateParam(),
                                this.tube.pTube.dp = 0,
                                this.tube.pTube.isBreak = this.getPercent() === 0
                            }
                        }, {
                            key: "getMouseParam",
                            value: function(T) {
                                var A = this.getGasPhase();
                                return {
                                    type: h.FluidType.gas,
                                    rho: A.density,
                                    molecular: A.molecular,
                                    p: A.pressure,
                                    phaseData: A
                                }
                            }
                        }, {
                            key: "transferFluid",
                            value: function() {
                                this.tube.transferFluid()
                            }
                        }, {
                            key: "refreshAfterTransfer",
                            value: function() {}
                        }, {
                            key: "addRubber",
                            value: function(T) {
                                p.CardSlotUtil.tryCardAddToSlot(T, this.rubberSlot)
                            }
                        }, {
                            key: "dragMove",
                            value: function() {
                                k(E(y.prototype), "dragMove", this).call(this),
                                this.updateSwitchBtnPos()
                            }
                        }, {
                            key: "moveBy",
                            value: function(T, A) {
                                k(E(y.prototype), "moveBy", this).call(this, T, A),
                                this.tryMoveConnectedTubes(T, A)
                            }
                        }, {
                            key: "getConfigureData",
                            value: function() {
                                var T = this
                                  , A = {
                                    confArr: []
                                };
                                return A.confArr.push(n.getSwitch("\u663E\u793A\u6807\u7B7E", this.showLabel, function(S) {
                                    T.showLabel = S.checked
                                }, this), n.getRadio("\u65B9\u5411", this.flipped ? 0 : 1, ["\u5DE6", "\u53F3"], function(S) {
                                    S === 0 !== T.flipped && T.flip()
                                }, this)),
                                A
                            }
                        }, {
                            key: "flip",
                            value: function() {
                                this.flipped = !this.flipped,
                                this.flipHorizontal(),
                                this.switchBtnFlip()
                            }
                        }, {
                            key: "switchBtnFlip",
                            value: function() {
                                var T = this.getPercent();
                                this.switchBtn.flip(),
                                this.setPercent(T)
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var T = k(E(y.prototype), "getData", this).call(this);
                                return T.valuePercent = this.getPercent(),
                                T.gasType = this.gasType,
                                T.flipped = this.flipped,
                                T.label = this.label.labelText,
                                T
                            }
                        }, {
                            key: "setData",
                            value: function(T) {
                                k(E(y.prototype), "setData", this).call(this, T),
                                this.initGasPhaseData(T.gasType),
                                this.setPercent(T.valuePercent || 0),
                                this.flipped = !!T.flipped,
                                this.flipped && this.switchBtnFlip(),
                                this.label.labelText = T.label || ""
                            }
                        }, {
                            key: "getPercent",
                            value: function() {
                                return this.switchBtn.getPercent()
                            }
                        }, {
                            key: "setPercent",
                            value: function(T) {
                                this.switchBtn.setPercent(T);
                                var A = this.switchMc.totalFrames - 1
                                  , S = m(T * A);
                                this.switchMc.currentFrame = S
                            }
                        }, {
                            key: "initLabel",
                            value: function() {
                                this.label = p.LabelUtil.createLabel(-115, 0, "", 1, this),
                                this.addChild(this.label)
                            }
                        }, {
                            key: "switchBtnMoveStart",
                            value: function() {
                                this.main.hideSettingPanel()
                            }
                        }, {
                            key: "switchBtnMoved",
                            value: function(T) {
                                this.setPercent(T)
                            }
                        }, {
                            key: "switchBtnMoveEnd",
                            value: function() {
                                this.main.showSettingPanel(this)
                            }
                        }, {
                            key: "updateSwitchBtnPos",
                            value: function() {
                                this.switchBtn.x = this.flipped ? this.x - 175 - 75 : this.x + 175 - 75,
                                this.switchBtn.y = this.y - 100
                            }
                        }, {
                            key: "tryMoveConnectedTubes",
                            value: function(T, A) {
                                p.TubeUtil.tubeFollowRubber(this.tube.mouse1.friend, T, A)
                            }
                        }, {
                            key: "flipHorizontal",
                            value: function() {
                                var T = this.tube.mouse1.friend
                                  , A = p.PressureUtil.getEqByMouse(T);
                                if (A) {
                                    var S = p.PressureUtil.getEqByMouse(T.brother.friend);
                                    !S && A instanceof p.RubberCatheter && A.flipHorizontal(new l(this.x,this.y));
                                    var B = p.PressureUtil.getContainerEqByMouse(T.brother.friend);
                                    B || S instanceof p.GlassCatheter && S.flipHorizontal(new l(this.x,this.y))
                                }
                            }
                        }]),
                        y
                    }(p.ChemicalEquipment);
                    p.GasBag = u
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.pow
                  , f = Math.PI;
                (function(p) {
                    var c = h.engines.assemble.AssembleShape
                      , l = PIXI.Point
                      , i = h.engines.pressure.PContainer
                      , e = function(t) {
                        function a(o) {
                            var s;
                            return q(this, a),
                            s = n.call(this, o),
                            s.className = "GasCollectingBottle",
                            s.isPressureContainer = !0,
                            s.insertLength = 360,
                            s._coverState = p.CapCoverState.NONE,
                            s.canAddDrop = !0,
                            console.log("\u96C6\u6C14\u74F6"),
                            s
                        }
                        H(a, t);
                        var n = M(a);
                        return N(a, [{
                            key: "isCovered",
                            get: function() {
                                return !!(this.getCardByName("plug") || this.getCardByName("cap"))
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(a.prototype), "init", this).call(this);
                                var s = this.main.air.clone();
                                this.world.addPhasesData([s]),
                                this.world.enabled = !0,
                                this.plugSlot = this.addSlot("plug", c.getRect(100, 100, this, -50, -200), p.AssembleGroup.RUBBER_PLUG, new l(50,20), 1, null, new l(0,-1.5)),
                                this.capSlot = this.addSlot("cap", c.getRect(100, 100, this, -50, -200), p.AssembleGroup.GLASS_SHEET, new l(50,20), 1, null, new l(0,-1.5)),
                                this.pourOutCard = this.addCard("pourOut", c.getCircle(30, this, -50, -180), p.AssembleGroup.POUR, new l(0,0)),
                                this.pourInSlot = this.addSlot("pourIn", this, p.AssembleGroup.POUR, new l(50,-180)),
                                this.pContainer = new i(this.main.pressureEngine,{
                                    eq: this
                                }),
                                this.catheterSlot0 = this.addSlot("catheter0", this, p.AssembleGroup.GLASS_CATHETER, new l(-25,-200)),
                                this.catheterSlot1 = this.addSlot("catheter1", this, p.AssembleGroup.GLASS_CATHETER, new l(25,-200)),
                                this.catheterSlot2 = this.addSlot("catheter2", this, p.AssembleGroup.GLASS_CATHETER, new l(0,-200));
                                var r = f * m(.005, 2);
                                this.gasOutParams = [new p.GasRunoutParam(r,new l(0,-190),new l(0,-1)), new p.GasRunoutParam(r,new l(-50,-190),new l(0,-1)), new p.GasRunoutParam(r,new l(50,-190),new l(0,-1))],
                                this.gasBalanceWithAir(),
                                this.setLabelScale(1.2)
                            }
                        }, {
                            key: "removed",
                            value: function() {
                                this.pourOutCard = null,
                                this.pourInSlot = null,
                                this.catheterSlot0 = null,
                                this.catheterSlot1 = null,
                                this.catheterSlot2 = null,
                                this.pContainer.destroy(),
                                this.pContainer = null,
                                k(E(a.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "update",
                            value: function(s) {
                                k(E(a.prototype), "update", this).call(this, s),
                                this.gasBalanceWithAir(),
                                this.world.getReactionResult()
                            }
                        }, {
                            key: "isConnectWithAir",
                            value: function() {
                                return this.plugSlot.isEmpty()
                            }
                        }, {
                            key: "canAddCard",
                            value: function(s) {
                                return s.card.mask === p.AssembleGroup.GLASS_SHEET ? !this.hasPlug() && (this.catheterSlot0.isEmpty() || this.catheterSlot1.isEmpty()) : s.card.mask === p.AssembleGroup.RUBBER_PLUG ? !this.hasGlassSheet() : s.card.mask !== p.AssembleGroup.GLASS_CATHETER || !!s.slot.canAddCard(s.card) && (!this.hasGlassSheet() || (s.slot === this.catheterSlot0 ? this.coverState !== p.CapCoverState.LEFT && this.coverState !== p.CapCoverState.ALL : s.slot === this.catheterSlot1 ? this.coverState !== p.CapCoverState.RIGHT && this.coverState !== p.CapCoverState.ALL : s.slot === this.catheterSlot2 && this.coverState !== p.CapCoverState.ALL))
                            }
                        }, {
                            key: "slotAddedCard",
                            value: function(s) {
                                if (k(E(a.prototype), "slotAddedCard", this).call(this, s),
                                s.card.mask === p.AssembleGroup.GLASS_SHEET)
                                    this.coverState = this.catheterSlot0.isFull() ? p.CapCoverState.RIGHT : this.catheterSlot1.isFull() ? p.CapCoverState.LEFT : p.CapCoverState.ALL;
                                else if (s.card.mask === p.AssembleGroup.GLASS_CATHETER) {
                                    var r = p.CardSlotUtil.getOwner(s.card);
                                    r.insertIndex = this.getIndexByCatheterSlot(s.slot)
                                } else if (s.card.mask === p.AssembleGroup.RUBBER_PLUG) {
                                    for (var u = p.CardSlotUtil.getOwner(s.card), d = p.CardSlotUtil.getCardsInSlotsByGroup(u, p.AssembleGroup.GLASS_CATHETER), y = 0, g = d.length, C; y < g; y++)
                                        C = d[y],
                                        u.freeCard(C);
                                    this.appendCatheterCards(d)
                                }
                            }
                        }, {
                            key: "freeCardOver",
                            value: function(s) {
                                if (k(E(a.prototype), "freeCardOver", this).call(this, s),
                                s.card.mask === p.AssembleGroup.GLASS_SHEET)
                                    this.coverState = p.CapCoverState.NONE;
                                else if (s.card.mask === p.AssembleGroup.RUBBER_PLUG) {
                                    for (var r = p.CardSlotUtil.getOwner(s.card), u = p.CardSlotUtil.getCardsInSlotsByGroup(this, p.AssembleGroup.GLASS_CATHETER), d = 0, y = u.length, g; d < y; d++)
                                        g = u[d],
                                        this.freeCard(g);
                                    r.appendCatheterCards(u)
                                }
                            }
                        }, {
                            key: "hasCatheter",
                            value: function() {
                                return !(this.catheterSlot0.isEmpty() && this.catheterSlot1.isEmpty() && this.catheterSlot2.isEmpty())
                            }
                        }, {
                            key: "hasGlassSheet",
                            value: function() {
                                return !this.capSlot.isEmpty()
                            }
                        }, {
                            key: "getGasOutParams",
                            value: function() {
                                return this.gasOutParams
                            }
                        }, {
                            key: "getIndexByCatheterSlot",
                            value: function(s) {
                                return s === this.catheterSlot0 ? 0 : s === this.catheterSlot1 ? 1 : s === this.catheterSlot2 ? 2 : void console.error("getIndexByCatheterSlot -> slot:".concat(s.name))
                            }
                        }, {
                            key: "getCatheterSlotByIndex",
                            value: function(s) {
                                return s === 0 ? this.catheterSlot0 : s === 1 ? this.catheterSlot1 : s === 2 ? this.catheterSlot2 : void console.error("getCatheterSlotByIndex -> index:".concat(s))
                            }
                        }, {
                            key: "updateSlotsRot",
                            value: function(s) {}
                        }, {
                            key: "appendCatheterCards",
                            value: function(s) {
                                for (var r = 0, u = s.length, d, y, g; r < u; r++)
                                    y = s[r],
                                    d = p.CardSlotUtil.getOwner(y),
                                    g = this.getCatheterSlotByIndex(d.insertIndex),
                                    g && p.CardSlotUtil.tryCardAddToSlot(y, g)
                            }
                        }, {
                            key: "coverState",
                            get: function() {
                                return this._coverState
                            },
                            set: function(s) {
                                this._coverState = s;
                                var r = this.capSlot.assembleData.p0;
                                s === p.CapCoverState.LEFT ? r.set(-65, 20) : s === p.CapCoverState.RIGHT ? r.set(165, 20) : (p.CapCoverState.ALL,
                                r.set(50, 20))
                            }
                        }]),
                        a
                    }(p.PressureContainer);
                    p.GasCollectingBottle = e
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.engines.assemble.AssembleShape
                      , p = PIXI.Point
                      , c = function(l) {
                        function i(t) {
                            var a;
                            return q(this, i),
                            a = e.call(this, t),
                            a.className = "NarrowMouthBottle",
                            a.saveWorldData = !1,
                            a
                        }
                        H(i, l);
                        var e = M(i);
                        return N(i, [{
                            key: "removed",
                            value: function() {
                                if (!this.plugSlot.isEmpty()) {
                                    var a = m.CardSlotUtil.getOwner(this.plugSlot.getCards()[0]);
                                    this.main.removeEq(a)
                                }
                                this.pourOutCard = null,
                                this.dropperSlot = null,
                                k(E(i.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(i.prototype), "init", this).call(this),
                                this.noReduce = !0,
                                this.totalCapacity = .0025;
                                var a = m.AssembleGroup.RUBBER_PLUG | m.AssembleGroup.NARROW_GLASS_PLUG;
                                this.plugSlot = this.addSlot("plug", f.getRect(70, 80, this, -35, -145), a, new p(33,20), 1, null, new p(0,-1)),
                                this.pourOutCard = this.addCard("pourOut", f.getCircle(50, this, -35, -145), m.AssembleGroup.POUR, new p(0,0)),
                                this.dropperSlot = this.addSlot("dropper", this, m.AssembleGroup.DROPPER, new p(0,0)),
                                this.setLabelParam(-3, 30, 1.05)
                            }
                        }, {
                            key: "canAddCard",
                            value: function(a) {
                                return a.slot === this.dropperSlot ? !this.hasPlug() && !this.isPouring() : a.slot === this.plugSlot ? !this.isPouring() && !this.hasDropper() : k(E(i.prototype), "canAddCard", this).call(this, a)
                            }
                        }, {
                            key: "canAddTo",
                            value: function(a) {
                                return a.card === this.pourOutCard ? !this.hasDropper() && !this.hasPlug() : k(E(i.prototype), "canAddTo", this).call(this, a)
                            }
                        }, {
                            key: "isPouring",
                            value: function() {
                                return !this.pourOutCard.isFree()
                            }
                        }, {
                            key: "hasDropper",
                            value: function() {
                                return !this.dropperSlot.isEmpty()
                            }
                        }, {
                            key: "setBottleHeadType",
                            value: function(a) {
                                a === "RubberPlug" ? this.headBg.gotoAndStop(1) : this.headBg.gotoAndStop(0)
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var a = k(E(i.prototype), "getData", this).call(this);
                                return a.bottleHeadBgType = this.headBg.currentFrame,
                                a
                            }
                        }, {
                            key: "setData",
                            value: function(a) {
                                k(E(i.prototype), "setData", this).call(this, a),
                                a.bottleHeadBgType && (this.headBg.currentFrame = a.bottleHeadBgType)
                            }
                        }]),
                        i
                    }(m.PressureContainer);
                    m.NarrowMouthBottle = c
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.max;
                (function(f) {
                    var p = PIXI.Container
                      , c = function(i) {
                        function e(a, n) {
                            var o;
                            return q(this, e),
                            o = t.call(this),
                            o.type = 0,
                            o.chemAry = [],
                            o.type = a,
                            o.main = n,
                            o
                        }
                        H(e, i);
                        var t = M(e);
                        return N(e, [{
                            key: "removed",
                            value: function() {
                                for (var n = 0; n < this.chemAry.length; n++)
                                    this.chemAry[n].removed();
                                this.chemAry = null
                            }
                        }, {
                            key: "update",
                            value: function(n) {
                                for (var o = n.getWorldAry().reverse(), s = n.getEquations().reverse(), r = 0, u = 0, d; u < o.length; u++)
                                    d = this.chemAry[u],
                                    d || (d = new l(this.type,this.main),
                                    this.chemAry[u] = d,
                                    this.addChild(d)),
                                    d.updateInfo(n),
                                    d.update(o[u], s[u]),
                                    d.x = r,
                                    r += m(350, this.chemAry[u].width);
                                var y = n.getChemInfoItemPos();
                                this.x = y.x,
                                this.y = y.y;
                                var g = n.main.getScale();
                                g = .5 > g ? .5 / g : 1.2 < g ? 1.2 / g : 1,
                                this.scale.set(g, g)
                            }
                        }]),
                        e
                    }(p);
                    f.ChemicalsInfoGroup = c;
                    var l = function(i) {
                        function e(a, n) {
                            var o;
                            return q(this, e),
                            o = t.call(this),
                            o.type = 0,
                            o.type = a,
                            o.main = n,
                            o.chemicalInfoItem = new f.ChemicalsInfoItem(o.main),
                            o.equationsInfoItem = new f.EquationsInfoItem(o.main),
                            o.addChild(o.chemicalInfoItem),
                            o.addChild(o.equationsInfoItem),
                            o
                        }
                        H(e, i);
                        var t = M(e);
                        return N(e, [{
                            key: "removed",
                            value: function() {
                                this.chemicalInfoItem.removed(),
                                this.equationsInfoItem.removed(),
                                this.chemicalInfoItem = null,
                                this.equationsInfoItem = null
                            }
                        }, {
                            key: "updateInfo",
                            value: function(n) {
                                this.chemicalInfoItem.updateInfo(n.main.globalConfig.scientific, n.main.globalConfig.bgColorIsLight),
                                this.equationsInfoItem.updateInfo(n.main.globalConfig.equTypeIsArrow, n.main.globalConfig.bgColorIsLight),
                                this.chemicalInfoItem.updateShowFlag(n),
                                this.equationsInfoItem.visible = n.showEquation
                            }
                        }, {
                            key: "update",
                            value: function(n, o) {
                                this.equationsInfoItem.addEquations(o),
                                this.chemicalInfoItem.update(n),
                                this.equationsInfoItem.update(n),
                                this.type === 0 ? this.equationsInfoItem.y = this.chemicalInfoItem.visible ? this.chemicalInfoItem.height : 0 : this.chemicalInfoItem.y = this.equationsInfoItem.visible ? this.equationsInfoItem.height : 0
                            }
                        }]),
                        e
                    }(p);
                    f.ChimicalInfo = l
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.max;
                (function(f) {
                    var p = PIXI.Container
                      , c = PIXI.Text
                      , l = {
                        fontSize: "26px",
                        fontFamily: "Arial",
                        fill: 16777215,
                        align: "left",
                        stroke: 0,
                        strokeThickness: 0,
                        wordWrapWidth: 1
                    }
                      , i = [16777215, 3422529]
                      , e = function(t) {
                        function a(o) {
                            var s = 1 < arguments.length && arguments[1] !== void 0 && arguments[1], r = 2 < arguments.length && arguments[2] !== void 0 && arguments[2], u = 3 < arguments.length ? arguments[3] : void 0, d;
                            return q(this, a),
                            d = n.call(this),
                            d.isAsEq = !1,
                            d.isArrow = !1,
                            d.lifeTime = 0,
                            d.bgIsLight = !1,
                            d.lastTime = -Infinity,
                            d.onHold = !1,
                            d.equation = o,
                            l.fill = i[d.bgIsLight ? 1 : 0],
                            d.main = u,
                            d.init(s),
                            d.isArrow = s,
                            r || d.initEvents(),
                            d.isAsEq = r,
                            d
                        }
                        H(a, t);
                        var n = M(a);
                        return N(a, [{
                            key: "addLifeTime",
                            value: function(s) {
                                this.lifeTime += s,
                                30 < this.lifeTime && (this.lifeTime = 30)
                            }
                        }, {
                            key: "update",
                            value: function() {
                                this.lifeTime--
                            }
                        }, {
                            key: "removed",
                            value: function() {
                                var s = this;
                                this.equation = null,
                                this.parent && this.parent.removeChild(this),
                                this.children.forEach(function(r) {
                                    r instanceof c && s.main.cachePool.pushText(r)
                                })
                            }
                        }, {
                            key: "init",
                            value: function(s) {
                                var r = this.main.cachePool.popText(this.equation.reactant, l);
                                this.addChild(r);
                                var u = new p;
                                this.centerPart = u;
                                var d = this.main.cachePool.popText(s ? "\u2192" : "=", l);
                                d.anchor.set(.5, 0),
                                this.addChild(u),
                                u.addChild(d),
                                this.centerText = d;
                                var y = d.width, g, C;
                                if (this.equation.condition) {
                                    var T = this.equation.condition, A, S;
                                    T.includes("&") ? (A = T.split("&")[0],
                                    S = T.split("&")[1]) : S = T;
                                    var B = Object.assign({}, l, {
                                        align: "center",
                                        fontSize: "18px"
                                    });
                                    A && (g = this.main.cachePool.popText(A, B),
                                    g.anchor.set(.5, 0),
                                    u.addChild(g),
                                    g.y = -g.height / 2 - 2,
                                    g.x = y / 2 - g.width / 2),
                                    S && (C = this.main.cachePool.popText(S, B),
                                    C.anchor.set(.5, 0),
                                    u.addChild(C),
                                    C.y = C.height / 2 + 8,
                                    C.x = y / 2 - C.width / 2)
                                }
                                var b = u.getBounds().width
                                  , P = m(b, 40, y);
                                if (P > y) {
                                    var I = P / y;
                                    d.scale.x = I
                                }
                                u.x = r.x + r.width + 2 + u.width / 2;
                                var O = this.main.cachePool.popText(this.equation.product, l);
                                O.x = u.x + u.width / 2 + 2,
                                this.addChild(O)
                            }
                        }, {
                            key: "changeCentextType",
                            value: function(s) {
                                if (this.isArrow !== s) {
                                    var r = this.centerText.width;
                                    this.centerText.text = s ? "\u2192" : "=",
                                    this.centerText.width = r,
                                    this.isArrow = s
                                }
                            }
                        }, {
                            key: "setStyleColor",
                            value: function(s) {
                                if (this.bgIsLight !== s) {
                                    for (var r = 0, u; r < this.children.length; r++)
                                        u = this.children[r],
                                        u.style && (u.style.fill = i[s ? 1 : 0]);
                                    for (var d = 0, y; d < this.centerPart.children.length; d++)
                                        y = this.centerPart.children[d],
                                        y.style && (y.style.fill = i[s ? 1 : 0]);
                                    this.bgIsLight = s
                                }
                            }
                        }, {
                            key: "initEvents",
                            value: function() {
                                this.addEventListener("pointerdown", this.beginListener),
                                this.addEventListener("pointermove", this.moveListener),
                                this.addEventListener("pointerup", this.endListener),
                                this.addEventListener("pointerupoutside", this.endListener)
                            }
                        }, {
                            key: "beginListener",
                            value: function(s) {
                                var r = this
                                  , u = 1 < arguments.length && arguments[1] !== void 0 && arguments[1];
                                this.onHold = !0;
                                var d = Date.now();
                                if ((700 > d - this.lastTime || u) && this.scale.x % 1 == 0) {
                                    var y = 2 / this.scale.x;
                                    TweenMax.to(this.scale, .5, {
                                        x: y,
                                        y,
                                        onComplete: function() {
                                            r.onHold = !1,
                                            r.lastTime = -Infinity
                                        }
                                    })
                                }
                                this.lastTime = d
                            }
                        }, {
                            key: "moveListener",
                            value: function(s) {
                                this.scale.x === 2 && this.onHold && (this.lastTime = -Infinity,
                                this.createEqAndDrag(s),
                                this.beginListener(s, !0),
                                this.onHold = !1)
                            }
                        }, {
                            key: "endListener",
                            value: function(s) {
                                this.onHold = !1
                            }
                        }, {
                            key: "createEqAndDrag",
                            value: function(s) {
                                var r = this.main.viewStack.toLocal(s.data.global)
                                  , u = this.main.getEqConfData("Equation")
                                  , d = this.main.addEqSync("Equation", r, u);
                                d.initEquationsDisplay(this.equation),
                                s.target = d,
                                s.type = "pointerdown",
                                s.data.button = 0,
                                this.main.toucPluginManager.mouseDownHandler(s),
                                s.type = "pointermove",
                                s.data.button = -1
                            }
                        }]),
                        a
                    }(p);
                    f.EquationsDisplay = e
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.max;
                (function(f) {
                    var p = PIXI.Container
                      , c = function(l) {
                        function i(t) {
                            var a;
                            q(this, i),
                            a = e.call(this),
                            a.itemAry = [];
                            for (var n = 0, o; n < t; n++)
                                o = new f.EquationsInfoItem(null),
                                a.addChild(o),
                                a.itemAry.push(o);
                            return a
                        }
                        H(i, l);
                        var e = M(i);
                        return N(i, [{
                            key: "removed",
                            value: function() {
                                for (var a = 0; a < this.itemAry.length; a++)
                                    this.itemAry[a].removed();
                                this.itemAry = null
                            }
                        }, {
                            key: "addEquations",
                            value: function(a) {
                                for (var n = 0; n < a.length; n++)
                                    this.itemAry[n].addEquations(a[n])
                            }
                        }, {
                            key: "updateInfo",
                            value: function(a, n) {
                                for (var o = 0; o < this.itemAry.length; o++)
                                    this.itemAry[o].updateInfo(a, n)
                            }
                        }, {
                            key: "update",
                            value: function(a) {
                                for (var n = 0, o = 0; o < this.itemAry.length; o++)
                                    this.itemAry[o].update(a[o]),
                                    this.itemAry[o].x = n,
                                    n += m(350, this.itemAry[o].width)
                            }
                        }]),
                        i
                    }(p);
                    f.EquationsInfoGroup = c
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = PIXI.Container
                      , p = function(c) {
                        function l(e) {
                            var t;
                            return q(this, l),
                            t = i.call(this),
                            t.bgIsLight = !1,
                            t.isShowIon = !0,
                            t.isShowMolecule = !0,
                            t.equationsMap = new Map,
                            t.main = e,
                            t
                        }
                        H(l, c);
                        var i = M(l);
                        return N(l, [{
                            key: "removed",
                            value: function() {
                                this.removeAllEquation(),
                                this.equationsMap = null
                            }
                        }, {
                            key: "addEquations",
                            value: function(t) {
                                for (var a = 0, n; a < t.length; a++)
                                    n = this.getEquationsDisplay(t[a]),
                                    n.addLifeTime(10)
                            }
                        }, {
                            key: "updateInfo",
                            value: function(t, a) {
                                this.isArrow = t,
                                this.bgIsLight = a
                            }
                        }, {
                            key: "update",
                            value: function(t) {
                                var a = this;
                                this.equationsMap.forEach(function(n, o) {
                                    n.update(),
                                    0 >= n.lifeTime && (n.removed(),
                                    a.equationsMap.delete(o))
                                }),
                                this.updateEuqs()
                            }
                        }, {
                            key: "removeAllEquation",
                            value: function() {
                                var t = this;
                                this.equationsMap.forEach(function(a, n) {
                                    a.removed(),
                                    t.equationsMap.delete(n)
                                })
                            }
                        }, {
                            key: "updateEuqs",
                            value: function() {
                                var t = this
                                  , a = [];
                                this.equationsMap.forEach(function(r) {
                                    r.equation.isIon ? t.isShowIon && a.push(r) : t.isShowMolecule && a.push(r)
                                }),
                                a.sort(function(r, u) {
                                    return r.equation === u.equation ? u.lifeTime - r.lifeTime : r.equation.isIon ? -1 : 1
                                });
                                for (var n = 0, o = 0, s; o < a.length; o++)
                                    s = a[o],
                                    s.y = n,
                                    n += s.height,
                                    s.changeCentextType(this.isArrow),
                                    s.setStyleColor(this.bgIsLight),
                                    s.update()
                            }
                        }, {
                            key: "getEquationsDisplay",
                            value: function(t) {
                                var a = this.equationsMap.get(t.uid);
                                return a || (a = new m.EquationsDisplay(t,this.isArrow,!1,this.main),
                                this.equationsMap.set(t.uid, a),
                                this.addChild(a)),
                                a
                            }
                        }]),
                        l
                    }(f);
                    m.EquationsInfoItem = p
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = PIXI.Container
                      , p = h.particles.NbParticles
                      , c = h.particles.ParticleConst
                      , l = PIXI.Point
                      , i = function(e) {
                        function t(n, o) {
                            var s;
                            return q(this, t),
                            s = a.call(this),
                            s.destroyCount = 0,
                            s.container = n,
                            s.tube = o,
                            s.initBubble(),
                            s
                        }
                        H(t, e);
                        var a = M(t);
                        return N(t, [{
                            key: "initBubble",
                            value: function() {
                                var o = this
                                  , s = this.container.main.getCdnUrl()
                                  , r = new p(s,c.CATHETER_UP_BUBBLE)
                                  , u = new p(s,c.CATHETER_RIGHT_BUBBLE);
                                u.scale.x *= -1;
                                var d = new p(s,c.CATHETER_RIGHT_BUBBLE)
                                  , y = new p(s,c.CATHETER_TOP_BUBBLE);
                                this.particleGroup = {
                                    upBubble: r,
                                    leftBubble: u,
                                    rightBubble: d,
                                    topBubble: y
                                },
                                r.allowGetBounds = !1,
                                u.allowGetBounds = !1,
                                d.allowGetBounds = !1,
                                y.allowGetBounds = !1,
                                u.alpha = 0,
                                d.alpha = 0,
                                y.alpha = 0,
                                setTimeout(function() {
                                    o && o.particleGroup && (o.particleGroup.leftBubble.alpha = 1,
                                    o.particleGroup.rightBubble.alpha = 1,
                                    o.particleGroup.topBubble.alpha = 1)
                                }, 1e3),
                                this.container.liquidAddChild(r, m.PressureUtil.getSlotByMouse(this.tube.tube.mouse0)),
                                this.container.capacityAddChild(u),
                                this.container.capacityAddChild(d),
                                this.container.capacityAddChild(y)
                            }
                        }, {
                            key: "updateMedAndPos",
                            value: function(o) {
                                this.phaseData = o.phaseType === "g" ? o : null
                            }
                        }, {
                            key: "render",
                            value: function(o, s) {
                                var r = this.container.toLocal(o)
                                  , u = this.container.toLocal(new l(o.x,this.container.getGlobalLiquidTopY(m.PressureUtil.getSlotByMouse(this.tube.tube.mouse0))))
                                  , d = 32e5 * s;
                                for (var y in d = 6 > d ? 6 : d,
                                d = 100 < d ? 100 : d,
                                this.particleGroup)
                                    if (this.particleGroup[y]) {
                                        var g = this.particleGroup[y]
                                          , C = void 0
                                          , T = void 0;
                                        y === "upBubble" ? (g.x = r.x,
                                        g.y = r.y,
                                        C = d / 3,
                                        T = 10 / d) : (g.x = u.x,
                                        g.y = u.y,
                                        y === "topBubble" ? (C = d / 16,
                                        T = 8 / d) : (C = d / 10,
                                        T = 5 / d)),
                                        g.loaded && (g.setParticleProp("maxParticles", C),
                                        g.setParticleProp("frequency", T)),
                                        g.rotation = -this.container.rotation,
                                        g.render()
                                    }
                            }
                        }, {
                            key: "destroy",
                            value: function() {
                                var o = 0 < arguments.length && arguments[0] !== void 0 && arguments[0];
                                if (this.destroyCount++,
                                5 < this.destroyCount || o) {
                                    for (var s in this.particleGroup)
                                        if (this.particleGroup[s]) {
                                            var r = this.particleGroup[s];
                                            r.destroy()
                                        }
                                    this.particleGroup = null
                                }
                            }
                        }]),
                        t
                    }(f);
                    m.TubeBubble = i
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.round
                  , f = Math.min
                  , p = Math.max;
                (function(c) {
                    var l = function() {
                        function i() {
                            q(this, i)
                        }
                        return N(i, null, [{
                            key: "isSameColor",
                            value: function(t, a) {
                                return t.color === a.color && t.alpha === a.alpha
                            }
                        }, {
                            key: "hue2rgb",
                            value: function(t, a, n) {
                                return 0 > n && (n += 1),
                                1 < n && (n -= 1),
                                n < 1 / 6 ? t + 6 * (a - t) * n : n < 1 / 2 ? a : n < 2 / 3 ? t + 6 * ((a - t) * (2 / 3 - n)) : t
                            }
                        }, {
                            key: "hslToRgb",
                            value: function(t, a, n) {
                                var o, s, r;
                                if (a === 0)
                                    o = s = r = n;
                                else {
                                    var u = .5 > n ? n * (1 + a) : n + a - n * a
                                      , d = 2 * n - u;
                                    o = i.hue2rgb(d, u, t + 1 / 3),
                                    s = i.hue2rgb(d, u, t),
                                    r = i.hue2rgb(d, u, t - 1 / 3)
                                }
                                return {
                                    r: m(255 * o),
                                    g: m(255 * s),
                                    b: m(255 * r)
                                }
                            }
                        }, {
                            key: "rgbToHsl",
                            value: function(t, a, n) {
                                t /= 255,
                                a /= 255,
                                n /= 255;
                                var o = p(t, a, n), s = f(t, a, n), r = (o + s) / 2, u, d;
                                if (o === s)
                                    u = d = 0;
                                else {
                                    var y = o - s;
                                    switch (d = .5 < r ? y / (2 - o - s) : y / (o + s),
                                    o) {
                                    case t:
                                        u = (a - n) / y + (a < n ? 6 : 0);
                                        break;
                                    case a:
                                        u = (n - t) / y + 2;
                                        break;
                                    case n:
                                        u = (t - a) / y + 4;
                                        break
                                    }
                                    u /= 6
                                }
                                return {
                                    h: u,
                                    s: d,
                                    l: r
                                }
                            }
                        }, {
                            key: "hexToRgb",
                            value: function(t) {
                                var a = {
                                    r: 0,
                                    g: 0,
                                    b: 0,
                                    r: t >> 16
                                }
                                  , n = t - (a.r << 16);
                                return a.g = n >> 8,
                                a.b = n - (a.g << 8),
                                a
                            }
                        }, {
                            key: "rgbToHex",
                            value: function(t, a, n) {
                                return (t << 16) + (a << 8) + n
                            }
                        }, {
                            key: "hexToHsl",
                            value: function(t) {
                                var a = i.hexToRgb(t);
                                return i.rgbToHsl(a.r, a.g, a.b)
                            }
                        }, {
                            key: "hslToHex",
                            value: function(t) {
                                var a = i.hslToRgb(t.h, t.s, t.l);
                                return i.rgbToHex(a.r, a.g, a.b)
                            }
                        }]),
                        i
                    }();
                    c.ColorUtil = l
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {
                            q(this, p)
                        }
                        return N(p, null, [{
                            key: "canChangeConcentration",
                            value: function(l) {
                                return !!(l && l.solute && l.solvent) && p.notConcentration.indexOf(l.solute.formula) === -1
                            }
                        }]),
                        p
                    }();
                    f.notConcentration = ["C7H7O4N", "C20H14O4", "(C6H10O5)n", "Br2", "I2"],
                    m.CombinationUtil = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = PIXI.filters.ColorMatrixFilter
                      , p = function() {
                        function c() {
                            q(this, c)
                        }
                        return N(c, null, [{
                            key: "getColorFilter",
                            value: function(i, e) {
                                var t = i >> 16
                                  , a = 255 & i >> 8
                                  , n = 255 & i
                                  , o = 255 * e >> 0
                                  , s = new f;
                                return s.matrix = [0, 0, 0, 0, t / 255, 0, 0, 0, 0, a / 255, 0, 0, 0, 0, n / 255, 0, 0, 0, o / 255, 0],
                                s
                            }
                        }, {
                            key: "setColorFilter",
                            value: function(i, e, t) {
                                var a = c.getColorFilter(e, t);
                                i.filters = [a]
                            }
                        }]),
                        c
                    }();
                    m.FilterUtil = p
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {
                            q(this, p)
                        }
                        return N(p, null, [{
                            key: "getPaperColor",
                            value: function(l, i) {
                                var e = 16777215;
                                switch (l) {
                                case m.TestPaperType.UNIVERSAL_PH_INDICATOR:
                                    e = .5 > i ? 10499897 : 1.5 > i ? 9648444 : 2.5 > i ? 11222562 : 3.5 > i ? 14046491 : 4.5 > i ? 14250518 : 5.5 > i ? 14527777 : 6.5 > i ? 14860295 : 7.5 > i ? 11583024 : 8.5 > i ? 5733392 : 9.5 > i ? 1396775 : 10.5 > i ? 869945 : 11.5 > i ? 4072539 : 12.5 > i ? 2364485 : 13.5 > i ? 3612274 : 4464498;
                                    break;
                                case m.TestPaperType.RED_LITMUS:
                                case m.TestPaperType.BLUE_LITMUS:
                                    e = 5.5 > i ? 16711680 : 7.5 > i ? 16636125 : 8.5 > i ? 11184861 : 6711005;
                                    break;
                                case m.TestPaperType.PHENOLPHTHALEIN:
                                    e = 8 > i ? 16777215 : 9 > i ? 14491680 : 14483456;
                                    break
                                }
                                return e
                            }
                        }]),
                        p
                    }();
                    m.TestPaperUtil = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.abs;
                (function(f) {
                    var p = h.engines.chemicalReaction.PhaseUtil
                      , c = function() {
                        function l() {
                            q(this, l)
                        }
                        return N(l, null, [{
                            key: "tubeFollowRubber",
                            value: function(e, t, a) {
                                for (var n = e; n; ) {
                                    var o = f.PressureUtil.getEqByMouse(n)
                                      , s = f.PressureUtil.getEqByMouse(n.brother.friend)
                                      , r = f.PressureUtil.getContainerEqByMouse(n.brother.friend);
                                    if (r || s && s.tube.mouse0.parent || (o.x += t,
                                    o.y += a,
                                    !s) || (s.x += t,
                                    s.y += a,
                                    n = n.brother.friend,
                                    n = n.brother.friend,
                                    n === e))
                                        break
                                }
                            }
                        }, {
                            key: "canMerge",
                            value: function(e, t, a) {
                                var n = t.data
                                  , o = a.data;
                                if (n.phaseType === o.phaseType) {
                                    if (n.phaseType === "g") {
                                        if (l.canGasMerge(n, o))
                                            return l.mergeGas(e, t, a),
                                            !0
                                    } else if (n.phaseType === "l" && l.canLiquidMerge(n, o))
                                        return l.mergeLiquid(e, t, a),
                                        !0
                                }
                                return !1
                            }
                        }, {
                            key: "canLiquidMerge",
                            value: function(e, t) {
                                if (e.chemicals.length !== t.chemicals.length)
                                    return !1;
                                var a = e.chemicals.concat()
                                  , n = t.chemicals.concat();
                                a.sort(function(y, g) {
                                    return g.mol - y.mol
                                }),
                                n.sort(function(y, g) {
                                    return g.mol - y.mol
                                });
                                for (var o = e.mol, s = t.mol, r = 0; r < a.length; r++) {
                                    var u = a[r]
                                      , d = n[r];
                                    if (u.chemicalId !== d.chemicalId || .01 < m(u.mol / o - d.mol / s))
                                        return !1
                                }
                                return !0
                            }
                        }, {
                            key: "mergeLiquid",
                            value: function(e, t, a) {
                                var n = t.data.clone()
                                  , o = a.data.clone()
                                  , s = e.userData.S
                                  , r = f.PressureUtil.getItemMol(t, s)
                                  , u = f.PressureUtil.getItemMol(a, s);
                                n.mol = r,
                                o.mol = u,
                                p.mergePhase(n, o),
                                a.data = o,
                                o.removeEmptyChemical()
                            }
                        }, {
                            key: "canGasMerge",
                            value: function(e, t) {
                                return !0
                            }
                        }, {
                            key: "mergeGas",
                            value: function(e, t, a) {
                                var n = t.data.clone()
                                  , o = a.data.clone()
                                  , s = e.userData.S
                                  , r = f.PressureUtil.getItemMol(t, s)
                                  , u = f.PressureUtil.getItemMol(a, s);
                                n.volume *= r / n.mol,
                                n.mol = r,
                                o.volume *= u / o.mol,
                                o.mol = u,
                                p.mergePhase(n, o),
                                o.volume = n.volume + o.volume,
                                a.data = o,
                                o.removeEmptyChemical()
                            }
                        }]),
                        l
                    }();
                    f.TubeUtil = c
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {
                            q(this, p)
                        }
                        return N(p, null, [{
                            key: "underOwner",
                            value: function(l, i) {
                                if (i && i.slot) {
                                    var e = l.main.viewStack.eqLayer.children
                                      , t = m.CardSlotUtil.getOwner(i.slot)
                                      , a = e.indexOf(l);
                                    e.splice(a, 1);
                                    var n = e.indexOf(t);
                                    e.splice(n, 0, l)
                                }
                            }
                        }]),
                        p
                    }();
                    m.ZIndexUtil = f
                }
                )(h.chemistry || (h.chemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "AnionExchangeMembrane",
                            console.log("\u9634\u79BB\u5B50\u4EA4\u6362\u819C"),
                            e.type = 1,
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c)
                    }(m.IonExchangeMembrane);
                    m.AnionExchangeMembrane = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "CationExchangeMembrane",
                            console.log("\u9633\u79BB\u5B50\u4EA4\u6362\u819C"),
                            e.type = 2,
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c)
                    }(m.IonExchangeMembrane);
                    m.CationExchangeMembrane = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.chemistry.ChemicalEquipment
                      , p = h.chemistry.AssembleGroup
                      , c = PIXI.Point
                      , l = h.chemistry.EqAttrMode
                      , i = h.chemistry.SoundConst
                      , e = function(t) {
                        function a(o) {
                            var s;
                            return q(this, a),
                            s = n.call(this, o),
                            s.className = "CellCover",
                            s.sounds = [i.ADDRUBBERPLUG, i.EXTRACTRUBBERPLUG],
                            s.attrMode = l.NONE,
                            s
                        }
                        H(a, t);
                        var n = M(a);
                        return N(a, [{
                            key: "removed",
                            value: function() {
                                this.card = null,
                                k(E(a.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(a.prototype), "init", this).call(this),
                                this.card = this.addCard("cellCover", this, p.CELL_COVER, new c(0,0)),
                                this.card.userData.soundOn = i.ADDRUBBERPLUG,
                                this.card.userData.soundOff = i.EXTRACTRUBBERPLUG
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var s = k(E(a.prototype), "getData", this).call(this);
                                return s.scale = this.scale.x,
                                s
                            }
                        }, {
                            key: "setData",
                            value: function(s) {
                                k(E(a.prototype), "setData", this).call(this, s),
                                this.scale.x = s.scale || 1
                            }
                        }, {
                            key: "getDropVertex",
                            value: function() {
                                return [{
                                    x: -this.width / 2,
                                    y: 0
                                }, {
                                    x: this.width / 2,
                                    y: 0
                                }]
                            }
                        }]),
                        a
                    }(f);
                    m.CellCover = e
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.abs;
                (function(f) {
                    var p = h.chemistry.AssembleGroup
                      , c = h.engines.assemble.AssembleShape
                      , l = PIXI.Point
                      , i = h.chemistry.SaltBridgeUtil
                      , e = h.chemistry.CardSlotUtil
                      , t = h.utils.Constant
                      , a = h.chemistry.EqAttrMode
                      , n = h.plugins.ComponentProperty
                      , o = function(s) {
                        function r(d) {
                            var y;
                            return q(this, r),
                            y = u.call(this, d),
                            y.className = "SaltBridge",
                            y.attrMode = a.NONE,
                            y.type = f.SaltBridgeType.KCL,
                            y
                        }
                        H(r, s);
                        var u = M(r);
                        return N(r, [{
                            key: "init",
                            value: function() {
                                k(E(r.prototype), "init", this).call(this),
                                this.cardL = this.addCard("saltBridgeL", c.getRect(80, 450, this, -170, -150), p.SALT_BRIDGE_LEFT, new l(40,300), null, null),
                                this.cardR = this.addCard("saltBridgeR", c.getRect(80, 450, this, 90, -150), p.SALT_BRIDGE_RIGHT, new l(40,300), null, null),
                                this.cardL.userData.vertex = this.edge.vertex0,
                                this.cardR.userData.vertex = this.edge.vertex1,
                                this.cardL.brother = this.cardR,
                                this.cardR.brother = this.cardL
                            }
                        }, {
                            key: "removed",
                            value: function() {
                                this.cardL.brother = null,
                                this.cardR.brother = null,
                                this.cardL = null,
                                this.cardR = null,
                                k(E(r.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "canAddTo",
                            value: function(y) {
                                var g = e.getOwner(y.slot)
                                  , C = y.card.brother
                                  , T = e.getOwner(C.slot);
                                return g !== T
                            }
                        }, {
                            key: "cardAddedToSlot",
                            value: function(y) {
                                var g = e.getOwner(y.slot)
                                  , C = g.x
                                  , T = g.y;
                                y.slot.follow(y.card);
                                var A = g.x - C
                                  , S = g.y - T;
                                i.bridgeFollowBeaker(y.slot.brother, A, S),
                                f.VertexUtil.connectByCardSlot(y.card, y.slot)
                            }
                        }, {
                            key: "cardFreed",
                            value: function(y) {
                                k(E(r.prototype), "cardFreed", this).call(this, y),
                                f.VertexUtil.disConnectByCardSlot(y.card)
                            }
                        }, {
                            key: "getCation",
                            value: function(y) {
                                return this.main.reactionEngine.createChemicalData("K", 1, "l", m(t.getNbyQ(this.Q, 1)))
                            }
                        }, {
                            key: "getAnion",
                            value: function(y) {
                                var g = this.type === f.SaltBridgeType.KCL ? "Cl" : "NO3";
                                return this.main.reactionEngine.createChemicalData(g, -1, "l", m(t.getNbyQ(this.Q, 1)))
                            }
                        }, {
                            key: "getConfigureData",
                            value: function() {
                                var y = this
                                  , g = {
                                    confArr: []
                                };
                                return g.confArr.push(n.getRadio("\u7C7B\u578B", this.type, ["KCl", "KNO3"], function(C) {
                                    y.type = C
                                }, this)),
                                g
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var y = k(E(r.prototype), "getData", this).call(this);
                                return y.type = this.type,
                                y
                            }
                        }, {
                            key: "setData",
                            value: function(y) {
                                k(E(r.prototype), "setData", this).call(this, y),
                                y.type !== void 0 && (this.type = y.type)
                            }
                        }]),
                        r
                    }(f.ElectricalEquipment);
                    f.SaltBridge = o
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.chemistry.AssembleGroup
                      , p = PIXI.Point
                      , c = h.engines.assemble.AssembleShape
                      , l = h.chemistry.EqAttrMode
                      , i = h.plugins.ComponentProperty
                      , e = function(t) {
                        function a(o) {
                            var s;
                            return q(this, a),
                            s = n.call(this, o),
                            s.className = "Battery",
                            s.dir = 0,
                            s.edge.vertex1.SUP = -9,
                            s.attrMode = l.NONE,
                            s
                        }
                        H(a, t);
                        var n = M(a);
                        return N(a, [{
                            key: "init",
                            value: function() {
                                k(E(a.prototype), "init", this).call(this);
                                var s = this.slot0 = this.addSlot("terminal0", c.getBox(40, 40, this, -45, -80), f.TERMINAL, new p(0,0), 1, null, new p(-1,0));
                                s.userData.vertex = this.edge.vertex0;
                                var r = this.slot1 = this.addSlot("terminal1", c.getBox(40, 40, this, 45, -80), f.TERMINAL, new p(0,0), 1, null, new p(1,0));
                                r.userData.vertex = this.edge.vertex1,
                                this.setDir(0)
                            }
                        }, {
                            key: "setDir",
                            value: function(s) {
                                this.dir === s || (this.dir = s,
                                this.dir === 0 ? (this.scale.x = 1,
                                this.slot0.assembleData.p1.x = -1,
                                this.slot1.assembleData.p1.x = 1) : (this.scale.x = -1,
                                this.slot0.assembleData.p1.x = 1,
                                this.slot1.assembleData.p1.x = -1))
                            }
                        }, {
                            key: "getConfigureData",
                            value: function() {
                                var s = this
                                  , r = {
                                    confArr: []
                                };
                                return r.confArr.push(i.getRadio("\u65B9\u5411", this.dir, ["\u5DE6", "\u53F3"], function(u) {
                                    s.setDir(u)
                                }, this)),
                                r
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var s = k(E(a.prototype), "getData", this).call(this);
                                return s.dir = this.dir,
                                s
                            }
                        }, {
                            key: "setData",
                            value: function(s) {
                                k(E(a.prototype), "setData", this).call(this, s),
                                s.dir && this.setDir(s.dir)
                            }
                        }]),
                        a
                    }(m.ElectricalEquipment);
                    m.Battery = e
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.sqrt;
                (function(f) {
                    var p = h.engines.assemble.AssembleShape
                      , c = h.chemistry.AssembleGroup
                      , l = PIXI.Point
                      , i = h.chemistry.EqAttrMode
                      , e = function(t) {
                        function a(o) {
                            var s;
                            return q(this, a),
                            s = n.call(this, o),
                            s.className = "Bulb",
                            s.attrMode = i.NONE,
                            console.log("\u706F\u6CE1"),
                            s
                        }
                        H(a, t);
                        var n = M(a);
                        return N(a, [{
                            key: "init",
                            value: function() {
                                k(E(a.prototype), "init", this).call(this);
                                var s = this.addSlot("terminal0", p.getBox(40, 40, this, -70, -10), c.TERMINAL, new l(0,8), 1, null, new l(-1,0));
                                s.userData.vertex = this.edge.vertex0;
                                var r = this.addSlot("terminal1", p.getBox(40, 40, this, 70, -10), c.TERMINAL, new l(0,8), 1, null, new l(1,0));
                                r.userData.vertex = this.edge.vertex1,
                                this.light0.alpha = 0,
                                this.light1.alpha = 0
                            }
                        }, {
                            key: "update",
                            value: function(s) {
                                k(E(a.prototype), "update", this).call(this, s);
                                var r = this.getPower();
                                this.light0.alpha = r,
                                this.light1.alpha = m(r)
                            }
                        }]),
                        a
                    }(f.ElectricalEquipment);
                    f.Bulb = e
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.abs;
                (function(f) {
                    var p = h.engines.assemble.AssembleShape
                      , c = h.chemistry.AssembleGroup
                      , l = PIXI.Point
                      , i = h.utils.NBMath
                      , e = h.chemistry.EqAttrMode
                      , t = function(a) {
                        function n(s) {
                            var r;
                            return q(this, n),
                            r = o.call(this, s),
                            r.className = "Galvanometer",
                            r.targetRot = 0,
                            r.rotSpeed = 0,
                            r.attrMode = e.NONE,
                            console.log("\u7075\u654F\u7535\u6D41\u8BA1"),
                            r
                        }
                        H(n, a);
                        var o = M(n);
                        return N(n, [{
                            key: "init",
                            value: function() {
                                k(E(n.prototype), "init", this).call(this);
                                var r = this.addSlot("terminal0", p.getBox(20, 20, this, -55, 60), c.TERMINAL, new l(0,6), 1, null, new l(-1,0));
                                r.userData.vertex = this.edge.vertex0;
                                var u = this.addSlot("terminal1", p.getBox(20, 20, this, 55, 60), c.TERMINAL, new l(0,6), 1, null, new l(1,0));
                                u.userData.vertex = this.edge.vertex1,
                                this.setPointerRotation(0, !0)
                            }
                        }, {
                            key: "update",
                            value: function(r) {
                                k(E(n.prototype), "update", this).call(this, r),
                                this.setPointerRotation(this.edge.hasI() ? 4.5 * this.edge.I : 0),
                                this.animatePointer()
                            }
                        }, {
                            key: "setPointerRotation",
                            value: function(r) {
                                var u = 1 < arguments.length && arguments[1] !== void 0 && arguments[1];
                                r = this.formatPointerRot(r),
                                this.targetRot = r,
                                u && (this.pointer.rotation = r)
                            }
                        }, {
                            key: "formatPointerRot",
                            value: function(r) {
                                return i.limitAB(r, n.MIN_ROT, n.MAX_ROT)
                            }
                        }, {
                            key: "animatePointer",
                            value: function() {
                                if (this.pointer.rotation !== this.targetRot) {
                                    var r = this.targetRot - this.pointer.rotation;
                                    this.rotSpeed += .1 * r
                                }
                                if (this.rotSpeed !== 0)
                                    if (1e-5 > m(this.rotSpeed))
                                        this.pointer.rotation = this.targetRot,
                                        this.rotSpeed = 0;
                                    else {
                                        this.pointer.rotation += this.rotSpeed,
                                        this.rotSpeed *= .8;
                                        var u = this.formatPointerRot(this.pointer.rotation);
                                        this.pointer.rotation !== u && (this.pointer.rotation = u,
                                        this.rotSpeed = 0)
                                    }
                            }
                        }]),
                        n
                    }(f.ElectricalEquipment);
                    t.MIN_ROT = i.ang2rad(-60),
                    t.MAX_ROT = i.ang2rad(60),
                    f.Galvanometer = t
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.max;
                (function(p) {
                    var c = h.engines.assemble.AssembleShape
                      , l = h.chemistry.AssembleGroup
                      , i = PIXI.Point
                      , e = h.chemistry.EqAttrMode
                      , t = function(a) {
                        function n(s) {
                            var r;
                            return q(this, n),
                            r = o.call(this, s),
                            r.className = "Led",
                            r.dirBreak = !1,
                            r.attrMode = e.NONE,
                            console.log("\u53D1\u5149\u4E8C\u6781\u7BA1"),
                            r
                        }
                        H(n, a);
                        var o = M(n);
                        return N(n, [{
                            key: "init",
                            value: function() {
                                k(E(n.prototype), "init", this).call(this);
                                var r = this.addSlot("terminal0", c.getBox(40, 40, this, -70, -10), l.TERMINAL, new i(0,8), 1, null, new i(-1,0));
                                r.userData.vertex = this.edge.vertex0;
                                var u = this.addSlot("terminal1", c.getBox(40, 40, this, 70, -10), l.TERMINAL, new i(0,8), 1, null, new i(1,0));
                                u.userData.vertex = this.edge.vertex1,
                                this.light.alpha = 0
                            }
                        }, {
                            key: "update",
                            value: function(r) {
                                k(E(n.prototype), "update", this).call(this, r),
                                this.edge.R = this.edge.vertex0.U >= this.edge.vertex1.U ? 1e11 : 1,
                                this.light.alpha = this.edge.hasI() ? f(m(this.getPower(), 1), 0) : 0
                            }
                        }]),
                        n
                    }(p.ElectricalEquipment);
                    p.Led = t
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.sqrt;
                (function(f) {
                    var p = h.engines.assemble.AssembleShape
                      , c = h.chemistry.AssembleGroup
                      , l = PIXI.Point
                      , i = h.chemistry.EqAttrMode
                      , e = function(t) {
                        function a(o) {
                            var s;
                            return q(this, a),
                            s = n.call(this, o),
                            s.className = "Motor",
                            s.speed = 0,
                            s.attrMode = i.NONE,
                            console.log("\u5C0F\u7535\u52A8\u673A"),
                            s
                        }
                        H(a, t);
                        var n = M(a);
                        return N(a, [{
                            key: "init",
                            value: function() {
                                k(E(a.prototype), "init", this).call(this);
                                var s = this.addSlot("terminal0", p.getBox(40, 40, this, -70, -10), c.TERMINAL, new l(0,8), 1, null, new l(-1,0));
                                s.userData.vertex = this.edge.vertex0;
                                var r = this.addSlot("terminal1", p.getBox(40, 40, this, 70, -10), c.TERMINAL, new l(0,8), 1, null, new l(1,0));
                                r.userData.vertex = this.edge.vertex1
                            }
                        }, {
                            key: "update",
                            value: function(s) {
                                k(E(a.prototype), "update", this).call(this, s);
                                var r = this.getPower();
                                if (this.speed = m(r),
                                this.speed) {
                                    var u = this.edge.vertex0.U < this.edge.vertex1.U ? 1 : -1;
                                    this.fan0.rotation += 5 * (this.speed * s) * u,
                                    this.fan1.rotation = this.fan0.rotation
                                }
                            }
                        }]),
                        a
                    }(f.ElectricalEquipment);
                    f.Motor = e
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.atan2
                  , f = Math.abs;
                (function(p) {
                    var c = h.engines.assemble.AssembleShape
                      , l = h.chemistry.AssembleGroup
                      , i = PIXI.Point
                      , e = h.utils.NBMath
                      , t = h.pixiExtras.NBHitAreaShape
                      , a = h.pixiExtras.NBTouchUtil
                      , n = h.chemistry.EqAttrMode
                      , o = function(s) {
                        function r(d) {
                            var y;
                            return q(this, r),
                            y = u.call(this, d),
                            y.className = "SingleSwitch",
                            y.thresholdRot = e.ang2rad(-10),
                            y.onTouchStart = function(g) {
                                var C = y.knife.toLocal(g.data.global);
                                y.knifeLocalRot = m(C.y, C.x)
                            }
                            ,
                            y.onToucMove = function(g, C, T) {
                                var A = y.toLocal(g.data.global)
                                  , S = m(A.y - y.knife.y, A.x - y.knife.x)
                                  , B = S - y.knifeLocalRot;
                                y.setKnifeRotation(B, !0)
                            }
                            ,
                            y.onToucTap = function(g) {
                                console.log("click"),
                                y.rotToBreak(y.targetRot) ? y.setKnifeRotation(r.ROT_CLOSE) : y.setKnifeRotation(r.ROT_BREAK)
                            }
                            ,
                            y.edge.isBreak = !0,
                            y.attrMode = n.NONE,
                            y
                        }
                        H(r, s);
                        var u = M(r);
                        return N(r, [{
                            key: "init",
                            value: function() {
                                k(E(r.prototype), "init", this).call(this);
                                var y = this.addSlot("terminal0", c.getBox(40, 40, this, -95, 15), l.TERMINAL, new i(0,0), 1, null, new i(-1,0));
                                y.userData.vertex = this.edge.vertex0;
                                var g = this.addSlot("terminal1", c.getBox(40, 40, this, 99, 15), l.TERMINAL, new i(0,0), 1, null, new i(1,0));
                                g.userData.vertex = this.edge.vertex1,
                                this.setKnifeRotation(e.ang2rad(-30), !0),
                                this.knifeHitArea.interactive = !0,
                                this.addCursor(this.knifeHitArea, h.CursorType.Hand),
                                a.addTouch(this.knifeHitArea, {
                                    touchStart: this.onTouchStart,
                                    touchMove: this.onToucMove,
                                    touchTap: this.onToucTap
                                })
                            }
                        }, {
                            key: "initSkin",
                            value: function() {
                                k(E(r.prototype), "initSkin", this).call(this),
                                this.knifeHitArea = t.getBox(60, 30, this.knife, 170, 0)
                            }
                        }, {
                            key: "update",
                            value: function(y) {
                                if (k(E(r.prototype), "update", this).call(this, y),
                                this.knife.rotation !== this.targetRot) {
                                    var g = this.targetRot - this.knife.rotation;
                                    .01 > f(g) ? this.knife.rotation = this.targetRot : this.knife.rotation += .2 * g
                                }
                                this.edge.isBreak = this.rotToBreak(this.knife.rotation)
                            }
                        }, {
                            key: "setKnifeRotation",
                            value: function(y) {
                                var g = 1 < arguments.length && arguments[1] !== void 0 && arguments[1];
                                y = e.limitAB(y, r.ROT_MIN, 0),
                                this.targetRot = y,
                                g && (this.knife.rotation = y)
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var y = k(E(r.prototype), "getData", this).call(this);
                                return y.knifeRotation = this.knife.rotation,
                                y
                            }
                        }, {
                            key: "setData",
                            value: function(y) {
                                k(E(r.prototype), "setData", this).call(this, y),
                                this.setKnifeRotation(y.knifeRotation, !0)
                            }
                        }, {
                            key: "rotToBreak",
                            value: function(y) {
                                return y < this.thresholdRot
                            }
                        }]),
                        r
                    }(p.ElectricalEquipment);
                    o.ROT_BREAK = e.ang2rad(-30),
                    o.ROT_CLOSE = e.ang2rad(0),
                    o.ROT_MIN = e.ang2rad(-60),
                    p.SingleSwitch = o
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.abs;
                (function(f) {
                    var p = h.chemistry.AssembleGroup
                      , c = PIXI.Point
                      , l = h.chemistry.TwoTerminalRope
                      , i = h.electroChemistry.PCDot
                      , e = h.utils.NBPointUtils
                      , t = h.chemistry.EqAttrMode
                      , a = h.chemistry.SoundConst
                      , n = function(s) {
                        function r(d) {
                            var y;
                            return q(this, r),
                            y = u.call(this, d),
                            y.className = "Wire",
                            y.terminalTextureId = "Skin/wireHead.png",
                            y.ropeTextureId = "Skin/wireRed.png",
                            y.terminalAnchor = {
                                x: 0,
                                y: 5
                            },
                            y.terminalGroup = p.TERMINAL,
                            y.pointNum = 100,
                            y.cardP0 = new c(0,0),
                            y.pcDot = new i(y.main),
                            y.skinType = 0,
                            y.sounds = [a.WIRE],
                            console.log("\u5BFC\u7EBF"),
                            y.edge.R = 1e-6,
                            y.setPcDotSkin(!0),
                            y.attrMode = t.NONE,
                            y.showSelectReact = !1,
                            y
                        }
                        H(r, s);
                        var u = M(r);
                        return N(r, [{
                            key: "init",
                            value: function() {
                                k(E(r.prototype), "init", this).call(this),
                                this.rope.terminal0.card.userData.vertex = this.edge.vertex0,
                                this.rope.terminal1.card.userData.vertex = this.edge.vertex1,
                                this.rope.terminal1.hitArea = this.rope.terminal0.hitArea = new o,
                                this.rope.terminal0.card.userData.soundOn = a.WIRE,
                                this.rope.terminal1.card.userData.soundOn = a.WIRE,
                                this.rope.terminal0.card.userData.autoFree = !1,
                                this.rope.terminal1.card.userData.autoFree = !1
                            }
                        }, {
                            key: "initData",
                            value: function(y) {
                                k(E(r.prototype), "initData", this).call(this, y),
                                y && y.initData && this.setSkinType(parseInt(y.initData.colorType, 10) ? 1 : 0)
                            }
                        }, {
                            key: "update",
                            value: function(y) {
                                k(E(r.prototype), "update", this).call(this, y),
                                this.cards.forEach(function(g) {
                                    g.priority = 2
                                }),
                                this.rope.update(y),
                                this.edge.hasI() ? (this.setPcDotSkin(),
                                this.pcDot.setSpeed(this.edge.I),
                                (!this.pcDot.isactive || this.pcDot.isactive && .1 < e.distance(this.lastTerPos0, this.rope.terminal0) + e.distance(this.lastTerPos1, this.rope.terminal1)) && (this.pcDot.setPoints(this.rope.points),
                                this.lastTerPos0 = new c(this.rope.terminal0.x,this.rope.terminal0.y),
                                this.lastTerPos1 = new c(this.rope.terminal1.x,this.rope.terminal1.y)),
                                this.pcDot.setActive(!0)) : (this.pcDot.setActive(!1),
                                this.pcDot.setPoints([])),
                                this.pcDot.loop()
                            }
                        }, {
                            key: "removed",
                            value: function() {
                                this.rope.removed(),
                                this.rope = null,
                                this.pcDot.removed(),
                                k(E(r.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "initSkin",
                            value: function() {
                                k(E(r.prototype), "initSkin", this).call(this),
                                this.rope = new l(this,this),
                                this.addChild(this.rope),
                                this.addChild(this.pcDot)
                            }
                        }, {
                            key: "canAddTo",
                            value: function(y) {
                                return this.rope.canAddTo(y)
                            }
                        }, {
                            key: "cardAddedToSlot",
                            value: function(y) {
                                k(E(r.prototype), "cardAddedToSlot", this).call(this, y),
                                this.rope.cardAddToSlot(y);
                                var g = y.card.userData.vertex
                                  , C = y.slot.userData.vertex;
                                g.connect(C)
                            }
                        }, {
                            key: "cardFreed",
                            value: function(y) {
                                k(E(r.prototype), "cardFreed", this).call(this, y);
                                var g = y.card.userData.vertex;
                                g.disConnect()
                            }
                        }, {
                            key: "hitPoint",
                            value: function(y) {
                                return this.rope.rope.containsPoint(y)
                            }
                        }, {
                            key: "setSkinType",
                            value: function(y) {
                                y = parseInt(y + "", 10) ? 1 : 0,
                                this.skinType !== y && (this.skinType = y,
                                this.ropeTextureId = this.skinType ? "Skin/wireBlack.png" : "Skin/wireRed.png",
                                this.rope.setRopeTextureId(this.ropeTextureId))
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var y = k(E(r.prototype), "getData", this).call(this);
                                return this.rope.getData(y),
                                y.skinType = this.skinType,
                                y
                            }
                        }, {
                            key: "setData",
                            value: function(y) {
                                k(E(r.prototype), "setData", this).call(this, y),
                                this.rope.setData(y),
                                this.setSkinType(y.skinType)
                            }
                        }, {
                            key: "setPcDotSkin",
                            value: function() {
                                var y = 0 < arguments.length && arguments[0] !== void 0 && arguments[0];
                                (y || this.showElectrons !== this.main.moduleConfig.showElectrons) && (this.showElectrons = this.main.moduleConfig.showElectrons,
                                this.pcDot.setSkin("Skin/".concat(this.showElectrons ? "electron" : "dotWhite", ".png"), this.showElectrons))
                            }
                        }]),
                        r
                    }(f.ElectricalEquipment);
                    f.Wire = n;
                    var o = function() {
                        function s() {
                            q(this, s)
                        }
                        return N(s, [{
                            key: "contains",
                            value: function(u, d) {
                                return 20 > m(u) && 20 > m(d)
                            }
                        }]),
                        s
                    }()
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c() {
                            var i;
                            return q(this, c),
                            i = l.apply(this, arguments),
                            i.className = "FourCellElectrolyzerCombEq",
                            i.cellN = 4,
                            i
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "getElectrolyzer",
                            value: function() {
                                var e = this.main.getEqConfData("FourCellElectrolyzerCombEq");
                                return this.main.addEqSync("FourCellElectrolyzer", this.p, e)
                            }
                        }]),
                        c
                    }(m.ElectrolyzerCombEq);
                    m.FourCellElectrolyzerCombEq = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c() {
                            var i;
                            return q(this, c),
                            i = l.apply(this, arguments),
                            i.className = "ThreeCellElectrolyzerCombEq",
                            i.cellN = 3,
                            i
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "getElectrolyzer",
                            value: function() {
                                var e = this.main.getEqConfData("ThreeCellElectrolyzerCombEq");
                                return this.main.addEqSync("ThreeCellElectrolyzer", this.p, e)
                            }
                        }]),
                        c
                    }(m.ElectrolyzerCombEq);
                    m.ThreeCellElectrolyzerCombEq = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c() {
                            var i;
                            return q(this, c),
                            i = l.apply(this, arguments),
                            i.className = "TwoCellElectrolyzerCombEq",
                            i.cellN = 2,
                            i
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "getElectrolyzer",
                            value: function() {
                                var e = this.main.getEqConfData("TwoCellElectrolyzerCombEq");
                                return this.main.addEqSync("TwoCellElectrolyzer", this.p, e)
                            }
                        }]),
                        c
                    }(m.ElectrolyzerCombEq);
                    m.TwoCellElectrolyzerCombEq = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min;
                (function(f) {
                    var p = PIXI.Point
                      , c = h.chemistry.ContainerRenderer
                      , l = h.engines.chemicalReaction.ReactionWorld
                      , i = h.engines.pressure.PContainer
                      , e = h.chemistry.TubeComp
                      , t = h.utils.NBPolygonUtil
                      , a = h.chemistry.PressureUtil
                      , n = h.chemistry.AssembleGroup
                      , o = h.engines.assemble.AssembleShape
                      , s = h.chemistry.LabelUtil
                      , r = h.chemistry.CardSlotUtil
                      , u = function() {
                        function d(y, g, C, T, A) {
                            q(this, d),
                            this.isConnectWithAir = !0,
                            this.pos = {
                                x: 0,
                                y: 0
                            },
                            this.plugP = new p,
                            this.world = new l(y.main.reactionEngine),
                            this.world.enabled = !0,
                            this.air = y.main.air,
                            this.containerRenderer = new c(g,this.world,A,this.air),
                            y.addChildAt(this.containerRenderer, 0),
                            this.world.addPhasesData([y.main.air]),
                            this.pContainer = new i(y.main.pressureEngine,{
                                eq: y
                            }),
                            this.tube = new e(y,.001),
                            this.tube.S *= 100,
                            this.tube.pTube.name = "Cell\u7684\u6EF4\u6C34\u53E3",
                            this.pContainer.addMouse(this.tube.mouse0),
                            this.updatePlugPos(g),
                            this.plugSlot = y.addSlot("plug_" + C, y, n.RUBBER_PLUG, new p(T.x,T.y + 230), null, null, new p(0,.35)),
                            this.catheterSlotL = y.addSlot("catheterL_" + C, y, n.GLASS_CATHETER, new p(T.x - 100,T.y - 240)),
                            this.catheterSlotR = y.addSlot("catheterR_" + C, y, n.GLASS_CATHETER, new p(T.x + 100,T.y - 240)),
                            this.pourInSlot = y.addSlot("pourIn_" + C, o.getCircle(50, y, T.x + 175, T.y - 240), n.POUR, new p(0,0)),
                            this.plugSlot.userData.cell = this,
                            this.catheterSlotL.userData.cell = this,
                            this.catheterSlotR.userData.cell = this,
                            this.pourInSlot.userData.cell = this,
                            this.label = s.createLabel(T.x, T.y + 35, "", 1, y),
                            y.addChild(this.label),
                            this.label.visible = !1,
                            this.curEq = y
                        }
                        return N(d, [{
                            key: "destroy",
                            value: function() {
                                if (this.containerRenderer.destroy(),
                                this.containerRenderer = null,
                                this.world.destroy(),
                                this.world = null,
                                this.pContainer.destroy(),
                                this.pContainer = null,
                                this.tube.destroy(),
                                this.tube = null,
                                this.label.removed(),
                                this.label = null,
                                !this.plugSlot.isEmpty()) {
                                    var g = r.getOwner(this.plugSlot.getCards()[0]);
                                    this.curEq.main.removeEq(g)
                                }
                            }
                        }, {
                            key: "update",
                            value: function(g) {
                                this.containerRenderer.rot = this.containerRenderer.parent.rotation,
                                this.containerRenderer.update(g),
                                this.gasBalanceWithAir()
                            }
                        }, {
                            key: "setLabelText",
                            value: function(g) {
                                this.label.labelText = g,
                                this.label.visible = !!g
                            }
                        }, {
                            key: "updateLabelText",
                            value: function(g, C) {
                                var T = s.getLabelStrByPos(g, C);
                                this.setLabelText(T)
                            }
                        }, {
                            key: "addPlug",
                            value: function(g) {
                                r.tryCardAddToSlot(g, this.plugSlot)
                            }
                        }, {
                            key: "showPourInTip",
                            value: function(g) {
                                this.containerRenderer.showPourInTip(g)
                            }
                        }, {
                            key: "getCapacity",
                            value: function() {
                                return this.containerRenderer.capacity
                            }
                        }, {
                            key: "hidePourTip",
                            value: function() {
                                this.containerRenderer.hidePourTip()
                            }
                        }, {
                            key: "geLiquidVolume",
                            value: function() {
                                return this.containerRenderer.geLiquidVolume()
                            }
                        }, {
                            key: "gasBalanceWithAir",
                            value: function() {
                                this.limitLiquidVolume();
                                var g = this.getGasPhase();
                                g && (g.volume = this.getCapacity() - this.geLiquidVolume(),
                                this.isConnectWithAir && (g.pressure = this.air.pressure))
                            }
                        }, {
                            key: "getGasPhase",
                            value: function() {
                                return this.world.getPhaseByType("g")[0]
                            }
                        }, {
                            key: "setPos",
                            value: function(g, C) {
                                this.pos.x = g,
                                this.pos.y = C
                            }
                        }, {
                            key: "addMouse",
                            value: function(g) {
                                this.pContainer.addMouse(g)
                            }
                        }, {
                            key: "updatePressureParam",
                            value: function() {
                                this.tube.updateParam(),
                                a.setGasParam(this.pContainer.gas, this.getGasPhase());
                                var g = this.containerRenderer.toGlobal(this.plugP);
                                this.tube.mouse0.userData.globalP = g,
                                this.tube.mouse1.userData.globalP = g,
                                this.tube.mouse0.userData.dir = new p(0,-1),
                                this.tube.mouse1.userData.dir = new p(0,1),
                                a.setMouseParam(this.tube.mouse0, this.getMouseParam(g)),
                                a.setMouseParam(this.tube.mouse1, a.getAirParam(this.air)),
                                this.tube.pTube.dp = 0,
                                this.tube.pTube.isBreak = this.isPluged()
                            }
                        }, {
                            key: "transferFluid",
                            value: function() {
                                this.tube.transferFluid(),
                                this.liquidFlowOut()
                            }
                        }, {
                            key: "getMouseParam",
                            value: function(g) {
                                return this.containerRenderer.getMouseParam(g)
                            }
                        }, {
                            key: "refreshAfterTransfer",
                            value: function() {
                                a.containerTransfer(this.pContainer, this.world),
                                this.gasBalanceWithAir()
                            }
                        }, {
                            key: "getCellTotalQ",
                            value: function() {
                                var g = 0
                                  , C = 0;
                                return this.world.forEachChemical(function(T) {
                                    T.valence !== 0 && (0 < T.valence ? g += T.mol * T.valence : C += T.mol * T.valence)
                                }),
                                [g, C]
                            }
                        }, {
                            key: "setWorldDirty",
                            value: function() {
                                this.world.forEachPhase(function(g) {
                                    g.setDirty()
                                })
                            }
                        }, {
                            key: "limitLiquidVolume",
                            value: function() {
                                var g = this.geLiquidVolume()
                                  , C = this.containerRenderer.capacity
                                  , T = m(1e-6, .01 * C);
                                C - g < T && this.world.reduceLiquid(g + T - C)
                            }
                        }, {
                            key: "updatePlugPos",
                            value: function(g) {
                                var C = t.getAABB(g);
                                this.plugP.y = C.y + C.height - 1e-10,
                                this.plugP.x = C.x + C.width / 2
                            }
                        }, {
                            key: "isPluged",
                            value: function() {
                                return !this.plugSlot.isEmpty()
                            }
                        }, {
                            key: "liquidFlowOut",
                            value: function() {
                                if (0 > this.tube.mouse1.v) {
                                    var g = this.tube.mouse1
                                      , C = this.tube
                                      , T = C.cdeque.getLastRemoveArr();
                                    T.forEach(function(A) {
                                        if (A.data.phaseType === "l") {
                                            var S = A.data.clone();
                                            S.mol = a.getItemMol(A, C.S),
                                            C.main.liquidDropManager.addDrop(S, g.userData.globalP)
                                        }
                                    })
                                }
                            }
                        }]),
                        d
                    }();
                    f.Cell = u
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "Apple",
                            e.insertLength = 395,
                            e.noBubble = !0,
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "removed",
                            value: function() {
                                this.eleAnimatManager.destory(),
                                k(E(c.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this),
                                this.totalCapacity = .001312,
                                this.setLabelParam(-60, 40, 1.2),
                                this.electrodeSlotR.userData.minV = 29e-5,
                                this.electrodeSlotL.userData.minV = 29e-5,
                                this.enableEleAni = this.showEleAni = !1,
                                this.canAddDrop = !1,
                                this.electrodeSlotR.assembleData.p0.set(60, -50),
                                this.electrodeSlotL.assembleData.p0.set(-60, -50),
                                this.bridgeSlotR.disabled = this.bridgeSlotL.disabled = !0,
                                this.pourInSlot.disabled = this.pourOutCard.disabled = !0,
                                this.catheterSlotR.disabled = this.catheterSlotL.disabled = !0,
                                this.dropperSlot.disabled = !0
                            }
                        }, {
                            key: "initData",
                            value: function(e) {
                                k(E(c.prototype), "initData", this).call(this, e);
                                var t = this.main.reactionEngine.createChemicalData("H2O", 0, "l", 60)
                                  , a = this.main.reactionEngine.createChemicalData("H2SO4", 0, "l", .1);
                                this.world.addChemical(t),
                                this.world.addChemical(a)
                            }
                        }, {
                            key: "update",
                            value: function(e) {
                                k(E(c.prototype), "update", this).call(this, e)
                            }
                        }, {
                            key: "getConfigureData",
                            value: function() {
                                var e = {
                                    confArr: []
                                };
                                return e
                            }
                        }]),
                        c
                    }(m.ElectroBeaker);
                    m.Apple = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.electroChemistry.FilterPaperType
                      , p = h.plugins.ComponentProperty
                      , c = function(l) {
                        function i(t) {
                            var a;
                            return q(this, i),
                            a = e.call(this, t),
                            a.className = "FilterPaper",
                            a.insertLength = 395,
                            a.noBubble = !0,
                            a.type = f.H2SO4,
                            a
                        }
                        H(i, l);
                        var e = M(i);
                        return N(i, [{
                            key: "removed",
                            value: function() {
                                this.eleAnimatManager.destory(),
                                k(E(i.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(i.prototype), "init", this).call(this),
                                this.totalCapacity = .001312,
                                this.setLabelParam(-60, 40, 1.2),
                                this.electrodeSlotR.userData.minV = 29e-5,
                                this.electrodeSlotL.userData.minV = 29e-5,
                                this.enableEleAni = this.showEleAni = !1,
                                this.canAddDrop = !1,
                                this.electrodeSlotR.assembleData.p0.set(100, -50),
                                this.electrodeSlotL.assembleData.p0.set(-100, -50),
                                this.bridgeSlotR.disabled = this.bridgeSlotL.disabled = !0,
                                this.pourInSlot.disabled = this.pourOutCard.disabled = !0,
                                this.catheterSlotR.disabled = this.catheterSlotL.disabled = !0,
                                this.dropperSlot.disabled = !0
                            }
                        }, {
                            key: "initData",
                            value: function(a) {
                                k(E(i.prototype), "initData", this).call(this, a),
                                this.setMed(this.type)
                            }
                        }, {
                            key: "setMed",
                            value: function(a) {
                                var n, o, s;
                                switch (this.world.clear(),
                                a) {
                                case f.H2SO4:
                                    n = this.main.reactionEngine.createChemicalData("H2O", 0, "l", 60),
                                    o = this.main.reactionEngine.createChemicalData("H2SO4", 0, "l", .1),
                                    this.world.addChemical(n),
                                    this.world.addChemical(o);
                                    break;
                                case f.NaOH:
                                    n = this.main.reactionEngine.createChemicalData("H2O", 0, "l", 60),
                                    s = this.main.reactionEngine.createChemicalData("NaOH", 0, "l", .1),
                                    this.world.addChemical(n),
                                    this.world.addChemical(s);
                                    break
                                }
                                this.containerRenderer.fillWithAir()
                            }
                        }, {
                            key: "update",
                            value: function(a) {
                                k(E(i.prototype), "update", this).call(this, a)
                            }
                        }, {
                            key: "getConfigureData",
                            value: function() {
                                var a = this
                                  , n = {
                                    confArr: []
                                };
                                return n.confArr.push(p.getRadio("\u7C7B\u578B", this.type, ["H2SO4", "NaOH"], function(o) {
                                    a.setType(o)
                                }, this)),
                                n
                            }
                        }, {
                            key: "setType",
                            value: function(a) {
                                this.type === a || (this.type = a,
                                this.setMed(this.type))
                            }
                        }, {
                            key: "getData",
                            value: function() {
                                var a = k(E(i.prototype), "getData", this).call(this);
                                return a.type = this.type,
                                a
                            }
                        }, {
                            key: "setData",
                            value: function(a) {
                                k(E(i.prototype), "setData", this).call(this, a),
                                a.type !== void 0 && this.setType(a.type)
                            }
                        }]),
                        i
                    }(m.ElectroBeaker);
                    m.FilterPaper = c
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "FourCellElectrolyzer",
                            console.log("4\u5BA4\u7535\u89E3\u69FD"),
                            e.plugXAry = [524, 174, -176, -525],
                            e.capacityVertexs = [[{
                                x: 689,
                                y: -236
                            }, {
                                x: 689,
                                y: 210
                            }, {
                                x: 350,
                                y: 210
                            }, {
                                x: 350,
                                y: -236
                            }], [{
                                x: 350,
                                y: -236
                            }, {
                                x: 350,
                                y: 210
                            }, {
                                x: 0,
                                y: 210
                            }, {
                                x: 0,
                                y: -236
                            }], [{
                                x: 0,
                                y: -236
                            }, {
                                x: 0,
                                y: 210
                            }, {
                                x: -350,
                                y: 210
                            }, {
                                x: -350,
                                y: -236
                            }], [{
                                x: -350,
                                y: -236
                            }, {
                                x: -350,
                                y: 210
                            }, {
                                x: -689,
                                y: 210
                            }, {
                                x: -689,
                                y: -236
                            }]],
                            e.cellWidth = 1456,
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this)
                            }
                        }]),
                        c
                    }(m.Electrolyzer);
                    m.FourCellElectrolyzer = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.chemistry.ChemicalEquipment
                      , p = function(c) {
                        function l(e) {
                            var t;
                            return q(this, l),
                            t = i.call(this, e),
                            t.className = "FuelCellDevice",
                            console.log("\u71C3\u6599\u7535\u6C60\u88C5\u7F6E"),
                            t
                        }
                        H(l, c);
                        var i = M(l);
                        return N(l)
                    }(f);
                    m.FuelCellDevice = p
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "HugeBeaker",
                            e.insertLength = 395,
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "removed",
                            value: function() {
                                this.eleAnimatManager.destory(),
                                k(E(c.prototype), "removed", this).call(this)
                            }
                        }, {
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this),
                                this.totalCapacity = .001312,
                                this.setLabelParam(-60, 40, 1.2),
                                this.electrodeSlotR.userData.minV = 29e-5,
                                this.electrodeSlotL.userData.minV = 29e-5
                            }
                        }, {
                            key: "update",
                            value: function(e) {
                                k(E(c.prototype), "update", this).call(this, e)
                            }
                        }, {
                            key: "getIsBreak",
                            value: function() {
                                return 29e-5 > this.geLiquidTotalVolume()
                            }
                        }]),
                        c
                    }(m.ElectroBeaker);
                    m.HugeBeaker = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "ThreeCellElectrolyzer",
                            e.plugXAry = [349, -1, -350],
                            e.capacityVertexs = [[{
                                x: 515,
                                y: -236
                            }, {
                                x: 515,
                                y: 210
                            }, {
                                x: 175,
                                y: 210
                            }, {
                                x: 175,
                                y: -236
                            }], [{
                                x: 175,
                                y: -236
                            }, {
                                x: 175,
                                y: 210
                            }, {
                                x: -175,
                                y: 210
                            }, {
                                x: -175,
                                y: -236
                            }], [{
                                x: -175,
                                y: -236
                            }, {
                                x: -175,
                                y: 210
                            }, {
                                x: -515,
                                y: 210
                            }, {
                                x: -515,
                                y: -236
                            }]],
                            e.cellWidth = 1080,
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this)
                            }
                        }]),
                        c
                    }(m.Electrolyzer);
                    m.ThreeCellElectrolyzer = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "TwoCellElectrolyzer",
                            console.log("2\u5BA4\u7535\u89E3\u69FD"),
                            e.plugXAry = [174, -174.5],
                            e.capacityVertexs = [[{
                                x: 339,
                                y: -236
                            }, {
                                x: 339,
                                y: 210
                            }, {
                                x: 0,
                                y: 210
                            }, {
                                x: 0,
                                y: -236
                            }], [{
                                x: 0,
                                y: -236
                            }, {
                                x: 0,
                                y: 210
                            }, {
                                x: -339,
                                y: 210
                            }, {
                                x: -339,
                                y: -236
                            }]],
                            e.cellWidth = 722,
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this)
                            }
                        }]),
                        c
                    }(m.Electrolyzer);
                    m.TwoCellElectrolyzer = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.max;
                (function(p) {
                    var c = PIXI.Graphics
                      , l = PIXI.Container
                      , i = PIXI.Text
                      , e = PIXI.Sprite
                      , t = 1.7
                      , a = 70 * t
                      , n = 300 * t
                      , o = 60 * t
                      , s = function() {
                        function r(u) {
                            q(this, r),
                            this.setedPos = !1,
                            this.offsetX = 0,
                            this.main = u,
                            this.init()
                        }
                        return N(r, [{
                            key: "init",
                            value: function() {
                                this.initCtrBox(),
                                this.initCtrCon()
                            }
                        }, {
                            key: "destroy",
                            value: function() {
                                var d = this;
                                this.ctrBox.parent && this.ctrBox.parent.removeChild(this.ctrBox),
                                this.ctrBox.destroy(),
                                this.ctrBox = null,
                                this.ctrCon.parent && this.ctrCon.parent.removeChild(this.ctrCon),
                                this.ctrCon.destroy(),
                                this.ctrCon = null,
                                this.curProCon.children.forEach(function(y) {
                                    y instanceof i && d.main.removeText(y)
                                }),
                                this.curProCon.destroy(),
                                this.curProCon = null
                            }
                        }, {
                            key: "showCtrCon",
                            value: function() {
                                this.ctrCon.visible || (this.ctrCon.visible = !0,
                                this.ctrBox.visible = !0)
                            }
                        }, {
                            key: "hideCtrCon",
                            value: function() {
                                this.ctrCon.visible = !1,
                                this.ctrBox.visible = !1
                            }
                        }, {
                            key: "setPos",
                            value: function(d, y) {
                                this.ctrBox.x = d,
                                this.ctrBox.y = y,
                                this.setedPos = !0
                            }
                        }, {
                            key: "setPercent",
                            value: function(d) {
                                this.progressBtn.x = d * n,
                                this.setStatusGra(d)
                            }
                        }, {
                            key: "setOffsetX",
                            value: function(d) {
                                this.offsetX !== d && (this.ctrBox.x += d - this.offsetX,
                                this.offsetX = d)
                            }
                        }, {
                            key: "setStatusGra",
                            value: function(d) {
                                .4 > d ? (this.statusGra0.alpha = 1,
                                this.statusGra1.alpha = 0,
                                this.statusGra2.alpha = 0) : .6 > d ? (this.statusGra0.alpha = 1,
                                this.statusGra1.alpha = 1,
                                this.statusGra2.alpha = 0) : (this.statusGra0.alpha = 1,
                                this.statusGra1.alpha = 1,
                                this.statusGra2.alpha = 1)
                            }
                        }, {
                            key: "initCtrBox",
                            value: function() {
                                var d = new c;
                                d.beginFill(1447704, .8),
                                d.drawRoundedRect(-(n + 100 * t) / 2, 0, n + 100 * t, o, 10 * t),
                                d.endFill(),
                                this.drawTip(d, .3 * -n + 20 * t, 6 * t, a, 24 * t, 2501164),
                                this.drawTip(d, 20 * t, 6 * t, a, 24 * t, 2501164),
                                this.drawTip(d, .3 * n + 20 * t, 6 * t, a, 24 * t, 2501164),
                                this.ctrBox = new l,
                                this.ctrBox.visible = !1,
                                this.ctrBox.addChild(d),
                                this.ctrBox.allowGetBounds = !1,
                                this.main.containerAddChild(this.ctrBox)
                            }
                        }, {
                            key: "initCtrCon",
                            value: function() {
                                var d = new l;
                                d.allowGetBounds = !1,
                                d.visible = !1,
                                this.ctrBox.addChild(d),
                                this.ctrCon = d,
                                this.ctrCon.x = -n / 2 + 20 * t,
                                this.ctrCon.y = 40 * t,
                                this.initPlayCon(),
                                this.initProgressBar(),
                                this.initCurProgress()
                            }
                        }, {
                            key: "initPlayCon",
                            value: function() {
                                var d = this
                                  , y = new l;
                                this.ctrBox.addChild(y);
                                var g = e.fromImage("Skin/play.png");
                                g.anchor.set(.5, .5),
                                g.visible = !1;
                                var C = e.fromImage("Skin/pause.png");
                                C.anchor.set(.5, .5),
                                y.addChild(g),
                                y.addChild(C),
                                this.spPause = C,
                                this.spPlay = g,
                                y.x = -n / 2 - 10 * t,
                                y.y = 30 * t,
                                y.interactive = !0,
                                y.scale.set(t),
                                this.main.containerAddCursor(y, h.CursorType.Hand),
                                y.addEventListener("pointerdown", function() {
                                    var T = !d.main.getPauseStatus();
                                    d.setPauseStatus(T)
                                })
                            }
                        }, {
                            key: "initProgressBar",
                            value: function() {
                                var d = this
                                  , y = new l
                                  , g = new c;
                                g.beginFill(16711680, 0),
                                g.drawRect(0, -10 * t, n, 30 * t),
                                g.beginFill(16777215, .3),
                                g.drawRect(0, -2, n, 4),
                                y.addChild(g),
                                this.ctrCon.addChild(y),
                                this.main.containerAddCursor(y, h.CursorType.Hand),
                                y.addEventListener("pointerdown", function(C) {
                                    var T = y.toLocal(C.data.global).x;
                                    T = m(n, f(T, 0)),
                                    d.progressBtn.x = T,
                                    d.lastPlayStatus = d.main.getPauseStatus(),
                                    d.main.setAniPercent(T / n),
                                    d.setPauseStatus(!0),
                                    d.setStatusGra(T / n),
                                    d.isOnSetAni = !0
                                }),
                                y.addEventListener("pointermove", function(C) {
                                    if (d.isOnSetAni) {
                                        var T = y.toLocal(C.data.global).x;
                                        T = m(.999 * n, f(T, 0)),
                                        d.progressBtn.x = T,
                                        d.main.setAniPercent(T / n),
                                        d.setStatusGra(T / n)
                                    }
                                }),
                                y.addEventListener("pointerup", function(C) {
                                    d.isOnSetAni = !1,
                                    d.setPauseStatus(d.lastPlayStatus)
                                }),
                                y.addEventListener("pointerupoutside", function(C) {
                                    d.isOnSetAni = !1,
                                    d.setPauseStatus(d.lastPlayStatus)
                                })
                            }
                        }, {
                            key: "initCurProgress",
                            value: function() {
                                this.curProCon = new l,
                                this.ctrCon.addChild(this.curProCon),
                                this.initStatusGra(),
                                this.initText(),
                                this.initProgressBtn()
                            }
                        }, {
                            key: "initStatusGra",
                            value: function() {
                                var d = this
                                  , y = new c;
                                y.beginFill(1591870),
                                y.drawRect(0, -2, .4 * n, 4),
                                y.endFill(),
                                this.drawTip(y, .2 * n, -34 * t, a, 24 * t, 1591870),
                                this.curProCon.addChildAt(y, 0),
                                this.statusGra0 = y;
                                var g = new c;
                                g.beginFill(7422490),
                                g.drawRect(.4 * n, -2, .2 * n, 4),
                                g.endFill(),
                                this.drawTip(g, .5 * n, -34 * t, a, 24 * t, 7422490),
                                this.curProCon.addChildAt(g, 0),
                                this.statusGra1 = g;
                                var C = new c;
                                C.beginFill(1983600),
                                C.drawRect(.6 * n, -2, .4 * n, 4),
                                C.endFill(),
                                this.drawTip(C, .8 * n, -34 * t, a, 24 * t, 1983600),
                                this.curProCon.addChildAt(C, 0),
                                this.statusGra2 = C;
                                var T = new c;
                                T.beginFill(16777215),
                                T.drawRoundedRect(.4 * n - 2, -4, 4, 8, 2),
                                T.drawRoundedRect(.6 * n - 2, -4, 4, 8, 2),
                                this.curProCon.addChild(T),
                                this.main.containerAddCursor(this.statusGra0, h.CursorType.Hand),
                                this.main.containerAddCursor(this.statusGra1, h.CursorType.Hand),
                                this.main.containerAddCursor(this.statusGra2, h.CursorType.Hand),
                                this.statusGra0.addEventListener("pointerdown", function() {
                                    d.setPercent(0),
                                    d.main.setAniPercent(0)
                                }),
                                this.statusGra1.addEventListener("pointerdown", function() {
                                    d.setPercent(.4),
                                    d.main.setAniPercent(.4)
                                }),
                                this.statusGra2.addEventListener("pointerdown", function() {
                                    d.setPercent(.6),
                                    d.main.setAniPercent(.6)
                                })
                            }
                        }, {
                            key: "initText",
                            value: function() {
                                var d = this.main.getText("\u53CD\u5E94\u9636\u6BB5", {
                                    fill: 16777215,
                                    stroke: 0,
                                    fontSize: 28 * t
                                });
                                d.anchor.set(0);
                                var y = this.main.getText("\u751F\u6210\u9636\u6BB5", {
                                    fill: 16777215,
                                    stroke: 0,
                                    fontSize: 28 * t
                                });
                                d.anchor.set(0);
                                var g = this.main.getText("\u5E73\u8861\u9636\u6BB5", {
                                    fill: 16777215,
                                    stroke: 0,
                                    fontSize: 28 * t
                                });
                                d.anchor.set(.5),
                                y.anchor.set(.5),
                                g.anchor.set(.5),
                                d.scale.set(.5),
                                y.scale.set(.5),
                                g.scale.set(.5),
                                d.x = .2 * n,
                                y.x = .5 * n,
                                g.x = .8 * n,
                                d.y = y.y = g.y = -22 * t,
                                d.alpha = y.alpha = g.alpha = .8,
                                this.curProCon.addChild(d),
                                this.curProCon.addChild(y),
                                this.curProCon.addChild(g)
                            }
                        }, {
                            key: "initProgressBtn",
                            value: function() {
                                var d = new c;
                                d.beginFill(2328041),
                                d.drawCircle(0, 0, 8 * t),
                                d.endFill(),
                                d.beginFill(1447704),
                                d.drawCircle(0, 0, 6 * t),
                                d.endFill(),
                                this.ctrCon.addChild(d),
                                this.progressBtn = d
                            }
                        }, {
                            key: "setPauseStatus",
                            value: function(d) {
                                this.main.setPauseStatus(d),
                                this.spPause.visible = !d,
                                this.spPlay.visible = d
                            }
                        }, {
                            key: "drawTip",
                            value: function(d, y, g, C, T, A) {
                                var S = 6 < arguments.length && arguments[6] !== void 0 ? arguments[6] : 1;
                                d.beginFill(A, S),
                                d.drawRoundedRect(y - C / 2, g, C, T, 6 * t),
                                d.moveTo(y - 5 * t, g + T),
                                d.lineTo(y + 5 * t, g + T),
                                d.lineTo(y, g + T + 6 * t),
                                d.closePath(),
                                d.endFill()
                            }
                        }]),
                        r
                    }();
                    p.EleAniCtrBarManager = s
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.max
                  , p = Math.abs;
                (function(c) {
                    var l = PIXI.Point
                      , i = h.utils.NBMath
                      , e = N(function a(n, o, s, r) {
                        q(this, a),
                        this.formula = n,
                        this.valence = o,
                        this.count = s,
                        this.multiple = r,
                        this.dltValence = 0,
                        this.animationDataAry = []
                    });
                    c.EleAniElementData = e;
                    var t = function() {
                        function a(n) {
                            q(this, a),
                            this.posMap = new Map,
                            this.duration = 15,
                            this.container = n,
                            this.main = this.container.main,
                            this.timeLineMap = null,
                            this.posMap = this.posMap,
                            this.ctrBarManager = new c.EleAniCtrBarManager(this)
                        }
                        return N(a, [{
                            key: "containerAddChild",
                            value: function(o) {
                                this.container.addChild(o)
                            }
                        }, {
                            key: "containerAddCursor",
                            value: function(o, s) {
                                this.container.addCursor(o, s)
                            }
                        }, {
                            key: "setPauseStatus",
                            value: function(o) {
                                this.isPause = o,
                                this.timeLineMap && (this.isPause ? this.timeLineMap.timeLine.pause() : this.timeLineMap.timeLine.play())
                            }
                        }, {
                            key: "getPauseStatus",
                            value: function() {
                                return this.isPause
                            }
                        }, {
                            key: "activeCtrCon",
                            value: function() {
                                if (this.ctrBarManager.showCtrCon(),
                                !this.ctrBarManager.setedPos) {
                                    var o = this.container.getLocalBounds();
                                    this.ctrBarManager.setPos(o.x + o.width / 2, o.y + o.height + 10)
                                }
                            }
                        }, {
                            key: "removeTimeLine",
                            value: function() {
                                var o = this;
                                this.timeLineMap && (this.timeLineMap.timeLine.kill(),
                                this.timeLineMap.graAry.map(function(s) {
                                    o.removeChemMaterDis(s)
                                }),
                                this.timeLineMap = null,
                                this.setAniPercent(0),
                                this.isPause = !1,
                                this.ctrBarManager.hideCtrCon())
                            }
                        }, {
                            key: "destory",
                            value: function() {
                                this.removeTimeLine(),
                                this.container = null,
                                this.ctrBarManager.destroy(),
                                this.ctrBarManager = null,
                                this.main = null,
                                this.posMap = null
                            }
                        }, {
                            key: "update",
                            value: function(o) {
                                o ? !this.timeLineMap && this.creatNewTimeLineMap() : this.timeLineMap && this.removeTimeLine()
                            }
                        }, {
                            key: "setAniPercent",
                            value: function(o, s) {
                                this.timeLineMap && (s && (this.isPause = !0,
                                this.timeLineMap.timeLine.pause()),
                                this.timeLineMap.timeLine.seek(o * this.duration, !1))
                            }
                        }, {
                            key: "creatNewTimeLineMap",
                            value: function() {
                                this.activeCtrCon();
                                var o = []
                                  , s = this.container.getLeftPole()
                                  , r = this.container.getRightPole()
                                  , u = 0 > s.I ? s : r
                                  , d = u === s ? r : s
                                  , y = 0;
                                s.className === "SaltBridge" && (y = 188),
                                r.className === "SaltBridge" && (y = -152),
                                this.ctrBarManager.setOffsetX(y);
                                var g = this.container.getTransferEleCount()
                                  , C = [0, 0, 0, 0]
                                  , T = this.container.containMembrane && this.container.containMembrane();
                                if (u.className === "SaltBridge") {
                                    var A = u.type;
                                    this.creatBridgeEleAni(o, !0, g, A)
                                } else {
                                    var S = u.getElectroHalfReaction();
                                    if (!S)
                                        return void this.ctrBarManager.hideCtrCon();
                                    var B = p(S.react.reactants.find(function(L) {
                                        return L.formula === "e"
                                    }).coefficient)
                                      , b = i.getLCM(g, B)
                                      , P = b / B;
                                    this.creatEleAniElementData(S.react.reactants, o, "p", "reactants", P, C, []),
                                    this.creatEleAniElementData(S.react.products, o, "p", "products", P, C, S.react.reactants),
                                    T && this.balanceIon(C, u, o, u)
                                }
                                if (d.className === "SaltBridge") {
                                    var I = d.type;
                                    this.creatBridgeEleAni(o, !1, g, I)
                                } else {
                                    var O = d.getElectroHalfReaction();
                                    if (!O)
                                        return void this.ctrBarManager.hideCtrCon();
                                    var D = p(O.react.reactants.find(function(L) {
                                        return L.formula === "e"
                                    }).coefficient)
                                      , w = i.getLCM(g, D)
                                      , R = w / D;
                                    this.creatEleAniElementData(O.react.reactants, o, "n", "reactants", R, C, []),
                                    this.creatEleAniElementData(O.react.products, o, "n", "products", R, C, O.react.reactants),
                                    T && this.balanceIon(C, u, o, d)
                                }
                                this.balanceIon(C, u, o),
                                (C[0] || C[2] || C[3]) !== 0 && 1e3 < this.container.width && this.container.getMembraneXByValence && 500 > p(this.container.getMembraneXByValence(1, 1)[0]) && 500 > p(this.container.getMembraneXByValence(1, 2)[0]) && this.checkedElectrolyzer(o, u, d),
                                this.creatTimeLineMax(o, u, d)
                            }
                        }, {
                            key: "balanceIon",
                            value: function(o, s, r, u) {
                                if (o[0] + o[1] !== 0) {
                                    var d = 0, y;
                                    if (this.container.getMembraneXByValence) {
                                        var g = this.container.getCellsLen();
                                        if (u) {
                                            var C = this.container.toLocal(u.toGlobal(new l(0,0))).x;
                                            d = 0 < C ? 0 : g - 1,
                                            y = u === s ? "pLiquid" : "nLiquid",
                                            o[2] + o[3] !== 0 && (p(o[0] + o[1]) > p(o[2] + o[3]) ? (this.supCreateEleAniData(r, o[2] + o[3], d, y, y),
                                            o[0] -= o[3],
                                            o[1] -= o[2],
                                            o[2] = 1,
                                            o[3] = -1) : (o[2] -= o[1],
                                            o[3] -= o[0]))
                                        } else {
                                            var T = this.container.toLocal(s.toGlobal(new l(0,0))).x;
                                            (0 < o[0] + o[1] && 0 > T || 0 > o[0] + o[1] && 0 < T) && (d = g - 1)
                                        }
                                    }
                                    this.supCreateEleAniData(r, o[0] + o[1], d, y),
                                    o[0] = 1,
                                    o[1] = -1
                                }
                            }
                        }, {
                            key: "supCreateEleAniData",
                            value: function(o, s) {
                                var r = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : 0
                                  , u = 3 < arguments.length ? arguments[3] : void 0
                                  , d = 4 < arguments.length ? arguments[4] : void 0
                                  , y = this.container.getMaxMolIonMed(0 > s, r);
                                if (!y)
                                    return void console.warn("\u7F3A\u5C11" + (0 < s ? "\u9633\u79BB\u5B50" : "\u9634\u79BB\u5B50"));
                                var g = y.dataStruct.data
                                  , C = i.getLCM(-g.valence, s);
                                1 < C / s && o.forEach(function(P) {
                                    P.multiple *= C / s
                                });
                                var T = new e(g.formula,g.valence,C / -g.valence,1)
                                  , A = {
                                    percent: 0,
                                    posType: u || (0 < g.valence ? "pLiquid" : "nLiquid"),
                                    alpha: 0
                                }
                                  , S = {
                                    percent: .1,
                                    posType: "same",
                                    alpha: 1
                                }
                                  , B = {
                                    percent: .9,
                                    posType: d || 0 < g.valence ? "nLiquid" : "pLiquid",
                                    alpha: 1
                                }
                                  , b = {
                                    percent: 1,
                                    posType: "same",
                                    alpha: 0
                                };
                                T.animationDataAry.push(A, S, B, b),
                                o.push(T)
                            }
                        }, {
                            key: "checkedElectrolyzer",
                            value: function(o, s, r) {
                                var u = this, d = 0, y, g, C;
                                o.map(function(B) {
                                    if (B.valence !== 0) {
                                        var b = B.animationDataAry[0].posType;
                                        if (b[0] === "n" || b[0] === "p") {
                                            for (var P = 1, I; P < B.animationDataAry.length; P++)
                                                if (I = B.animationDataAry[P].posType,
                                                b.charCodeAt(0) + I.charCodeAt(0) === 222) {
                                                    var O = b[0] === "p" ? s : r
                                                      , D = O.getLocalBounds()
                                                      , w = u.container.toLocal(O.toGlobal({
                                                        x: D.x + D.width / 2,
                                                        y: D.y + D.height / 2
                                                    }))
                                                      , R = 0 < w.x ? 1 : -1;
                                                    0 < B.valence ? (d += (B.dltValence || B.valence) * B.multiple * B.count,
                                                    y = u.container.getMembraneIndexByValence(R, 2),
                                                    C = R) : g = u.container.getMembraneIndexByValence(R, 1)
                                                }
                                        }
                                    }
                                });
                                var T = this.container.getCellsLen();
                                if (0 < d && y + g < T) {
                                    var A, S;
                                    y + g === T - 1 ? A = S = 0 < C ? g : y : this.container.getMembraneXByValence(1, 2).length === 2 ? A = S = 0 > C ? 2 : 1 : this.container.getMembraneXByValence(1, 1).length === 2 ? A = S = 0 < C ? 2 : 1 : (A = 0 > C ? 2 : 1,
                                    S = 3 - A),
                                    this.supCreateEleAniData(o, d, T - 1 - A, "cell_" + (A - T / 2)),
                                    this.supCreateEleAniData(o, -d, T - 1 - S, "cell_" + (S - T / 2))
                                }
                            }
                        }, {
                            key: "creatBridgeEleAni",
                            value: function(o, s, r, u) {
                                var d = new e(s ? "K" : u === c.SaltBridgeType.KCL ? "Cl" : "NO3",s ? 1 : -1,r,1)
                                  , y = {
                                    percent: .2,
                                    posType: s ? "pBridge" : "nBridge",
                                    alpha: 0
                                }
                                  , g = {
                                    percent: .3,
                                    posType: "same",
                                    alpha: 1
                                }
                                  , C = {
                                    percent: .6,
                                    posType: "bridgeBottom",
                                    alpha: 1
                                }
                                  , T = {
                                    percent: .9,
                                    posType: s ? "nLiquid" : "pLiquid",
                                    alpha: 1
                                }
                                  , A = {
                                    percent: 1,
                                    posType: "same",
                                    alpha: 0
                                };
                                d.animationDataAry.push(y, g, C, T, A),
                                o.push(d)
                            }
                        }, {
                            key: "creatEleAniElementData",
                            value: function(o, s, r, u, d, y, g) {
                                o.forEach(function(C) {
                                    var T = new e(C.formula,C.valence,p(C.coefficient),d);
                                    if (u !== "reactants") {
                                        var A = {
                                            percent: .5,
                                            posType: r + "Reaction",
                                            alpha: 0
                                        }
                                          , S = {
                                            percent: .6,
                                            posType: "same",
                                            alpha: 1
                                        }
                                          , B = {
                                            percent: .9,
                                            posType: "same",
                                            alpha: 1
                                        }
                                          , b = {
                                            percent: 1,
                                            posType: "same",
                                            alpha: 0
                                        };
                                        C.valence === 0 ? (C.phaseType === "g" && (B.posType = "liquidTop"),
                                        C.phaseType === "l" && (B.posType = r + "Liquid")) : 0 < C.valence ? (B.posType = "nLiquid",
                                        y[2] += C.valence * d * p(C.coefficient)) : (B.posType = "pLiquid",
                                        y[3] += C.valence * d * p(C.coefficient)),
                                        T.animationDataAry.push(A, S, B, b)
                                    } else if (C.formula === "e") {
                                        var P = {
                                            percent: .1,
                                            posType: "nTop",
                                            alpha: 1
                                        }
                                          , I = {
                                            percent: .4,
                                            posType: r + "Reaction",
                                            alpha: 1
                                        }
                                          , O = {
                                            percent: .5,
                                            posType: "same",
                                            alpha: 1
                                        }
                                          , D = {
                                            percent: .6,
                                            posType: "same",
                                            alpha: 0
                                        };
                                        T.animationDataAry.push(P, I, O, D),
                                        r === "p" && (P.posType = r + "Reaction",
                                        P.alpha = 0,
                                        P.percent = .5,
                                        I.percent = .6,
                                        O.percent = .9,
                                        O.alpha = 1,
                                        O.posType = r + "Top",
                                        D.percent = 1)
                                    } else {
                                        var w = {
                                            percent: 0,
                                            posType: r + "Reaction",
                                            alpha: 0
                                        }
                                          , R = {
                                            percent: .1,
                                            posType: "same",
                                            alpha: 1
                                        }
                                          , L = {
                                            percent: .4,
                                            posType: r + "Reaction",
                                            alpha: 1
                                        }
                                          , G = {
                                            percent: .5,
                                            posType: "same",
                                            alpha: 1
                                        }
                                          , V = {
                                            percent: .6,
                                            posType: "same",
                                            alpha: 0
                                        };
                                        C.valence !== 0 || C.phaseType === "l" ? (w.posType = r + "Liquid",
                                        0 < C.valence ? y[0] += C.valence * d * p(C.coefficient) : y[1] += C.valence * d * p(C.coefficient)) : C.phaseType === "g" && (w.posType = r + "Tube",
                                        w.alpha = .5,
                                        R.posType = r + "Tube",
                                        R.percent = .2),
                                        T.animationDataAry.push(w, R, L, G, V)
                                    }
                                    C.formula !== "e" && g.forEach(function(W) {
                                        C.formula === W.formula && 0 < (r === "p" ? 1 : -1) * (C.valence - W.valence) && (T.dltValence = C.valence - W.valence)
                                    }),
                                    s.push(T)
                                })
                            }
                        }, {
                            key: "creatTimeLineMax",
                            value: function(o, s, r) {
                                var u = this
                                  , d = {
                                    timeLine: new TimelineMax({
                                        onComplete: function() {
                                            u.removeTimeLine()
                                        },
                                        onUpdate: function() {
                                            var D = d.timeLine.progress();
                                            u.ctrBarManager.setPercent(D)
                                        }
                                    }),
                                    graAry: []
                                }
                                  , y = new Map
                                  , g = d.timeLine;
                                this.isPause && g.pause(!0);
                                var C = d.graAry
                                  , T = this.container.getLiquidRect()
                                  , A = he(T, 4)
                                  , S = A[0]
                                  , B = A[1]
                                  , b = A[2]
                                  , P = A[3]
                                  , I = (S + B) / 2;
                                o.map(function(O) {
                                    for (var D = O.multiple, w = O.count, R = O.valence, L = s.getLocalBounds(), G = r.getLocalBounds(), V = u.container.toLocal(s.toGlobal({
                                        x: L.x + L.width / 2,
                                        y: L.y + L.height / 2
                                    })), W = u.container.toLocal(r.toGlobal({
                                        x: G.x + G.width / 2,
                                        y: G.y + G.height / 2
                                    })), ie = 0, ne; ie < D; ie++) {
                                        ne = function(ye) {
                                            var x = u.createChemMaterial(O.formula, R);
                                            u.container.addChild(x),
                                            C.push(x);
                                            for (var se = 1; se < O.animationDataAry.length; se++) {
                                                var X = O.animationDataAry[se - 1]
                                                  , Q = O.animationDataAry[se]
                                                  , Z = {
                                                    alpha: Q.alpha
                                                }
                                                  , z = void 0;
                                                if (se == 1) {
                                                    if (x.alpha = X.alpha,
                                                    X.posType === "nTop" && (y.get(X.posType) ? z = y.get(X.posType) : (z = new l(W.x,W.y - r.height / 2 + 30),
                                                    y.set(X.posType, z)),
                                                    x.x = (ye - (w - 1) / 2) * (x.spWidth + 2) + z.x,
                                                    x.y = ie * (x.spHeight + 2) + z.y),
                                                    X.posType.includes("Reaction")) {
                                                        var pe = X.posType + "_" + ie;
                                                        if (y.get(pe))
                                                            z = y.get(pe);
                                                        else {
                                                            var ge = X.posType === "pReaction" ? s : r
                                                              , me = X.posType === "pReaction" ? V : W;
                                                            z = new l(me.x + ge.width * (Math.random() - .5),b + Math.random() * (me.y + ge.height / 2 - b)),
                                                            y.set(pe, z)
                                                        }
                                                        x.x = z.x,
                                                        x.y = z.y
                                                    }
                                                    if (X.posType.indexOf("Tube") === 1) {
                                                        var ce = void 0;
                                                        if (y.get(X.posType))
                                                            ce = y.get(X.posType);
                                                        else {
                                                            var ue = X.posType === "pTube" ? V : W
                                                              , be = I > ue.x ? S : f(I, B - 320)
                                                              , ke = I > ue.x ? m(I, S + 320) : B
                                                              , Re = be + x.spWidth / 2 + (ke - be - x.spWidth) * Math.random()
                                                              , ht = b + (P - b - x.spHeight / 2) * Math.random();
                                                            ce = u.container.getMouseLocalPosBySide(ue.x < I, new l(Re,ht))
                                                        }
                                                        x.x = ce.x,
                                                        x.y = (ye - (w - 1) / 2) * (x.spHeight + 2) - 250
                                                    }
                                                    if (X.posType.indexOf("Liquid") === 1) {
                                                        for (var xe = X.posType === "pLiquid" ? s : r, qe = X.posType === "pLiquid" ? V : W, De = void 0, Le = void 0, je = I > qe.x ? S : f(I, B - 300), ft = I > qe.x ? m(I, S + 300) : B; De = je + x.spWidth / 2 + (ft - je - x.spWidth) * Math.random(),
                                                        Le = b + (P - b - x.spHeight / 2) * Math.random(),
                                                        !(Le - x.spHeight > qe.y + xe.height / 2 || De - x.spWidth / 2 > qe.x + xe.width / 2 || De + x.spWidth / 2 < qe.x - xe.width / 2); )
                                                            ;
                                                        x.y = Le,
                                                        x.x = De
                                                    }
                                                    if (X.posType.indexOf("Bridge") === 1) {
                                                        var Fe = X.posType === "pBridge" ? V : W
                                                          , Xe = Fe.x - 170 + x.spWidth / 2 + Math.random() * (75 - x.spWidth);
                                                        Fe.x < I && (Xe += 265),
                                                        x.x = Xe,
                                                        x.y = Fe.y - 100 + 200 * Math.random()
                                                    }
                                                    if (X.posType.includes("cell_")) {
                                                        var pt = +X.posType.split("_")[1];
                                                        x.x = 350 * pt + 50 + 240 * Math.random(),
                                                        x.y = b + (P - b - x.spHeight / 2) * Math.random()
                                                    }
                                                }
                                                if (Q.posType === "pTop" && (y.get(Q.posType) ? z = y.get(Q.posType) : (z = new l(V.x,V.y - s.height / 2 + 30),
                                                y.set(Q.posType, z)),
                                                Z.x = (ye - (w - 1) / 2) * (x.spWidth + 2) + z.x,
                                                Z.y = ie * (x.spHeight + 2) + z.y),
                                                Q.posType.indexOf("Tube") === 1) {
                                                    var He = void 0;
                                                    if (y.get(Q.posType))
                                                        He = y.get(Q.posType);
                                                    else {
                                                        var _e = Q.posType === "pTube" ? V : W
                                                          , Ze = I > _e.x ? S : f(I, B - 320)
                                                          , dt = I > _e.x ? m(I, S + 320) : B
                                                          , mt = Ze + x.spWidth / 2 + (dt - Ze - x.spWidth) * Math.random()
                                                          , yt = b + (P - b - x.spHeight / 2) * Math.random();
                                                        He = u.container.getMouseLocalPosBySide(_e.x < I, new l(mt,yt))
                                                    }
                                                    Z.x = He.x,
                                                    Z.y = He.y + (ye - (w - 1) / 2) * (x.spHeight + 2)
                                                }
                                                if (Q.posType.includes("Reaction")) {
                                                    var Ge = Q.posType + "_" + ie;
                                                    if (y.get(Ge))
                                                        z = y.get(Ge);
                                                    else {
                                                        var Qe = Q.posType === "pReaction" ? s : r
                                                          , Ye = Q.posType === "pReaction" ? V : W;
                                                        z = new l(Ye.x + Qe.width * (Math.random() - .5),b + Math.random() * (Ye.y + Qe.height / 2 - b)),
                                                        y.set(Ge, z)
                                                    }
                                                    Z.x = z.x,
                                                    Z.y = z.y
                                                }
                                                Q.posType === "liquidTop" && (Z.y = x.y - P + b,
                                                Z.onUpdate = function() {
                                                    if (x.y < b + x.spHeight / 2) {
                                                        var Ne = f(0, 1 - (b + x.spHeight / 2 - x.y) / x.spHeight);
                                                        x.alpha = Ne
                                                    }
                                                }
                                                ),
                                                Q.posType.indexOf("Liquid") === 1 && function() {
                                                    for (var Ne = Q.posType === "pLiquid" ? s : r, Be = Q.posType === "pLiquid" ? V : W, ve = void 0, Ue = void 0, Je = I > Be.x ? S : f(I, B - 320), gt = I > Be.x ? m(I, S + 320) : B; ve = Je + x.spWidth / 2 + (gt - Je - x.spWidth) * Math.random(),
                                                    Ue = b + (P - b - x.spHeight / 2) * Math.random(),
                                                    !(Ue - x.spHeight > Be.y + Ne.height / 2 || ve - x.spWidth / 2 > Be.x + Ne.width / 2 || ve + x.spWidth / 2 < Be.x - Ne.width / 2); )
                                                        ;
                                                    if (Z.y = Ue,
                                                    Z.x = ve,
                                                    R !== 0 && u.container.getMembraneXByValence) {
                                                        var Ct = 0 > Be.x ? 1 : -1
                                                          , Ve = u.container.getMembraneXByValence(Ct, 0 < R ? 2 : 1)
                                                          , Ce = Ve[0]
                                                          , Te = Ve.length === 2 ? Ve[1] : ve;
                                                        0 > (ve - Ce) * (x.x - Ce) ? (Ce > x.x ? Ce -= x.spWidth / 2 + 5 : Ce += x.spWidth / 2 + 5,
                                                        Z.onUpdate = function() {
                                                            0 < (ve - Ce) * (x.x - Ce) && (x.x = Ce)
                                                        }
                                                        ) : 0 > (ve - Te) * (x.x - Te) && (Te > x.x ? Te -= x.spWidth / 2 + 5 : Te += x.spWidth / 2 + 5,
                                                        Z.onUpdate = function() {
                                                            0 < (ve - Te) * (x.x - Te) && (x.x = Te)
                                                        }
                                                        )
                                                    }
                                                }(),
                                                Q.posType === "bridgeBottom" && (Z.y = 150 + x.spHeight / 2);
                                                var vt = TweenMax.to(x, u.duration * (Q.percent - X.percent), Z);
                                                g.add(vt, X.percent * u.duration)
                                            }
                                        }
                                        ;
                                        for (var ee = 0; ee < w; ee++)
                                            ne(ee)
                                    }
                                }),
                                this.timeLineMap = d
                            }
                        }, {
                            key: "createChemMaterial",
                            value: function(o, s) {
                                var r = this.main.aniMemoryMap, u = r.get(o + "_" + s), d;
                                return d = u && 0 < u.length ? u.pop() : new c.ChemMaterialDisplay(o,s,this),
                                d
                            }
                        }, {
                            key: "removeChemMaterDis",
                            value: function(o) {
                                o.parent && o.parent.removeChild(o);
                                var s = this.main.aniMemoryMap
                                  , r = s.get(o.formula + "_" + o.valence);
                                r ? r.push(o) : (r = [o],
                                s.set(o.formula + "_" + o.valence, r))
                            }
                        }, {
                            key: "getText",
                            value: function(o, s) {
                                return this.main.cachePool.popText(o, s)
                            }
                        }, {
                            key: "removeText",
                            value: function(o) {
                                this.main.cachePool.pushText(o)
                            }
                        }]),
                        a
                    }();
                    c.EleAnimationManager = t
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "ElectrodeAg",
                            console.log("\u94F6\u7247\u7535\u6781"),
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this),
                                this.addChimical("Ag"),
                                this.pole.formula = "Ag"
                            }
                        }]),
                        c
                    }(m.Electrode);
                    m.ElectrodeAg = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "ElectrodeAl",
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this),
                                this.addChimical("Al"),
                                this.pole.formula = "Al"
                            }
                        }]),
                        c
                    }(m.Electrode);
                    m.ElectrodeAl = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "ElectrodeC",
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this),
                                this.addChimical("C"),
                                this.pole.formula = "C"
                            }
                        }]),
                        c
                    }(m.Electrode);
                    m.ElectrodeC = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "ElectrodeCrudeCu",
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this),
                                this.addChimical("Cu"),
                                this.pole.formula = "Cu"
                            }
                        }]),
                        c
                    }(m.Electrode);
                    m.ElectrodeCrudeCu = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "ElectrodeCu",
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this),
                                this.addChimical("Cu"),
                                this.pole.formula = "Cu"
                            }
                        }]),
                        c
                    }(m.Electrode);
                    m.ElectrodeCu = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "ElectrodeFe",
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this),
                                this.addChimical("Fe"),
                                this.pole.formula = "Fe"
                            }
                        }]),
                        c
                    }(m.Electrode);
                    m.ElectrodeFe = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "ElectrodeMg",
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this),
                                this.addChimical("Mg"),
                                this.pole.formula = "Mg"
                            }
                        }]),
                        c
                    }(m.Electrode);
                    m.ElectrodeMg = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "ElectrodePb",
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this),
                                this.addChimical("Pb"),
                                this.pole.formula = "Pb"
                            }
                        }]),
                        c
                    }(m.Electrode);
                    m.ElectrodePb = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "ElectrodePbO2",
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this),
                                this.addChimical("PbO2"),
                                this.pole.formula = "PbO2"
                            }
                        }]),
                        c
                    }(m.Electrode);
                    m.ElectrodePbO2 = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "ElectrodePt",
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this),
                                this.addChimical("Pt"),
                                this.pole.formula = "Pt"
                            }
                        }]),
                        c
                    }(m.Electrode);
                    m.ElectrodePt = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function(p) {
                        function c(i) {
                            var e;
                            return q(this, c),
                            e = l.call(this, i),
                            e.className = "ElectrodeZn",
                            e
                        }
                        H(c, p);
                        var l = M(c);
                        return N(c, [{
                            key: "init",
                            value: function() {
                                k(E(c.prototype), "init", this).call(this),
                                this.addChimical("Zn"),
                                this.pole.formula = "Zn"
                            }
                        }]),
                        c
                    }(m.Electrode);
                    m.ElectrodeZn = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.abs;
                (function(f) {
                    var p = h.utils.Constant
                      , c = function() {
                        function l(i, e) {
                            var t = this;
                            q(this, l),
                            this.Q = 0,
                            this.U = 0,
                            this.isGas = function(a) {
                                return a.phaseType === "g"
                            }
                            ,
                            this.isLiquid = function(a) {
                                return a.phaseType === "l" && a.valence === 0
                            }
                            ,
                            this.isGasOrLiquid = function(a) {
                                return t.isGas(a) || t.isLiquid(a)
                            }
                            ,
                            this.isIon = function(a) {
                                return a.valence !== 0
                            }
                            ,
                            this.cells = i,
                            this.membraneSlots = e
                        }
                        return N(l, [{
                            key: "destroy",
                            value: function() {
                                this.cells = null,
                                this.membraneSlots = null
                            }
                        }, {
                            key: "calculate",
                            value: function() {
                                this.balanceNoMembraneNoE(),
                                this.ionTransferWithE(),
                                this.balanceNoMembraneNoE(),
                                this.cells.forEach(function(e) {
                                    e.setWorldDirty(),
                                    e.gasBalanceWithAir()
                                })
                            }
                        }, {
                            key: "getMembraneXByValence",
                            value: function(e, t) {
                                var a = this;
                                return this.getCellGroupsLenByValence(e, t).map(function(n) {
                                    return a.getMembraneX(e, n)
                                })
                            }
                        }, {
                            key: "getCellGroupsLenByValence",
                            value: function(e, t) {
                                var a = this.getCellGroups(t);
                                return 0 > e && a.reverse(),
                                2 < a.length ? [a[0].length, a[0].length + a[1].length] : [a[0].length]
                            }
                        }, {
                            key: "getMembraneX",
                            value: function(e, t) {
                                return e * (350 * this.cells.length / 2 - 350 * t)
                            }
                        }, {
                            key: "balanceNoMembraneNoE",
                            value: function() {
                                var e = this
                                  , t = this.getCellGroups(0);
                                t.forEach(function(a) {
                                    1 < a.length && (e.balanceCellGroup(a, e.isGasOrLiquid),
                                    e.balanceCellGroup(a, e.isIon))
                                })
                            }
                        }, {
                            key: "balanceWithE",
                            value: function() {
                                for (var e = 1, t; e < this.cells.length; e++)
                                    t = this.getMembraneByIndex(e - 1),
                                    this.balanceTwoCell(this.cells[e - 1], this.cells[e], t ? t.type : 0)
                            }
                        }, {
                            key: "ionTransferWithE",
                            value: function() {
                                for (var e = 1, t; e < this.cells.length; e++)
                                    t = this.getMembraneByIndex(e - 1),
                                    this.ionTransferTwoCell(this.cells[e - 1], this.cells[e], t ? t.type : 0)
                            }
                        }, {
                            key: "ionTransferTwoCell",
                            value: function(e, t, a) {
                                if (this.Q !== 0) {
                                    var n = e.getCellTotalQ()
                                      , o = t.getCellTotalQ()
                                      , s = m(p.getNbyQ(this.Q, 1));
                                    if (0 < this.Q) {
                                        var r = n[0]
                                          , u = o[1];
                                        a === 1 ? f.CellUtil.ionTransfer(t, e, -1, s / m(u)) : a === 2 ? f.CellUtil.ionTransfer(e, t, 1, s / m(r)) : (f.CellUtil.ionTransfer(t, e, -1, .5 * s / m(u)),
                                        f.CellUtil.ionTransfer(e, t, 1, .5 * s / m(r)))
                                    } else {
                                        var d = n[1]
                                          , y = o[0];
                                        a === 1 ? f.CellUtil.ionTransfer(e, t, -1, s / m(d)) : a === 2 ? f.CellUtil.ionTransfer(t, e, 1, s / y) : (f.CellUtil.ionTransfer(e, t, -1, .5 * s / m(d)),
                                        f.CellUtil.ionTransfer(t, e, 1, .5 * s / m(y)))
                                    }
                                }
                            }
                        }, {
                            key: "balanceTwoCell",
                            value: function(e, t, a) {
                                var n = this.U
                                  , o = .1 * 885e-14
                                  , s = -n * o
                                  , r = e.getCellTotalQ()
                                  , u = t.getCellTotalQ()
                                  , d = r[0] + r[1]
                                  , y = u[0] + u[1]
                                  , g = s - (d - y);
                                0 < g ? (a !== 1 && f.CellUtil.ionTransfer(t, e, 1, m(g / 2 / r[0])),
                                a !== 2 && f.CellUtil.ionTransfer(e, t, -1, m(g / 2 / u[1]))) : 0 > g && (a !== 1 && f.CellUtil.ionTransfer(e, t, 1, m(g / 2 / r[0])),
                                a !== 2 && f.CellUtil.ionTransfer(t, e, -1, m(g / 2 / u[1])))
                            }
                        }, {
                            key: "balanceGasAndLiquid",
                            value: function() {
                                this.balanceCellGroup(this.cells, this.isGasOrLiquid)
                            }
                        }, {
                            key: "balanceLiquid",
                            value: function() {
                                this.balanceCellGroup(this.cells, this.isLiquid)
                            }
                        }, {
                            key: "balanceGas",
                            value: function() {
                                this.balanceCellGroup(this.cells, this.isGas)
                            }
                        }, {
                            key: "balanceCellGroup",
                            value: function(e, t) {
                                var a = this.getChemicalItemMap(e, t)
                                  , n = this.map2array(a);
                                this.sortChemicals(n),
                                this.averageChemicals(e, n)
                            }
                        }, {
                            key: "averageChemicals",
                            value: function(e, t) {
                                for (var a = 0, n = 0; n < e.length; n++)
                                    a += e[n].getCapacity();
                                e.forEach(function(o) {
                                    var s = o.getCapacity() / a;
                                    t.forEach(function(r) {
                                        var u = o.world.getChemical(r.chemical.phaseType, r.chemical.chemicalId);
                                        u ? u.mol = r.mol * s : o.world.addChemicalByFormula(r.chemical.formula, r.chemical.valence, r.chemical.phaseType, r.mol * s)
                                    })
                                })
                            }
                        }, {
                            key: "getChemicalItemMap",
                            value: function(e, t) {
                                var a = {};
                                return e.forEach(function(n) {
                                    n.world.forEachChemical(function(o) {
                                        var s = o.chemicalId + "_" + o.phaseType;
                                        t(o) && (a[s] ? a[s].mol += o.mol : a[s] = {
                                            chemical: o,
                                            mol: o.mol
                                        })
                                    })
                                }),
                                a
                            }
                        }, {
                            key: "map2array",
                            value: function(e) {
                                var t = [];
                                for (var a in e)
                                    if (e.hasOwnProperty(a)) {
                                        var n = e[a];
                                        t.push(n)
                                    }
                                return t
                            }
                        }, {
                            key: "sortChemicals",
                            value: function(e) {
                                e.sort(function(t, a) {
                                    return t.chemical.formula === "H2O" ? -1 : a.chemical.formula === "H2O" ? 1 : t.chemical.valence === 0 ? -1 : a.chemical.valence === 0 ? 1 : 0
                                })
                            }
                        }, {
                            key: "getCellGroups",
                            value: function(e) {
                                return f.CellUtil.getCellGroups(this.cells, this.membraneSlots, e)
                            }
                        }, {
                            key: "getMembraneByIndex",
                            value: function(e) {
                                return f.CellUtil.getMembraneByIndex(this.membraneSlots, e)
                            }
                        }]),
                        l
                    }();
                    f.CellCalculator = c
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = h.chemistry.CardSlotUtil
                      , p = function() {
                        function c() {
                            q(this, c)
                        }
                        return N(c, null, [{
                            key: "ionTransfer",
                            value: function(i, e, t, a) {
                                a = 0 > a ? 0 : 1 < a ? 1 : a,
                                i.world.forEachChemical(function(n) {
                                    if (0 < n.valence * t) {
                                        var o = n.mol * a;
                                        e.world.addChemical(n.clone(o)),
                                        n.mol -= o,
                                        n.phase.tryRemoveChemical(n)
                                    }
                                }),
                                i.setWorldDirty(),
                                e.setWorldDirty()
                            }
                        }, {
                            key: "getCellGroups",
                            value: function(i, e, t) {
                                var a = []
                                  , n = [i[0]];
                                a.push(n);
                                for (var o = 1, s; o < i.length; o++)
                                    s = c.getMembraneByIndex(e, o - 1),
                                    s && s.type !== t ? (n = [i[o]],
                                    a.push(n)) : n.push(i[o]);
                                return a
                            }
                        }, {
                            key: "getMembraneByIndex",
                            value: function(i, e) {
                                var t = i[e];
                                return f.getOwner(t.getCards()[0])
                            }
                        }]),
                        c
                    }();
                    m.CellUtil = p
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.abs;
                (function(f) {
                    var p = h.engines.chemicalReaction.ChemicalUtil
                      , c = h.utils.Constant
                      , l = h.utils.NBMath
                      , i = function() {
                        function e() {
                            q(this, e)
                        }
                        return N(e, null, [{
                            key: "reactInCell",
                            value: function(a, n, o) {
                                if (n) {
                                    for (var s = n.react, r = c.getNbyQ(o, 1) / m(s.eNum), u = 0, d; u < s.reactants.length; u++)
                                        if (d = s.reactants[u],
                                        d.formula !== "e" && d.phaseType !== "s") {
                                            var y = p.createChemicalId(d.formula, d.valence)
                                              , g = a.getChemical(d.phaseType, y);
                                            g ? a.reduceChemical(g.clone(r * d.coefficient)) : console.log("\u51FA\u9519\u4E86\uFF1A\u6CA1\u6709\u627E\u5230\u53CD\u5E94\u7269")
                                        }
                                    for (var C = 0, T; C < s.products.length; C++)
                                        T = s.products[C],
                                        T.phaseType !== "s" && a.addChemicalByFormula(T.formula, T.valence, T.phaseType, r * T.coefficient)
                                }
                            }
                        }, {
                            key: "getQByI",
                            value: function(a) {
                                return .5 * (4e-4 * a)
                            }
                        }, {
                            key: "getMaxQ",
                            value: function(a, n) {
                                var o = a.react.eNum
                                  , s = 1e6;
                                return a.react.reactants.forEach(function(r) {
                                    if (r.formula !== "e") {
                                        var u = n.getChemical(r.phaseType, r.chemicalId);
                                        if (u) {
                                            var d = m(u.mol / r.coefficient * o);
                                            d < s && (s = d)
                                        }
                                    }
                                }),
                                c.getQbyN(s, 1)
                            }
                        }, {
                            key: "walkEdges",
                            value: function(a, n) {
                                for (var o = a.vertex0; o && (n(o.edge),
                                o = o.brother.friend,
                                o !== a.vertex0); )
                                    ;
                            }
                        }, {
                            key: "getTransferEleCount",
                            value: function(a) {
                                if (!a.hasI())
                                    return 0;
                                var n = [];
                                return e.walkEdges(a, function(o) {
                                    if (o.userData.eq && o.userData.eq instanceof f.Electrode) {
                                        var s = o.userData.eq.getReactionElecNum();
                                        s && n.push(m(s))
                                    }
                                }),
                                l.getLCMs(n)
                            }
                        }]),
                        e
                    }();
                    f.ElectroReactUtil = i
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min;
                (function(f) {
                    var p = function() {
                        function c(l) {
                            q(this, c),
                            this.electrode = l
                        }
                        return N(c, [{
                            key: "destroy",
                            value: function() {
                                this.electrode = null
                            }
                        }, {
                            key: "reactInContainer",
                            value: function() {
                                var i = this
                                  , e = this.electrode;
                                if (e.card.slot) {
                                    var t = e.card.slot.userData.world;
                                    if (!(t.getLiquidV() < e.card.slot.userData.minV)) {
                                        var a = t.getPhaseByType("l");
                                        if (a.length && e.world.phases.length)
                                            for (var n = function(r) {
                                                var u = e.world.phases[r]
                                                  , d = a[0]
                                                  , y = e.main.reactionEngine.reactUtil.getReactionsInTwoPhase(u, d, .016);
                                                y.forEach(function(g) {
                                                    1e-7 < g.mol && i.reactReduce(u, d, g)
                                                })
                                            }, o = 0; o < e.world.phases.length; o++)
                                                n(o)
                                    }
                                }
                            }
                        }, {
                            key: "reactReduce",
                            value: function(i, e, t) {
                                if (this.calcSc(i, e, t),
                                t.sc !== 0 && t.mol !== 0) {
                                    for (var a = t.mol * t.sc, n = !1, o = 0, s; o < t.reaction.reactants.length; o++)
                                        s = t.reaction.reactants[o],
                                        i.hasChemical(s.chemicalId) ? (i.reduceChemical(s.chemicalId, s.coefficient * a),
                                        this.electrode.corrodingMetal(),
                                        n = !0) : e.reduceChemical(s.chemicalId, s.coefficient * a);
                                    for (var r = 0, u; r < t.reaction.products.length; r++)
                                        u = t.reaction.products[r],
                                        n && u.phaseType === "s" ? (this.electrode.adheringMetal(u.formula),
                                        i.world.addChemicalByFormula(u.formula, u.valence, u.phaseType, u.coefficient * a)) : e.world.addChemicalByFormula(u.formula, u.valence, u.phaseType, u.coefficient * a),
                                        u.phaseType === "g" && this.electrode.needGasBubble(!1)
                                }
                            }
                        }, {
                            key: "calcSc",
                            value: function(i, e, t) {
                                for (var a = 1, n = 0; n < t.reaction.reactants.length; n++) {
                                    var o = t.reaction.reactants[n]
                                      , s = i.getChemical(o.chemicalId) || e.getChemical(o.chemicalId);
                                    if (s) {
                                        var r = s.mol
                                          , u = t.mol * o.coefficient;
                                        a = m(a, r / u)
                                    } else {
                                        a = 0;
                                        break
                                    }
                                }
                                t.sc = a
                            }
                        }]),
                        c
                    }();
                    f.ElectrodeReactUtil = p
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                var m = Math.min
                  , f = Math.abs;
                (function(p) {
                    var c = h.utils.NBMath
                      , l = h.engines.electroChemistry.EquationCalculater
                      , i = h.engines.chemicalReaction.ChemicalDataStructUtil
                      , e = function() {
                        function t() {
                            q(this, t),
                            this.calc = new l
                        }
                        return N(t, [{
                            key: "destroy",
                            value: function() {
                                this.calc = null
                            }
                        }, {
                            key: "calculate",
                            value: function(n, o) {
                                if (!(n && o))
                                    return null;
                                var s = n.react
                                  , r = o.react
                                  , u = f(s.eNum)
                                  , d = f(r.eNum)
                                  , y = c.getLCM(u, d)
                                  , g = y / u
                                  , C = y / d
                                  , T = this.copyReacts(s.reactants, g)
                                  , A = this.copyReacts(r.reactants, C)
                                  , S = this.copyReacts(s.products, g)
                                  , B = this.copyReacts(r.products, C)
                                  , b = T.concat(A)
                                  , P = S.concat(B);
                                this.mergeDuplicates(b),
                                this.mergeDuplicates(P),
                                this.mergeIons(P),
                                this.eliminateTheSame(b, P),
                                this.removeEmptyItems(b),
                                this.removeEmptyItems(P),
                                this.simplest(b, P);
                                var I = Object.assign({}, s);
                                I.reactants = b,
                                I.products = P;
                                var O = this.calc.calculate(I)
                                  , D = O.split("->");
                                if (D[0] === D[1])
                                    return null;
                                var w = {
                                    uid: 1e3 * s.uid + r.uid,
                                    isIon: !0,
                                    isArrow: !0,
                                    reactant: D[0],
                                    product: D[1],
                                    condition: ""
                                };
                                return w
                            }
                        }, {
                            key: "mergeIons",
                            value: function(n) {
                                for (var o = 0, s, r, u; o < n.length && (u = n[o],
                                i.isH(u) ? s = u : i.isOH(u) && (r = u),
                                !(s && r)); o++)
                                    ;
                                if (s && r) {
                                    var d = m(s.coefficient, r.coefficient);
                                    0 < d && (s.coefficient -= d,
                                    r.coefficient -= d,
                                    n.push({
                                        formula: "H2O",
                                        valence: 0,
                                        phaseType: "l",
                                        chemicalId: i.createChemicalId("H2O", 0),
                                        coefficient: d
                                    }),
                                    this.mergeDuplicates(n))
                                }
                            }
                        }, {
                            key: "simplest",
                            value: function(n, o) {
                                for (var s = [], r = 0; r < n.length; r++)
                                    s.push(f(n[r].coefficient));
                                for (var u = 0; u < o.length; u++)
                                    s.push(f(o[u].coefficient));
                                var d = c.getGCDs(s);
                                if (1 < d) {
                                    for (var y = 0; y < n.length; y++)
                                        n[y].coefficient /= d;
                                    for (var g = 0; g < o.length; g++)
                                        o[g].coefficient /= d
                                }
                            }
                        }, {
                            key: "eliminateTheSame",
                            value: function(n, o) {
                                for (var s = {}, r = 0; r < o.length; r++)
                                    s[o[r].chemicalId] = r;
                                for (var u = 0; u < n.length; u++) {
                                    var d = n[u]
                                      , y = s[d.chemicalId];
                                    if (!isNaN(y)) {
                                        var g = o[y]
                                          , C = m(d.coefficient, g.coefficient);
                                        d.coefficient -= C,
                                        g.coefficient -= C
                                    }
                                }
                            }
                        }, {
                            key: "mergeDuplicates",
                            value: function(n) {
                                for (var o = {}, s = 0, r; s < n.length; s++)
                                    r = n[s],
                                    o[r.chemicalId] ? (o[r.chemicalId].coefficient += r.coefficient,
                                    n.splice(s, 1),
                                    s--) : o[r.chemicalId] = r
                            }
                        }, {
                            key: "removeEmptyItems",
                            value: function(n) {
                                for (var o = n.length - 1, s; 0 <= o; o--)
                                    s = n[o],
                                    s.coefficient === 0 && n.splice(o, 1)
                            }
                        }, {
                            key: "copyReacts",
                            value: function(n) {
                                for (var o = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : 1, s = [], r = 0, u; r < n.length; r++)
                                    u = Object.assign({}, n[r]),
                                    u.formula !== "e" && (u.coefficient *= o,
                                    s.push(u));
                                return s
                            }
                        }]),
                        t
                    }();
                    p.HalfReactionMerger = e
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var v;
            (function(h) {
                (function(m) {
                    var f = function() {
                        function p() {
                            q(this, p)
                        }
                        return N(p, null, [{
                            key: "connectByCardSlot",
                            value: function(l, i) {
                                var e = p.getVertexByCardSlot(l)
                                  , t = p.getVertexByCardSlot(i);
                                e.connect(t)
                            }
                        }, {
                            key: "disConnectByCardSlot",
                            value: function(l) {
                                var i = p.getVertexByCardSlot(l);
                                i.disConnect()
                            }
                        }, {
                            key: "getVertexByCardSlot",
                            value: function(l) {
                                return l.userData.vertex
                            }
                        }]),
                        p
                    }();
                    m.VertexUtil = f
                }
                )(h.electroChemistry || (h.electroChemistry = {}))
            }
            )(v || (v = {}));
            var ot = [{
                name: "\u70E7\u676F-1000mL",
                eqName: "HugeBeaker",
                icon: "HugeBeaker",
                type: "eq",
                lanKey: "electro.eq.HugeBeaker",
                search: {
                    en: "HugeBeaker",
                    zh: "shao\u70E7bei\u676F-1000ml-"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 0
            }, {
                name: "\u4E24\u5BA4\u7535\u89E3\u69FD",
                eqName: "TwoCellElectrolyzerCombEq",
                icon: "TwoCellElectrolyzer",
                type: "eq",
                lanKey: "electro.eq.TwoCellElectrolyzerCombEq",
                search: {
                    en: "TwoCellElectrolyzerCombEq",
                    zh: "liang\u4E24shi\u5BA4dian\u7535jie\u89E3cao\u69FD"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 1
            }, {
                name: "\u4E09\u5BA4\u7535\u89E3\u69FD",
                eqName: "ThreeCellElectrolyzerCombEq",
                icon: "ThreeCellElectrolyzer",
                type: "eq",
                lanKey: "electro.eq.ThreeCellElectrolyzerCombEq",
                search: {
                    en: "ThreeCellElectrolyzerCombEq",
                    zh: "san\u4E09shi\u5BA4dian\u7535jie\u89E3cao\u69FD"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 2
            }, {
                name: "\u56DB\u5BA4\u7535\u89E3\u69FD",
                eqName: "FourCellElectrolyzerCombEq",
                icon: "FourCellElectrolyzer",
                type: "eq",
                lanKey: "electro.eq.FourCellElectrolyzerCombEq",
                search: {
                    en: "FourCellElectrolyzerCombEq",
                    zh: "si\u56DBshi\u5BA4dian\u7535jie\u89E3cao\u69FD"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 3
            }, {
                name: "\u76D0\u6865",
                eqName: "SaltBridge",
                icon: "SaltBridge",
                type: "eq",
                lanKey: "electro.eq.SaltBridge",
                search: {
                    en: "SaltBridge",
                    zh: "yan\u76D0qiao\u6865"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 4
            }, {
                name: "\u9633\u79BB\u5B50\u4EA4\u6362\u819C",
                eqName: "CationExchangeMembrane",
                icon: "CationExchangeMembrane",
                type: "eq",
                lanKey: "electro.eq.CationExchangeMembrane",
                search: {
                    en: "CationExchangeMembrane",
                    zh: "yang\u9633li\u79BBzi\u5B50jiao\u4EA4huan\u6362mo\u819C"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 5
            }, {
                name: "\u9634\u79BB\u5B50\u4EA4\u6362\u819C",
                eqName: "AnionExchangeMembrane",
                icon: "AnionExchangeMembrane",
                type: "eq",
                lanKey: "electro.eq.AnionExchangeMembrane",
                search: {
                    en: "AnionExchangeMembrane",
                    zh: "yin\u9634li\u79BBzi\u5B50jiao\u4EA4huan\u6362mo\u819C"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 6
            }, {
                name: "\u7EA2\u8272\u5BFC\u7EBF",
                eqName: "RedWire",
                icon: "WireRed",
                type: "eq",
                lanKey: "electro.eq.RedWire",
                search: {
                    en: "RedWire",
                    zh: "hong\u7EA2se\u8272dao\u5BFCxian\u7EBF"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 7
            }, {
                name: "\u9ED1\u8272\u5BFC\u7EBF",
                eqName: "BlackWire",
                icon: "WireBlack",
                type: "eq",
                lanKey: "electro.eq.BlackWire",
                search: {
                    en: "BlackWire",
                    zh: "hei\u9ED1se\u8272dao\u5BFCxian\u7EBF"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 8
            }, {
                name: "\u5C0F\u706F\u6CE1",
                eqName: "Bulb",
                icon: "Bulb",
                type: "eq",
                lanKey: "electro.eq.Bulb",
                search: {
                    en: "Bulb",
                    zh: "xiao\u5C0Fdeng\u706Fpao\u6CE1"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 9
            }, {
                name: "\u53D1\u5149\u4E8C\u6781\u7BA1",
                eqName: "Led",
                icon: "Led",
                type: "eq",
                lanKey: "electro.eq.Led",
                visible: !0,
                isLock: !1,
                sortIndex: 9.1,
                search: {
                    en: "Led",
                    zh: "fa\u53D1guang\u5149er\u4E8Cji\u6781guan\u7BA1"
                }
            }, {
                name: "\u5C0F\u7535\u52A8\u673A",
                eqName: "Motor",
                icon: "Motor",
                type: "eq",
                lanKey: "electro.eq.Motor",
                visible: !0,
                isLock: !1,
                sortIndex: 9.2,
                search: {
                    en: "Motor",
                    zh: "xiao\u5C0Fdian\u7535dong\u52A8ji\u673A"
                }
            }, {
                name: "\u7535\u6E90",
                eqName: "Battery",
                icon: "Battery",
                type: "eq",
                lanKey: "electro.eq.Battery",
                search: {
                    en: "Battery",
                    zh: "dian\u7535yuan\u6E90"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 10
            }, {
                name: "\u5355\u5200\u5355\u63B7\u5F00\u5173",
                eqName: "SingleSwitch",
                icon: "SingleSwitch",
                type: "eq",
                lanKey: "electro.eq.SingleSwitch",
                search: {
                    en: "SingleSwitch",
                    zh: "dan\u5355dao\u5200dan\u5355zhi\u63B7kai\u5F00guan\u5173"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 11
            }, {
                name: "\u7535\u6D41\u8BA1",
                eqName: "Galvanometer",
                icon: "Galvanometer",
                type: "eq",
                lanKey: "electro.eq.Galvanometer",
                search: {
                    en: "Galvanometer",
                    zh: "dian\u7535liu\u6D41ji\u8BA1"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 12
            }, {
                name: "\u80F6\u585E",
                eqName: "RubberPlug",
                icon: "RubberPlug",
                type: "eq",
                lanKey: "electro.eq.RubberPlug",
                search: {
                    en: "RubberPlug",
                    zh: "jiao\u80F6sai\u585E"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 13
            }, {
                name: "\u6A61\u80F6\u7BA1",
                eqName: "RubberCatheter",
                icon: "RubberCatheter",
                type: "eq",
                lanKey: "electro.eq.RubberCatheter",
                search: {
                    en: "RubberCatheter",
                    zh: "xiang\u6A61jiao\u80F6guan\u7BA1"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 14
            }, {
                name: "\u73BB\u7483\u76F4\u5BFC\u7BA1",
                eqName: "StraightGlassCatheter",
                icon: "StraightGlassCatheter",
                type: "eq",
                lanKey: "electro.eq.StraightGlassCatheter",
                search: {
                    en: "StraightGlassCatheter",
                    zh: "bo\u73BBli\u7483zhi\u76F4dao\u5BFCguan\u7BA1"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 15
            }, {
                name: "\u53EF\u5F2F\u66F2\u5BFC\u7BA1",
                eqName: "FlexibleGlassCatheter",
                icon: "FlexibleGlassCatheter",
                type: "eq",
                lanKey: "electro.eq.FlexibleGlassCatheter",
                search: {
                    en: "FlexibleGlassCatheter",
                    zh: "ke\u53EFwan\u5F2Fqu\u66F2dao\u5BFCguan\u7BA1"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 16
            }, {
                name: "90\u5EA6\u73BB\u7483\u5BFC\u7BA1",
                eqName: "Catheter90",
                icon: "Catheter90",
                type: "eq",
                lanKey: "electro.eq.Catheter90",
                search: {
                    en: "Catheter90",
                    zh: "90du\u5EA6bo\u73BBli\u7483dao\u5BFCguan\u7BA1"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 17
            }, {
                name: "\u73BB\u7483\u7247",
                eqName: "GlassSheet",
                icon: "GlassSheet",
                type: "eq",
                lanKey: "electro.eq.GlassSheet",
                search: {
                    en: "GlassSheet",
                    zh: "bo\u73BBli\u7483pian\u7247"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 18
            }, {
                name: "\u88F9\u6709\u950C\u76AE\u7684\u94C1\u9489",
                eqName: "NailWithZn",
                icon: "NailWithZn",
                type: "eq",
                visible: !1,
                isLock: !1,
                sortIndex: 18.1,
                lanKey: "electro.eq.NailWithZn",
                search: {
                    en: "NailWithZn",
                    zh: "guo\u88F9you\u6709xin\u950Cpi\u76AEde\u7684tie\u94C1ding\u9489"
                }
            }, {
                name: "\u7F20\u6709\u94DC\u4E1D\u7684\u94C1\u9489",
                eqName: "NailWithCu",
                icon: "NailWithCu",
                type: "eq",
                visible: !1,
                isLock: !1,
                sortIndex: 18.2,
                lanKey: "electro.eq.NailWithCu",
                search: {
                    en: "NailWithCu",
                    zh: "chan\u7F20you\u6709tong\u94DCsi\u4E1Dde\u7684tie\u94C1ding\u9489"
                }
            }, {
                name: "\u57F9\u517B\u76BF",
                eqName: "Dish",
                icon: "Dish",
                type: "eq",
                visible: !1,
                isLock: !1,
                sortIndex: 18.3,
                lanKey: "electro.eq.Dish",
                search: {
                    en: "Dish",
                    zh: "pei\u57F9yang\u517Bmin\u76BF"
                }
            }, {
                name: "\u96C6\u6C14\u74F6",
                eqName: "GasCollectingBottle",
                icon: "GasCollectingBottle",
                type: "eq",
                lanKey: "electro.eq.GasCollectingBottle",
                search: {
                    en: "GasCollectingBottle",
                    zh: "ji\u96C6qi\u6C14ping\u74F6"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 19
            }, {
                name: "\u5927\u8BD5\u7BA1",
                eqName: "BigTestTube",
                icon: "BigTestTube",
                type: "eq",
                lanKey: "electro.eq.BigTestTube",
                search: {
                    en: "BigTestTube",
                    zh: "da\u5927shi\u8BD5guan\u7BA1"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 20
            }, {
                name: "\u80F6\u5934\u6EF4\u7BA1",
                eqName: "ADropper",
                icon: "ADropper",
                type: "eq",
                lanKey: "electro.eq.ADropper",
                search: {
                    en: "ADropper",
                    zh: "jiao\u80F6tou\u5934di\u6EF4guan\u7BA1"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 21
            }, {
                name: "PH\u8BD5\u7EB8",
                eqName: "TestPaperBookPH",
                icon: "TestPaperBookPH",
                type: "eq",
                lanKey: "electro.eq.TestPaperBookPH",
                search: {
                    en: "TestPaperBookPH",
                    zh: "phshi\u8BD5zhi\u7EB8"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 22
            }, {
                name: "\u7EA2\u8272\u77F3\u854A\u8BD5\u7EB8",
                eqName: "TestPaperBookRed",
                icon: "TestPaperBookRed",
                type: "eq",
                lanKey: "electro.eq.TestPaperBookRed",
                search: {
                    en: "TestPaperBookRed",
                    zh: "hong\u7EA2se\u8272shi\u77F3rui\u854Ashi\u8BD5zhi\u7EB8"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 23
            }, {
                name: "\u84DD\u8272\u77F3\u854A\u8BD5\u7EB8",
                eqName: "TestPaperBookBlue",
                icon: "TestPaperBookBlue",
                type: "eq",
                lanKey: "electro.eq.TestPaperBookBlue",
                search: {
                    en: "TestPaperBookBlue",
                    zh: "lan\u84DDse\u8272shi\u77F3rui\u854Ashi\u8BD5zhi\u7EB8"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 24
            }, {
                name: "\u7898\u5316\u94BE\u8BD5\u7EB8",
                eqName: "TestPaperBookKI",
                icon: "TestPaperBookKI",
                type: "eq",
                lanKey: "electro.eq.TestPaperBookKI",
                search: {
                    en: "TestPaperBookKI",
                    zh: "dian\u7898hua\u5316jia\u94BEshi\u8BD5zhi\u7EB8"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 25
            }, {
                name: "\u915A\u915E\u8BD5\u7EB8",
                eqName: "TestPaperBookPt",
                icon: "TestPaperBookPt",
                type: "eq",
                lanKey: "electro.eq.TestPaperBookPt",
                search: {
                    en: "TestPaperBookPt",
                    zh: "fen\u915Atai\u915Eshi\u8BD5zhi\u7EB8"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 26
            }, {
                name: "\u7535\u6781-\u9541\u7247",
                eqName: "ElectrodeMg",
                icon: "ElectrodeMg",
                type: "electrode",
                lanKey: "electro.electrode.ElectrodeMg",
                search: {
                    en: "ElectrodeMg",
                    zh: "dian\u7535ji\u6781--mei\u9541pian\u7247"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 27
            }, {
                name: "\u7535\u6781-\u94DD\u7247",
                eqName: "ElectrodeAl",
                icon: "ElectrodeAl",
                type: "electrode",
                lanKey: "electro.electrode.ElectrodeAl",
                search: {
                    en: "ElectrodeAl",
                    zh: "dian\u7535ji\u6781--lv\u94DDpian\u7247"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 28
            }, {
                name: "\u7535\u6781-\u950C\u7247",
                eqName: "ElectrodeZn",
                icon: "ElectrodeZn",
                type: "electrode",
                lanKey: "electro.electrode.ElectrodeZn",
                search: {
                    en: "ElectrodeZn",
                    zh: "dian\u7535ji\u6781--xin\u950Cpian\u7247"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 29
            }, {
                name: "\u7535\u6781-\u94C1\u7247",
                eqName: "ElectrodeFe",
                icon: "ElectrodeFe",
                type: "electrode",
                lanKey: "electro.electrode.ElectrodeFe",
                search: {
                    en: "ElectrodeFe",
                    zh: "dian\u7535ji\u6781--tie\u94C1pian\u7247"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 30
            }, {
                name: "\u7535\u6781-\u94C5\u7247",
                eqName: "ElectrodePb",
                icon: "ElectrodePb",
                type: "electrode",
                lanKey: "electro.electrode.ElectrodePb",
                search: {
                    en: "ElectrodePb",
                    zh: "dian\u7535ji\u6781--qian\u94C5pian\u7247"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 31
            }, {
                name: "\u7535\u6781-\u94DC\u7247",
                eqName: "ElectrodeCu",
                icon: "ElectrodeCu",
                type: "electrode",
                lanKey: "electro.electrode.ElectrodeCu",
                search: {
                    en: "ElectrodeCu",
                    zh: "dian\u7535ji\u6781--tong\u94DCpian\u7247"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 32
            }, {
                name: "\u7535\u6781-\u94F6\u7247",
                eqName: "ElectrodeAg",
                icon: "ElectrodeAg",
                type: "electrode",
                lanKey: "electro.electrode.ElectrodeAg",
                search: {
                    en: "ElectrodeAg",
                    zh: "dian\u7535ji\u6781--yin\u94F6pian\u7247"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 33
            }, {
                name: "\u7535\u6781-\u94C2\u68D2",
                eqName: "ElectrodePt",
                icon: "ElectrodePt",
                type: "electrode",
                lanKey: "electro.electrode.ElectrodePt",
                search: {
                    en: "ElectrodePt",
                    zh: "dian\u7535ji\u6781--bo\u94C2bang\u68D2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 34
            }, {
                name: "\u7535\u6781-\u78B3\u68D2",
                eqName: "ElectrodeC",
                icon: "ElectrodeC",
                type: "electrode",
                lanKey: "electro.electrode.ElectrodeC",
                search: {
                    en: "ElectrodeC",
                    zh: "dian\u7535ji\u6781--tan\u78B3bang\u68D2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 35
            }, {
                name: "\u7535\u6781-\u4E8C\u6C27\u5316\u94C5\u7247",
                eqName: "ElectrodePbO2",
                icon: "ElectrodePbO2",
                type: "electrode",
                lanKey: "electro.electrode.ElectrodePbO2",
                search: {
                    en: "ElectrodePbO2",
                    zh: "dian\u7535ji\u6781--er\u4E8Cyang\u6C27hua\u5316qian\u94C5pian\u7247"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 36
            }, {
                name: "\u7535\u6781-\u7C97\u94DC\u7247",
                eqName: "ElectrodeCrudeCu",
                icon: "ElectrodeCrudeCu",
                type: "electrode",
                lanKey: "electro.electrode.ElectrodeCrudeCu",
                search: {
                    en: "ElectrodeCrudeCu",
                    zh: "dian\u7535ji\u6781--cu\u7C97tong\u94DCpian\u7247"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 37
            }, {
                name: "\u84B8\u998F\u6C34",
                eqName: "H2O_aq",
                icon: "3665a6d7",
                type: "liquid",
                lanKey: "electro.liquid.H2O_aq",
                search: {
                    en: "H2O",
                    zh: "h2ozheng\u84B8liu\u998Fshui\u6C34"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 38
            }, {
                name: "\u7A00\u786B\u9178",
                eqName: "H2SO4_aq",
                icon: "077433ea",
                type: "liquid",
                lanKey: "electro.liquid.H2SO4_aq",
                search: {
                    en: "H2SO4",
                    zh: "h2so4xi\u7A00liu\u786Bsuan\u9178"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 39
            }, {
                name: "\u6D53\u786B\u9178",
                eqName: "H2SO4_conc_aq",
                icon: "80240d4f",
                type: "liquid",
                lanKey: "electro.liquid.H2SO4_conc_aq",
                search: {
                    en: "H2SO4",
                    zh: "h2so4nong\u6D53liu\u786Bsuan\u9178"
                },
                visible: !1,
                isLock: !1,
                sortIndex: 40
            }, {
                name: "\u7A00\u76D0\u9178",
                eqName: "HCl_aq",
                icon: "71143408",
                type: "liquid",
                lanKey: "electro.liquid.HCl_aq",
                search: {
                    en: "HCl",
                    zh: "hclxi\u7A00yan\u76D0suan\u9178"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 41
            }, {
                name: "\u6D53\u76D0\u9178",
                eqName: "HCl_conc_aq",
                icon: "e181c9ed",
                type: "liquid",
                lanKey: "electro.liquid.HCl_conc_aq",
                search: {
                    en: "HCl",
                    zh: "hclnong\u6D53yan\u76D0suan\u9178"
                },
                visible: !1,
                isLock: !1,
                sortIndex: 42
            }, {
                name: "\u7A00\u785D\u9178",
                eqName: "HNO3_aq",
                icon: "66fa9a20",
                type: "liquid",
                lanKey: "electro.liquid.HNO3_aq",
                search: {
                    en: "HNO3",
                    zh: "hno3xi\u7A00xiao\u785Dsuan\u9178"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 43
            }, {
                name: "\u6D53\u785D\u9178",
                eqName: "HNO3_conc_aq",
                icon: "c0d8752c",
                type: "liquid",
                lanKey: "electro.liquid.HNO3_conc_aq",
                search: {
                    en: "HNO3",
                    zh: "hno3nong\u6D53xiao\u785Dsuan\u9178"
                },
                visible: !1,
                isLock: !1,
                sortIndex: 44
            }, {
                name: "\u4E59\u9178",
                eqName: "CH3COOH",
                icon: "9c61c24e",
                type: "liquid",
                lanKey: "electro.liquid.CH3COOH",
                search: {
                    en: "CH3COOH",
                    zh: "ch3coohyi\u4E59suan\u9178"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 45
            }, {
                name: "\u6C22\u6C27\u5316\u94A0\u6EB6\u6DB2",
                eqName: "NaOH_aq",
                icon: "3b3d4bdb",
                type: "liquid",
                lanKey: "electro.liquid.NaOH_aq",
                search: {
                    en: "NaOH",
                    zh: "naohqing\u6C22yang\u6C27hua\u5316na\u94A0rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 46
            }, {
                name: "\u6F84\u6E05\u77F3\u7070\u6C34",
                eqName: "Ca(OH)2_aq",
                icon: "d6cd6ff9",
                type: "liquid",
                lanKey: "electro.liquid.Ca(OH)2_aq",
                search: {
                    en: "Ca(OH)2",
                    zh: "ca(oh)2cheng\u6F84qing\u6E05shi\u77F3hui\u7070shui\u6C34"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 47
            }, {
                name: "\u6C22\u6C27\u5316\u94BE\u6EB6\u6DB2",
                eqName: "KOH_aq",
                icon: "4f15ed3e",
                type: "liquid",
                lanKey: "electro.liquid.KOH_aq",
                search: {
                    en: "KOH",
                    zh: "kohqing\u6C22yang\u6C27hua\u5316jia\u94BErong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 48
            }, {
                name: "\u6C22\u6C27\u5316\u94A1\u6EB6\u6DB2",
                eqName: "Ba(OH)2_aq",
                icon: "c04d48a5",
                type: "liquid",
                lanKey: "electro.liquid.Ba(OH)2_aq",
                search: {
                    en: "Ba(OH)2",
                    zh: "ba(oh)2qing\u6C22yang\u6C27hua\u5316bei\u94A1rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 49
            }, {
                name: "\u6C28\u6C34",
                eqName: "NH3H2O_aq",
                icon: "a70fe1c7",
                type: "liquid",
                lanKey: "electro.liquid.NH3H2O_aq",
                search: {
                    en: "NH3H2O",
                    zh: "nh3h2oan\u6C28shui\u6C34"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 50
            }, {
                name: "\u6C2F\u5316\u94BE\u6EB6\u6DB2",
                eqName: "KCl_aq",
                icon: "2907f032",
                type: "liquid",
                lanKey: "electro.liquid.KCl_aq",
                search: {
                    en: "KCl",
                    zh: "kcllv\u6C2Fhua\u5316jia\u94BErong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 51
            }, {
                name: "\u786B\u9178\u94BE\u6EB6\u6DB2",
                eqName: "K2SO4_aq",
                icon: "2eed0bcb",
                type: "liquid",
                lanKey: "electro.liquid.K2SO4_aq",
                search: {
                    en: "K2SO4",
                    zh: "k2so4liu\u786Bsuan\u9178jia\u94BErong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 52
            }, {
                name: "\u785D\u9178\u94BE\u6EB6\u6DB2",
                eqName: "KNO3_aq",
                icon: "54ee2857",
                type: "liquid",
                lanKey: "electro.liquid.KNO3_aq",
                search: {
                    en: "KNO3",
                    zh: "kno3xiao\u785Dsuan\u9178jia\u94BErong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 53
            }, {
                name: "\u78B3\u9178\u94BE\u6EB6\u6DB2",
                eqName: "K2CO3_aq",
                icon: "9fa4a89d",
                type: "liquid",
                lanKey: "electro.liquid.K2CO3_aq",
                search: {
                    en: "K2CO3",
                    zh: "k2co3tan\u78B3suan\u9178jia\u94BErong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 54
            }, {
                name: "\u6C2F\u9178\u94BE\u6EB6\u6DB2",
                eqName: "KClO3_aq",
                icon: "6e256b21",
                type: "liquid",
                lanKey: "electro.liquid.KClO3_aq",
                search: {
                    en: "KClO3",
                    zh: "kclo3lv\u6C2Fsuan\u9178jia\u94BErong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 55
            }, {
                name: "\u78B3\u9178\u6C22\u94BE\u6EB6\u6DB2",
                eqName: "KHCO3_aq",
                icon: "6ea6652c",
                type: "liquid",
                lanKey: "electro.liquid.KHCO3_aq",
                search: {
                    en: "KHCO3",
                    zh: "khco3tan\u78B3suan\u9178qing\u6C22jia\u94BErong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 56
            }, {
                name: "\u7898\u5316\u94BE\u6EB6\u6DB2",
                eqName: "KI_aq",
                icon: "c87067f5",
                type: "liquid",
                lanKey: "electro.liquid.KI_aq",
                search: {
                    en: "KI",
                    zh: "kidian\u7898hua\u5316jia\u94BErong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 57
            }, {
                name: "\u9AD8\u9530\u9178\u94BE\u6EB6\u6DB2",
                eqName: "KMnO4_aq",
                icon: "514bdf28",
                type: "liquid",
                lanKey: "electro.liquid.KMnO4_aq",
                search: {
                    en: "KMnO4",
                    zh: "kmno4gao\u9AD8meng\u9530suan\u9178jia\u94BErong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 58
            }, {
                name: "\u91CD\u94EC\u9178\u94BE\u6EB6\u6DB2",
                eqName: "K2Cr2O7_aq",
                icon: "ce9619aa",
                type: "liquid",
                lanKey: "electro.liquid.K2Cr2O7_aq",
                search: {
                    en: "K2Cr2O7",
                    zh: "k2cr2o7zhong\u91CDge\u94ECsuan\u9178jia\u94BErong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 59
            }, {
                name: "\u786B\u6C30\u5316\u94BE\u6EB6\u6DB2",
                eqName: "KSCN_aq",
                icon: "bf473a5d",
                type: "liquid",
                lanKey: "electro.liquid.KSCN_aq",
                search: {
                    en: "KSCN",
                    zh: "kscnliu\u786Bqing\u6C30hua\u5316jia\u94BErong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 60
            }, {
                name: "\u94C1\u6C30\u5316\u94BE\u6EB6\u6DB2",
                eqName: "K3[Fe(CN)6]_aq",
                icon: "4cb74ecd",
                type: "liquid",
                visible: !0,
                isLock: !1,
                sortIndex: 60.1,
                lanKey: "electro.liquid.K3[Fe(CN)6]_aq",
                search: {
                    en: "K3[Fe(CN)6]",
                    zh: "k3[fe(cn)6]tie\u94C1qing\u6C30hua\u5316jia\u94BErong\u6EB6ye\u6DB2"
                }
            }, {
                name: "\u6C2F\u5316\u9499\u6EB6\u6DB2",
                eqName: "CaCl2_aq",
                icon: "fd2ef391",
                type: "liquid",
                lanKey: "electro.liquid.CaCl2_aq",
                search: {
                    en: "CaCl2",
                    zh: "cacl2lv\u6C2Fhua\u5316gai\u9499rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 61
            }, {
                name: "\u785D\u9178\u9499\u6EB6\u6DB2",
                eqName: "Ca(NO3)2_aq",
                icon: "0c3083d4",
                type: "liquid",
                lanKey: "electro.liquid.Ca(NO3)2_aq",
                search: {
                    en: "Ca(NO3)2",
                    zh: "ca(no3)2xiao\u785Dsuan\u9178gai\u9499rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 62
            }, {
                name: "\u6C2F\u5316\u94A0\u6EB6\u6DB2",
                eqName: "NaCl_aq",
                icon: "c6995d8a",
                type: "liquid",
                lanKey: "electro.liquid.NaCl_aq",
                search: {
                    en: "NaCl",
                    zh: "nacllv\u6C2Fhua\u5316na\u94A0rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 63
            }, {
                name: "\u786B\u9178\u94A0\u6EB6\u6DB2",
                eqName: "Na2SO4_aq",
                icon: "6f5d4405",
                type: "liquid",
                lanKey: "electro.liquid.Na2SO4_aq",
                search: {
                    en: "Na2SO4",
                    zh: "na2so4liu\u786Bsuan\u9178na\u94A0rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 64
            }, {
                name: "\u785D\u9178\u94A0\u6EB6\u6DB2",
                eqName: "NaNO3_aq",
                icon: "ee645c5d",
                type: "liquid",
                lanKey: "electro.liquid.NaNO3_aq",
                search: {
                    en: "NaNO3",
                    zh: "nano3xiao\u785Dsuan\u9178na\u94A0rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 65
            }, {
                name: "\u78B3\u9178\u94A0\u6EB6\u6DB2",
                eqName: "Na2CO3_aq",
                icon: "896c3b67",
                type: "liquid",
                lanKey: "electro.liquid.Na2CO3_aq",
                search: {
                    en: "Na2CO3",
                    zh: "na2co3tan\u78B3suan\u9178na\u94A0rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 66
            }, {
                name: "\u504F\u94DD\u9178\u94A0\u6EB6\u6DB2",
                eqName: "NaAlO2_aq",
                icon: "f90c6ba2",
                type: "liquid",
                lanKey: "electro.liquid.NaAlO2_aq",
                search: {
                    en: "NaAlO2",
                    zh: "naalo2pian\u504Flv\u94DDsuan\u9178na\u94A0rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 67
            }, {
                name: "\u78B3\u9178\u6C22\u94A0\u6EB6\u6DB2",
                eqName: "NaHCO3_aq",
                icon: "0cb6ce84",
                type: "liquid",
                lanKey: "electro.liquid.NaHCO3_aq",
                search: {
                    en: "NaHCO3",
                    zh: "nahco3tan\u78B3suan\u9178qing\u6C22na\u94A0rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 68
            }, {
                name: "\u786B\u9178\u6C22\u94A0\u6EB6\u6DB2",
                eqName: "NaHSO4_aq",
                icon: "65e4bdd6",
                type: "liquid",
                lanKey: "electro.liquid.NaHSO4_aq",
                search: {
                    en: "NaHSO4",
                    zh: "nahso4liu\u786Bsuan\u9178qing\u6C22na\u94A0rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 69
            }, {
                name: "\u7898\u5316\u94A0\u6EB6\u6DB2",
                eqName: "NaI_aq",
                icon: "f86dd0cf",
                type: "liquid",
                lanKey: "electro.liquid.NaI_aq",
                search: {
                    en: "NaI",
                    zh: "naidian\u7898hua\u5316na\u94A0rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 70
            }, {
                name: "\u6EB4\u5316\u94A0\u6EB6\u6DB2",
                eqName: "NaBr_aq",
                icon: "9986ae97",
                type: "liquid",
                lanKey: "electro.liquid.NaBr_aq",
                search: {
                    en: "NaBr",
                    zh: "nabrxiu\u6EB4hua\u5316na\u94A0rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 71
            }, {
                name: "\u786B\u4EE3\u786B\u9178\u94A0\u6EB6\u6DB2",
                eqName: "Na2S2O3_aq",
                icon: "be61ff20",
                type: "liquid",
                lanKey: "electro.liquid.Na2S2O3_aq",
                search: {
                    en: "Na2S2O3",
                    zh: "na2s2o3liu\u786Bdai\u4EE3liu\u786Bsuan\u9178na\u94A0rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 72
            }, {
                name: "\u6C2F\u5316\u9541\u6EB6\u6DB2",
                eqName: "MgCl2_aq",
                icon: "439504c1",
                type: "liquid",
                lanKey: "electro.liquid.MgCl2_aq",
                search: {
                    en: "MgCl2",
                    zh: "mgcl2lv\u6C2Fhua\u5316mei\u9541rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 73
            }, {
                name: "\u786B\u9178\u9541\u6EB6\u6DB2",
                eqName: "MgSO4_aq",
                icon: "23837d77",
                type: "liquid",
                lanKey: "electro.liquid.MgSO4_aq",
                search: {
                    en: "MgSO4",
                    zh: "mgso4liu\u786Bsuan\u9178mei\u9541rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 74
            }, {
                name: "\u785D\u9178\u9541\u6EB6\u6DB2",
                eqName: "Mg(NO3)2_aq",
                icon: "fd1bda59",
                type: "liquid",
                lanKey: "electro.liquid.Mg(NO3)2_aq",
                search: {
                    en: "Mg(NO3)2",
                    zh: "mg(no3)2xiao\u785Dsuan\u9178mei\u9541rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 75
            }, {
                name: "\u6C2F\u5316\u94DD\u6EB6\u6DB2",
                eqName: "AlCl3_aq",
                icon: "3aa77813",
                type: "liquid",
                lanKey: "electro.liquid.AlCl3_aq",
                search: {
                    en: "AlCl3",
                    zh: "alcl3lv\u6C2Fhua\u5316lv\u94DDrong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 76
            }, {
                name: "\u786B\u9178\u94DD\u6EB6\u6DB2",
                eqName: "Al2(SO4)3_aq",
                icon: "a56f35b2",
                type: "liquid",
                lanKey: "electro.liquid.Al2(SO4)3_aq",
                search: {
                    en: "Al2(SO4)3",
                    zh: "al2(so4)3liu\u786Bsuan\u9178lv\u94DDrong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 77
            }, {
                name: "\u785D\u9178\u94DD\u6EB6\u6DB2",
                eqName: "Al(NO3)3_aq",
                icon: "8a3dc04a",
                type: "liquid",
                lanKey: "electro.liquid.Al(NO3)3_aq",
                search: {
                    en: "Al(NO3)3",
                    zh: "al(no3)3xiao\u785Dsuan\u9178lv\u94DDrong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 78
            }, {
                name: "\u6C2F\u5316\u950C\u6EB6\u6DB2",
                eqName: "ZnCl2_aq",
                icon: "48c73c83",
                type: "liquid",
                lanKey: "electro.liquid.ZnCl2_aq",
                search: {
                    en: "ZnCl2",
                    zh: "zncl2lv\u6C2Fhua\u5316xin\u950Crong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 79
            }, {
                name: "\u786B\u9178\u950C\u6EB6\u6DB2",
                eqName: "ZnSO4_aq",
                icon: "a7043d3b",
                type: "liquid",
                lanKey: "electro.liquid.ZnSO4_aq",
                search: {
                    en: "ZnSO4",
                    zh: "znso4liu\u786Bsuan\u9178xin\u950Crong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 80
            }, {
                name: "\u6C2F\u5316\u9530\u6EB6\u6DB2",
                eqName: "MnCl2_aq",
                icon: "84c2c97a",
                type: "liquid",
                lanKey: "electro.liquid.MnCl2_aq",
                search: {
                    en: "MnCl2",
                    zh: "mncl2lv\u6C2Fhua\u5316meng\u9530rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 81
            }, {
                name: "\u786B\u9178\u9530\u6EB6\u6DB2",
                eqName: "MnSO4_aq",
                icon: "b0dc06d4",
                type: "liquid",
                lanKey: "electro.liquid.MnSO4_aq",
                search: {
                    en: "MnSO4",
                    zh: "mnso4liu\u786Bsuan\u9178meng\u9530rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 82
            }, {
                name: "\u6C2F\u5316\u4E9A\u94C1\u6EB6\u6DB2",
                eqName: "FeCl2_aq",
                icon: "1eb0a72f",
                type: "liquid",
                lanKey: "electro.liquid.FeCl2_aq",
                search: {
                    en: "FeCl2",
                    zh: "fecl2lv\u6C2Fhua\u5316ya\u4E9Atie\u94C1rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 83
            }, {
                name: "\u6C2F\u5316\u94C1\u6EB6\u6DB2",
                eqName: "FeCl3_aq",
                icon: "78cab16f",
                type: "liquid",
                lanKey: "electro.liquid.FeCl3_aq",
                search: {
                    en: "FeCl3",
                    zh: "fecl3lv\u6C2Fhua\u5316tie\u94C1rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 84
            }, {
                name: "\u786B\u9178\u4E9A\u94C1\u6EB6\u6DB2",
                eqName: "FeSO4_aq",
                icon: "cf26ef22",
                type: "liquid",
                lanKey: "electro.liquid.FeSO4_aq",
                search: {
                    en: "FeSO4",
                    zh: "feso4liu\u786Bsuan\u9178ya\u4E9Atie\u94C1rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 85
            }, {
                name: "\u786B\u9178\u94C1\u6EB6\u6DB2",
                eqName: "Fe2(SO4)3_aq",
                icon: "cf98fc19",
                type: "liquid",
                lanKey: "electro.liquid.Fe2(SO4)3_aq",
                search: {
                    en: "Fe2(SO4)3",
                    zh: "fe2(so4)3liu\u786Bsuan\u9178tie\u94C1rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 86
            }, {
                name: "\u785D\u9178\u94C5",
                eqName: "Pb(NO3)2_aq",
                icon: "Pb(NO3)2_aq",
                type: "liquid",
                lanKey: "electro.liquid.Pb(NO3)2_aq",
                search: {
                    en: "Pb(NO3)2",
                    zh: "pb(no3)2xiao\u785Dsuan\u9178qian\u94C5"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 87
            }, {
                name: "\u6C2F\u5316\u94F5\u6EB6\u6DB2",
                eqName: "NH4Cl_aq",
                icon: "6d217472",
                type: "liquid",
                lanKey: "electro.liquid.NH4Cl_aq",
                search: {
                    en: "NH4Cl",
                    zh: "nh4cllv\u6C2Fhua\u5316an\u94F5rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 88
            }, {
                name: "\u786B\u9178\u94F5\u6EB6\u6DB2",
                eqName: "(NH4)2SO4_aq",
                icon: "dce2deb8",
                type: "liquid",
                lanKey: "electro.liquid.(NH4)2SO4_aq",
                search: {
                    en: "(NH4)2SO4",
                    zh: "(nh4)2so4liu\u786Bsuan\u9178an\u94F5rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 89
            }, {
                name: "\u785D\u9178\u94F5\u6EB6\u6DB2",
                eqName: "NH4NO3_aq",
                icon: "0babefb6",
                type: "liquid",
                lanKey: "electro.liquid.NH4NO3_aq",
                search: {
                    en: "NH4NO3",
                    zh: "nh4no3xiao\u785Dsuan\u9178an\u94F5rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 90
            }, {
                name: "\u78B3\u9178\u6C22\u94F5\u6EB6\u6DB2",
                eqName: "NH4HCO3_aq",
                icon: "1dd86465",
                type: "liquid",
                lanKey: "electro.liquid.NH4HCO3_aq",
                search: {
                    en: "NH4HCO3",
                    zh: "nh4hco3tan\u78B3suan\u9178qing\u6C22an\u94F5rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 91
            }, {
                name: "\u78B3\u9178\u94F5\u6EB6\u6DB2",
                eqName: "(NH4)2CO3_aq",
                icon: "e86377ab",
                type: "liquid",
                lanKey: "electro.liquid.(NH4)2CO3_aq",
                search: {
                    en: "(NH4)2CO3",
                    zh: "(nh4)2co3tan\u78B3suan\u9178an\u94F5rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 92
            }, {
                name: "\u6C2F\u5316\u94DC\u6EB6\u6DB2",
                eqName: "CuCl2_aq",
                icon: "37e21aa0",
                type: "liquid",
                lanKey: "electro.liquid.CuCl2_aq",
                search: {
                    en: "CuCl2",
                    zh: "cucl2lv\u6C2Fhua\u5316tong\u94DCrong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 93
            }, {
                name: "\u786B\u9178\u94DC\u6EB6\u6DB2",
                eqName: "CuSO4_aq",
                icon: "4a673c9a",
                type: "liquid",
                lanKey: "electro.liquid.CuSO4_aq",
                search: {
                    en: "CuSO4",
                    zh: "cuso4liu\u786Bsuan\u9178tong\u94DCrong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 94
            }, {
                name: "\u785D\u9178\u94DC\u6EB6\u6DB2",
                eqName: "Cu(NO3)2_aq",
                icon: "6323857f",
                type: "liquid",
                lanKey: "electro.liquid.Cu(NO3)2_aq",
                search: {
                    en: "Cu(NO3)2",
                    zh: "cu(no3)2xiao\u785Dsuan\u9178tong\u94DCrong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 95
            }, {
                name: "\u785D\u9178\u94F6\u6EB6\u6DB2",
                eqName: "AgNO3_aq",
                icon: "5b2204de",
                type: "liquid",
                lanKey: "electro.liquid.AgNO3_aq",
                search: {
                    en: "AgNO3",
                    zh: "agno3xiao\u785Dsuan\u9178yin\u94F6rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 96
            }, {
                name: "\u6C2F\u5316\u94A1\u6EB6\u6DB2",
                eqName: "BaCl2_aq",
                icon: "38a192ed",
                type: "liquid",
                lanKey: "electro.liquid.BaCl2_aq",
                search: {
                    en: "BaCl2",
                    zh: "bacl2lv\u6C2Fhua\u5316bei\u94A1rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 97
            }, {
                name: "\u785D\u9178\u94A1\u6EB6\u6DB2",
                eqName: "Ba(NO3)2_aq",
                icon: "56d38582",
                type: "liquid",
                lanKey: "electro.liquid.Ba(NO3)2_aq",
                search: {
                    en: "Ba(NO3)2",
                    zh: "ba(no3)2xiao\u785Dsuan\u9178bei\u94A1rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 98
            }, {
                name: "\u6EB4\u6C34",
                eqName: "Br2_aq",
                icon: "082829c6",
                type: "liquid",
                lanKey: "electro.liquid.Br2_aq",
                search: {
                    en: "Br2",
                    zh: "br2xiu\u6EB4shui\u6C34"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 99
            }, {
                name: "\u6C2F\u6C34",
                eqName: "Cl2_aq",
                icon: "1ea82def",
                type: "liquid",
                lanKey: "electro.liquid.Cl2_aq",
                search: {
                    en: "Cl2",
                    zh: "cl2lv\u6C2Fshui\u6C34"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 100
            }, {
                name: "\u7898\u6C34",
                eqName: "I2_aq",
                icon: "3a7f53e2",
                type: "liquid",
                lanKey: "electro.liquid.I2_aq",
                search: {
                    en: "I2",
                    zh: "i2dian\u7898shui\u6C34"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 101
            }, {
                name: "\u53CC\u6C27\u6C34",
                eqName: "H2O2_aq",
                icon: "457b4845",
                type: "liquid",
                lanKey: "electro.liquid.H2O2_aq",
                search: {
                    en: "H2O2",
                    zh: "h2o2shuang\u53CCyang\u6C27shui\u6C34"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 102
            }, {
                name: "\u915A\u915E",
                eqName: "C20H14O4_aq",
                icon: "f3218dbe",
                type: "liquid",
                lanKey: "electro.liquid.C20H14O4_aq",
                search: {
                    en: "C20H14O4",
                    zh: "c20h14o4fen\u915Atai\u915E"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 103
            }, {
                name: "\u77F3\u854A",
                eqName: "C7H7O4N_aq",
                icon: "148b2e3e",
                type: "liquid",
                lanKey: "electro.liquid.C7H7O4N_aq",
                search: {
                    en: "C7H7O4N",
                    zh: "c7h7o4nshi\u77F3rui\u854A"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 104
            }, {
                name: "\u6DC0\u7C89\u6EB6\u6DB2",
                eqName: "(C6H10O5)n_aq",
                icon: "3eeb1bd7",
                type: "liquid",
                lanKey: "electro.liquid.(C6H10O5)n_aq",
                search: {
                    en: "(C6H10O5)n",
                    zh: "(c6h10o5)ndian\u6DC0fen\u7C89rong\u6EB6ye\u6DB2"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 105
            }, {
                name: "\u6C22\u6C14\u6C14\u56CA",
                eqName: "H2_Bag",
                icon: "GasBag",
                type: "gas",
                lanKey: "electro.gas.H2_Bag",
                search: {
                    en: "H2",
                    zh: "h2qing\u6C22qi\u6C14qi\u6C14nang\u56CA"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 106
            }, {
                name: "\u6C27\u6C14\u6C14\u56CA",
                eqName: "O2_Bag",
                icon: "GasBag",
                type: "gas",
                lanKey: "electro.gas.O2_Bag",
                search: {
                    en: "O2",
                    zh: "o2yang\u6C27qi\u6C14qi\u6C14nang\u56CA"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 107
            }, {
                name: "\u6C2F\u6C14\u6C14\u56CA",
                eqName: "Cl2_Bag",
                icon: "GasBag",
                type: "gas",
                lanKey: "electro.gas.Cl2_Bag",
                search: {
                    en: "Cl2",
                    zh: "cl2lv\u6C2Fqi\u6C14qi\u6C14nang\u56CA"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 108
            }, {
                name: "\u7532\u70F7\u6C14\u56CA",
                eqName: "CH4_Bag",
                icon: "GasBag",
                type: "gas",
                lanKey: "electro.gas.CH4_Bag",
                search: {
                    en: "CH4",
                    zh: "ch4jia\u7532wan\u70F7qi\u6C14nang\u56CA"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 109
            }, {
                name: "\u4E8C\u6C27\u5316\u78B3\u6C14\u56CA",
                eqName: "CO2_Bag",
                icon: "GasBag",
                type: "gas",
                lanKey: "electro.gas.CO2_Bag",
                search: {
                    en: "CO2",
                    zh: "co2er\u4E8Cyang\u6C27hua\u5316tan\u78B3qi\u6C14nang\u56CA"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 110
            }, {
                name: "\u68D5\u8272\u9178\u5F0F\u6EF4\u7BA1",
                eqName: "AcidBrownDropper",
                icon: "AcidBrownDropper",
                type: "eq",
                lanKey: "electro.eq.AcidBrownDropper",
                search: {
                    en: "AcidBrownDropper",
                    zh: "zong\u68D5se\u8272suan\u9178shi\u5F0Fdi\u6EF4guan\u7BA1"
                },
                visible: !1,
                isLock: !1,
                sortIndex: 111
            }, {
                name: "\u9178\u5F0F\u6EF4\u7BA1",
                eqName: "AcidDropper",
                icon: "AcidDropper",
                type: "eq",
                lanKey: "electro.eq.AcidDropper",
                search: {
                    en: "AcidDropper",
                    zh: "suan\u9178shi\u5F0Fdi\u6EF4guan\u7BA1"
                },
                visible: !1,
                isLock: !1,
                sortIndex: 112
            }, {
                name: "\u6EF4\u74F6",
                eqName: "DropperBottle",
                icon: "DropperBottle",
                type: "eq",
                lanKey: "electro.eq.DropperBottle",
                search: {
                    en: "DropperBottle",
                    zh: "di\u6EF4ping\u74F6"
                },
                visible: !1,
                isLock: !1,
                sortIndex: 113
            }, {
                name: "\u68D5\u8272\u6EF4\u74F6",
                eqName: "DropperBottleBrown",
                icon: "DropperBottleBrown",
                type: "eq",
                lanKey: "electro.eq.DropperBottleBrown",
                search: {
                    en: "DropperBottleBrown",
                    zh: "zong\u68D5se\u8272di\u6EF4ping\u74F6"
                },
                visible: !1,
                isLock: !1,
                sortIndex: 114
            }, {
                name: "\u7EC6\u53E3\u74F6\u76D6",
                eqName: "NarrowGlassPlug",
                icon: "NarrowGlassPlug",
                type: "eq",
                lanKey: "electro.eq.NarrowGlassPlug",
                search: {
                    en: "NarrowGlassPlug",
                    zh: "xi\u7EC6kou\u53E3ping\u74F6gai\u76D6"
                },
                visible: !1,
                isLock: !1,
                sortIndex: 115
            }, {
                name: "\u7EC6\u53E3\u74F6",
                eqName: "NarrowMouthBottle",
                icon: "NarrowMouthBottle",
                type: "eq",
                lanKey: "electro.eq.NarrowMouthBottle",
                search: {
                    en: "NarrowMouthBottle",
                    zh: "xi\u7EC6kou\u53E3ping\u74F6"
                },
                visible: !1,
                isLock: !1,
                sortIndex: 116
            }, {
                name: "\u7535\u89E3\u69FD\u76D6\u5B50",
                eqName: "CellCover",
                icon: "CellCover",
                type: "eq",
                lanKey: "electro.eq.CellCover",
                search: {
                    en: "CellCover",
                    zh: "dian\u7535jie\u89E3cao\u69FDgai\u76D6zi\u5B50"
                },
                visible: !0,
                isLock: !1,
                sortIndex: 117
            }, {
                name: "\u6EE4\u7EB8",
                eqName: "FilterPaper",
                icon: "FilterPaper",
                type: "eq",
                lanKey: "electro.eq.FilterPaper",
                visible: !0,
                isLock: !1,
                sortIndex: 117.1,
                search: {
                    en: "FilterPaper",
                    zh: "lv\u6EE4zhi\u7EB8"
                }
            }, {
                name: "\u82F9\u679C",
                eqName: "Apple",
                icon: "Apple",
                type: "eq",
                lanKey: "electro.eq.Apple",
                visible: !0,
                isLock: !1,
                sortIndex: 117.2,
                search: {
                    en: "Apple",
                    zh: "ping\u82F9guo\u679C"
                }
            }, {
                name: "\u65B9\u7A0B\u5F0F",
                eqName: "Equation",
                icon: "Equation",
                type: "eq",
                lanKey: "electro.eq.Equation",
                search: {
                    en: "Equation",
                    zh: "fang\u65B9cheng\u7A0Bshi\u5F0F"
                },
                visible: !1,
                isLock: !1,
                sortIndex: 118
            }]
              , lt = {
                Equation: {
                    noTexture: !0,
                    lanKey: "main.electro.eq.Equation"
                },
                TestPaperBlue: {
                    noTexture: !0,
                    lanKey: "main.electro.eq.TestPaperBlue"
                },
                TestPaperKI: {
                    noTexture: !0,
                    lanKey: "main.electro.eq.TestPaperKI"
                },
                TestPaperPH: {
                    noTexture: !0,
                    lanKey: "main.electro.eq.TestPaperPH"
                },
                TestPaperPt: {
                    noTexture: !0,
                    lanKey: "main.electro.eq.TestPaperPt"
                },
                TestPaperRed: {
                    noTexture: !0,
                    lanKey: "main.electro.eq.TestPaperRed"
                },
                FourCellElectrolyzerCombEq: {
                    eqs: ["FourCellElectrolyzer", "CellCover", "RubberPlug"],
                    lanKey: "main.electro.eq.FourCellElectrolyzerCombEq"
                },
                ThreeCellElectrolyzerCombEq: {
                    eqs: ["ThreeCellElectrolyzer", "CellCover", "RubberPlug"],
                    lanKey: "main.electro.eq.ThreeCellElectrolyzerCombEq"
                },
                TwoCellElectrolyzerCombEq: {
                    eqs: ["TwoCellElectrolyzer", "CellCover", "RubberPlug"],
                    lanKey: "main.electro.eq.TwoCellElectrolyzerCombEq"
                },
                Catheter90: {
                    eqs: ["RubberCatheter", "FlexibleGlassCatheter"],
                    lanKey: "main.electro.eq.Catheter90"
                },
                FlexibleGlassCatheter: {
                    noTexture: !0,
                    lanKey: "main.electro.eq.FlexibleGlassCatheter"
                },
                StraightGlassCatheter: {
                    noTexture: !0,
                    lanKey: "main.electro.eq.StraightGlassCatheter"
                },
                Wire: {
                    noTexture: !0,
                    lanKey: "\u672A\u8BBE\u7F6E\u540D\u5B57"
                },
                BlackWire: {
                    className: "Wire",
                    initData: {
                        colorType: 1
                    },
                    noTexture: !0,
                    lanKey: "main.electro.eq.BlackWire"
                },
                RedWire: {
                    className: "Wire",
                    initData: {
                        colorType: 0
                    },
                    noTexture: !0,
                    lanKey: "main.electro.eq.RedWire"
                },
                RubberCatheter: {
                    noTexture: !0,
                    lanKey: "main.electro.eq.RubberCatheter"
                },
                LiquidBottle: {
                    eqs: ["NarrowMouthBottle", "RubberPlug"],
                    lanKey: "\u672A\u8BBE\u7F6E\u540D\u5B57"
                },
                FrostedLiquidBottle: {
                    eqs: ["NarrowMouthBottle", "NarrowGlassPlug"],
                    lanKey: "\u672A\u8BBE\u7F6E\u540D\u5B57"
                },
                GasBagWithRubber: {
                    eqs: ["GasBag", "RubberCatheter", "FlexibleGlassCatheter"],
                    lanKey: "\u672A\u8BBE\u7F6E\u540D\u5B57"
                },
                BottleWithDropper: {
                    eqs: ["DropperBottle", "AcidDropper"],
                    lanKey: "\u672A\u8BBE\u7F6E\u540D\u5B57"
                },
                BrownBottleWithDropper: {
                    eqs: ["DropperBottleBrown", "AcidBrownDropper"],
                    lanKey: "\u672A\u8BBE\u7F6E\u540D\u5B57"
                },
                H2O_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        plugType: 1,
                        solvent: "H2O",
                        label: "H2O"
                    },
                    lanKey: "main.electro.liquid.H2O_aq"
                },
                NaCl_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "NaCl",
                        solute: {
                            formula: "NaCl",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.NaCl_aq"
                },
                H2SO4_conc_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "H2SO4",
                        solute: {
                            formula: "H2SO4",
                            concentration: 18.4
                        }
                    },
                    lanKey: "main.electro.liquid.H2SO4_conc_aq"
                },
                HCl_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "HCl",
                        solute: {
                            formula: "HCl",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.HCl_aq"
                },
                C20H14O4_aq: {
                    className: "BottleWithDropper",
                    initData: {
                        solvent: "H2O",
                        label: "C20H14O4",
                        solute: {
                            formula: "C20H14O4",
                            concentration: .001
                        }
                    },
                    lanKey: "main.electro.liquid.C20H14O4_aq"
                },
                "Ca(OH)2_aq": {
                    className: "LiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "Ca(OH)2",
                        solute: {
                            formula: "Ca(OH)2",
                            concentration: .01
                        }
                    },
                    lanKey: "main.electro.liquid.Ca(OH)2_aq"
                },
                C7H7O4N_aq: {
                    className: "BottleWithDropper",
                    initData: {
                        solvent: "H2O",
                        label: "C7H7O4N",
                        solute: {
                            formula: "C7H7O4N",
                            concentration: .001
                        }
                    },
                    lanKey: "main.electro.liquid.C7H7O4N_aq"
                },
                "Ba(NO3)2_aq": {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "Ba(NO3)2",
                        solute: {
                            formula: "Ba(NO3)2",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.Ba(NO3)2_aq"
                },
                "Ba(OH)2_aq": {
                    className: "LiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "Ba(OH)2",
                        solute: {
                            formula: "Ba(OH)2",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.Ba(OH)2_aq"
                },
                Br2: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "Br2",
                        label: "Br2"
                    },
                    lanKey: "main.electro.liquid.Br2"
                },
                CaCl2_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "CaCl2",
                        solute: {
                            formula: "CaCl2",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.CaCl2_aq"
                },
                "Ca(NO3)2_aq": {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "Ca(NO3)2",
                        solute: {
                            formula: "Ca(NO3)2",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.Ca(NO3)2_aq"
                },
                CuCl2_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "CuCl2",
                        solute: {
                            formula: "CuCl2",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.CuCl2_aq"
                },
                "Cu(NO3)2_aq": {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "Cu(NO3)2",
                        solute: {
                            formula: "Cu(NO3)2",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.Cu(NO3)2_aq"
                },
                CuSO4_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "CuSO4",
                        solute: {
                            formula: "CuSO4",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.CuSO4_aq"
                },
                "Fe2(SO4)3_aq": {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "Fe2(SO4)3",
                        solute: {
                            formula: "Fe2(SO4)3",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.Fe2(SO4)3_aq"
                },
                FeCl2_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "FeCl2",
                        solute: {
                            formula: "FeCl2",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.FeCl2_aq"
                },
                FeCl3_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "FeCl3",
                        solute: {
                            formula: "FeCl3",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.FeCl3_aq"
                },
                FeSO4_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "FeSO4",
                        solute: {
                            formula: "FeSO4",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.FeSO4_aq"
                },
                K2SO4_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "K2SO4",
                        solute: {
                            formula: "K2SO4",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.K2SO4_aq"
                },
                KCl_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "KCl",
                        solute: {
                            formula: "KCl",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.KCl_aq"
                },
                KClO3_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "KClO3",
                        solute: {
                            formula: "KClO3",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.KClO3_aq"
                },
                KI_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "KI",
                        solute: {
                            formula: "KI",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.KI_aq"
                },
                KMnO4_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "KMnO4",
                        solute: {
                            formula: "KMnO4",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.KMnO4_aq"
                },
                KNO3_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "KNO3",
                        solute: {
                            formula: "KNO3",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.KNO3_aq"
                },
                KOH_aq: {
                    className: "LiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "KOH",
                        solute: {
                            formula: "KOH",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.KOH_aq"
                },
                MgCl2_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "MgCl2",
                        solute: {
                            formula: "MgCl2",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.MgCl2_aq"
                },
                "Mg(NO3)2_aq": {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "Mg(NO3)2",
                        solute: {
                            formula: "Mg(NO3)2",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.Mg(NO3)2_aq"
                },
                MgSO4_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "MgSO4",
                        solute: {
                            formula: "MgSO4",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.MgSO4_aq"
                },
                MnCl2_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "MnCl2",
                        solute: {
                            formula: "MnCl2",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.MnCl2_aq"
                },
                Na2CO3_aq: {
                    className: "LiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "Na2CO3",
                        solute: {
                            formula: "Na2CO3",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.Na2CO3_aq"
                },
                Na2SO4_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "Na2SO4",
                        solute: {
                            formula: "Na2SO4",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.Na2SO4_aq"
                },
                NaAlO2_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "NaAlO2",
                        solute: {
                            formula: "NaAlO2",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.NaAlO2_aq"
                },
                NaHCO3_aq: {
                    className: "LiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "NaHCO3",
                        solute: {
                            formula: "NaHCO3",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.NaHCO3_aq"
                },
                NaHSO4_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "NaHSO4",
                        solute: {
                            formula: "NaHSO4",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.NaHSO4_aq"
                },
                NaNO3_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "NaNO3",
                        solute: {
                            formula: "NaNO3",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.NaNO3_aq"
                },
                NaOH_aq: {
                    className: "LiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "NaOH",
                        solute: {
                            formula: "NaOH",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.NaOH_aq"
                },
                "(NH4)2SO4_aq": {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "(NH4)2SO4",
                        solute: {
                            formula: "(NH4)2SO4",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.(NH4)2SO4_aq"
                },
                NH4Cl_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "NH4Cl",
                        solute: {
                            formula: "NH4Cl",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.NH4Cl_aq"
                },
                NH4NO3_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "NH4NO3",
                        solute: {
                            formula: "NH4NO3",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.NH4NO3_aq"
                },
                ZnCl2_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "ZnCl2",
                        solute: {
                            formula: "ZnCl2",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.ZnCl2_aq"
                },
                ZnSO4_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "ZnSO4",
                        solute: {
                            formula: "ZnSO4",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.ZnSO4_aq"
                },
                Ag2SO4_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "Ag2SO4",
                        solute: {
                            formula: "Ag2SO4",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.Ag2SO4_aq"
                },
                AgNO3_aq: {
                    className: "BrownBottleWithDropper",
                    initData: {
                        solvent: "H2O",
                        label: "AgNO3",
                        solute: {
                            formula: "AgNO3",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.AgNO3_aq"
                },
                H2SO4_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "H2SO4",
                        solute: {
                            formula: "H2SO4",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.H2SO4_aq"
                },
                HCl_conc_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "HCl",
                        solute: {
                            formula: "HCl",
                            concentration: 12
                        }
                    },
                    lanKey: "main.electro.liquid.HCl_conc_aq"
                },
                "Al2(SO4)3_aq": {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "Al2(SO4)3",
                        solute: {
                            formula: "Al2(SO4)3",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.Al2(SO4)3_aq"
                },
                HNO3_conc_aq: {
                    className: "BrownBottleWithDropper",
                    initData: {
                        solvent: "H2O",
                        label: "HNO3",
                        solute: {
                            formula: "HNO3",
                            concentration: 16
                        }
                    },
                    lanKey: "main.electro.liquid.HNO3_conc_aq"
                },
                HNO3_aq: {
                    className: "BrownBottleWithDropper",
                    initData: {
                        solvent: "H2O",
                        label: "HNO3",
                        solute: {
                            formula: "HNO3",
                            concentration: 2
                        }
                    },
                    lanKey: "main.electro.liquid.HNO3_aq"
                },
                AlCl3_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "AlCl3",
                        solute: {
                            formula: "AlCl3",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.AlCl3_aq"
                },
                NH3H2O_aq: {
                    className: "LiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "NH3H2O",
                        solute: {
                            formula: "NH3\xB7H2O",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.NH3H2O_aq"
                },
                "Al(NO3)3_aq": {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "Al(NO3)3",
                        solute: {
                            formula: "Al(NO3)3",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.Al(NO3)3_aq"
                },
                NH4HCO3_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "NH4HCO3",
                        solute: {
                            formula: "NH4HCO3",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.NH4HCO3_aq"
                },
                "(NH4)2CO3_aq": {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "(NH4)2CO3",
                        solute: {
                            formula: "(NH4)2CO3",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.(NH4)2CO3_aq"
                },
                I2_aq: {
                    className: "BrownBottleWithDropper",
                    initData: {
                        solvent: "H2O",
                        label: "I2",
                        solute: {
                            formula: "I2",
                            concentration: .001
                        }
                    },
                    lanKey: "main.electro.liquid.I2_aq"
                },
                HClO_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "HClO",
                        solute: {
                            formula: "HClO",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.HClO_aq"
                },
                Na2S2O3_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "Na2S2O3",
                        solute: {
                            formula: "Na2S2O3",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.Na2S2O3_aq"
                },
                H2O2_aq: {
                    className: "BrownBottleWithDropper",
                    initData: {
                        solvent: "H2O",
                        label: "H2O2",
                        solute: {
                            formula: "H2O2",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.H2O2_aq"
                },
                MnSO4_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "MnSO4",
                        solute: {
                            formula: "MnSO4",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.MnSO4_aq"
                },
                K2Cr2O7_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "K2Cr2O7",
                        solute: {
                            formula: "K2Cr2O7",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.K2Cr2O7_aq"
                },
                KSCN_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "KSCN",
                        solute: {
                            formula: "KSCN",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.KSCN_aq"
                },
                "K3[Fe(CN)6]_aq": {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "K3[Fe(CN)6]",
                        solute: {
                            formula: "K3[Fe(CN)6]",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.K3[Fe(CN)6]_aq"
                },
                "(C6H10O5)n_aq": {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "(C6H10O5)n",
                        solute: {
                            formula: "(C6H10O5)n",
                            concentration: .001
                        }
                    },
                    lanKey: "main.electro.liquid.(C6H10O5)n_aq"
                },
                NaI_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "NaI",
                        solute: {
                            formula: "NaI",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.NaI_aq"
                },
                NaBr_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "NaBr",
                        solute: {
                            formula: "NaBr",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.NaBr_aq"
                },
                Cl2_aq: {
                    className: "BrownBottleWithDropper",
                    initData: {
                        solvent: "H2O",
                        label: "Cl2",
                        solute: {
                            formula: "Cl2",
                            concentration: .05
                        }
                    },
                    lanKey: "main.electro.liquid.Cl2_aq"
                },
                Br2_aq: {
                    className: "BrownBottleWithDropper",
                    initData: {
                        solvent: "H2O",
                        label: "Br2",
                        solute: {
                            formula: "Br2",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.Br2_aq"
                },
                CH3COOH: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "CH3COOH",
                        label: "CH3COOH"
                    },
                    lanKey: "main.electro.liquid.CH3COOH"
                },
                KHCO3_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "KHCO3",
                        solute: {
                            formula: "KHCO3",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.KHCO3_aq"
                },
                K2CO3_aq: {
                    className: "LiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "K2CO3",
                        solute: {
                            formula: "K2CO3",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.K2CO3_aq"
                },
                BaCl2_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "BaCl2",
                        solute: {
                            formula: "BaCl2",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.BaCl2_aq"
                },
                "Pb(NO3)2_aq": {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "Pb(NO3)2",
                        solute: {
                            formula: "Pb(NO3)2",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.Pb(NO3)2_aq"
                },
                H3PO4_aq: {
                    className: "FrostedLiquidBottle",
                    initData: {
                        solvent: "H2O",
                        label: "H3PO4",
                        solute: {
                            formula: "H3PO4",
                            concentration: .1
                        }
                    },
                    lanKey: "main.electro.liquid.H3PO4_aq"
                },
                H2_Bag: {
                    className: "GasBagWithRubber",
                    initData: {
                        chemical: "H2",
                        label: "H2"
                    },
                    lanKey: "main.electro.gas.H2_Bag"
                },
                O2_Bag: {
                    className: "GasBagWithRubber",
                    initData: {
                        chemical: "O2",
                        label: "O2"
                    },
                    lanKey: "main.electro.gas.O2_Bag"
                },
                CH4_Bag: {
                    className: "GasBagWithRubber",
                    initData: {
                        chemical: "CH4",
                        label: "CH4"
                    },
                    lanKey: "main.electro.gas.CH4_Bag"
                },
                Cl2_Bag: {
                    className: "GasBagWithRubber",
                    initData: {
                        chemical: "Cl2",
                        label: "Cl2"
                    },
                    lanKey: "main.electro.gas.Cl2_Bag"
                },
                CO2_Bag: {
                    className: "GasBagWithRubber",
                    initData: {
                        chemical: "CO2",
                        label: "CO2"
                    },
                    lanKey: "main.electro.gas.CO2_Bag"
                },
                GasCollectingBottle: {
                    lanKey: "main.electro.eq.GasCollectingBottle"
                },
                AcidBrownDropper: {
                    lanKey: "main.electro.eq.AcidBrownDropper"
                },
                AcidDropper: {
                    lanKey: "main.electro.eq.AcidDropper"
                },
                DropperBottle: {
                    lanKey: "main.electro.eq.DropperBottle"
                },
                DropperBottleBrown: {
                    lanKey: "main.electro.eq.DropperBottleBrown"
                },
                GlassSheet: {
                    lanKey: "main.electro.eq.GlassSheet"
                },
                NailWithZn: {
                    className: "Nail",
                    initData: {
                        ironType: 0
                    },
                    lanKey: "main.electro.eq.NailWithZn"
                },
                NailWithCu: {
                    className: "Nail",
                    initData: {
                        ironType: 1
                    },
                    lanKey: "main.electro.eq.NailWithCu"
                },
                Dish: {
                    lanKey: "main.electro.eq.Dish"
                },
                NarrowGlassPlug: {
                    lanKey: "main.electro.eq.NarrowGlassPlug"
                },
                RubberPlug: {
                    lanKey: "main.electro.eq.RubberPlug"
                },
                NarrowMouthBottle: {
                    lanKey: "main.electro.eq.NarrowMouthBottle"
                },
                ADropper: {
                    lanKey: "main.electro.eq.ADropper"
                },
                BigTestTube: {
                    lanKey: "main.electro.eq.BigTestTube"
                },
                HugeBeaker: {
                    lanKey: "main.electro.eq.HugeBeaker"
                },
                FilterPaper: {
                    lanKey: "main.electro.eq.FilterPaper"
                },
                Apple: {
                    lanKey: "main.electro.eq.Apple"
                },
                TestPaperBookBlue: {
                    lanKey: "main.electro.eq.TestPaperBookBlue"
                },
                TestPaperBookKI: {
                    lanKey: "main.electro.eq.TestPaperBookKI"
                },
                TestPaperBookPH: {
                    lanKey: "main.electro.eq.TestPaperBookPH"
                },
                TestPaperBookPt: {
                    lanKey: "main.electro.eq.TestPaperBookPt"
                },
                TestPaperBookRed: {
                    lanKey: "main.electro.eq.TestPaperBookRed"
                },
                AnionExchangeMembrane: {
                    lanKey: "main.electro.eq.AnionExchangeMembrane"
                },
                CationExchangeMembrane: {
                    lanKey: "main.electro.eq.CationExchangeMembrane"
                },
                SaltBridge: {
                    lanKey: "main.electro.eq.SaltBridge"
                },
                CellCover: {
                    lanKey: "main.electro.eq.CellCover"
                },
                Battery: {
                    lanKey: "main.electro.eq.Battery"
                },
                Bulb: {
                    lanKey: "main.electro.eq.Bulb"
                },
                Led: {
                    lanKey: "main.electro.eq.Led"
                },
                Motor: {
                    lanKey: "main.electro.eq.Motor"
                },
                Galvanometer: {
                    lanKey: "main.electro.eq.Galvanometer"
                },
                SingleSwitch: {
                    lanKey: "main.electro.eq.SingleSwitch"
                },
                ElectrodeAg: {
                    lanKey: "main.electro.electrode.ElectrodeAg"
                },
                ElectrodeAl: {
                    lanKey: "main.electro.electrode.ElectrodeAl"
                },
                ElectrodeC: {
                    lanKey: "main.electro.electrode.ElectrodeC"
                },
                ElectrodeCrudeCu: {
                    lanKey: "main.electro.electrode.ElectrodeCrudeCu"
                },
                ElectrodeCu: {
                    lanKey: "main.electro.electrode.ElectrodeCu"
                },
                ElectrodeFe: {
                    lanKey: "main.electro.electrode.ElectrodeFe"
                },
                ElectrodeMg: {
                    lanKey: "main.electro.electrode.ElectrodeMg"
                },
                ElectrodePb: {
                    lanKey: "main.electro.electrode.ElectrodePb"
                },
                ElectrodePbO2: {
                    lanKey: "main.electro.electrode.ElectrodePbO2"
                },
                ElectrodePt: {
                    lanKey: "main.electro.electrode.ElectrodePt"
                },
                ElectrodeZn: {
                    lanKey: "main.electro.electrode.ElectrodeZn"
                }
            }
              , rt = [{
                formula: "(C17H35COO)2Ca",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786C\u8102\u9178\u9499",
                molecularMass: 606.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 359,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.08,
                meltingPoint: 148,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "(CH3COO)2Ca",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u918B\u9178\u9499",
                molecularMass: 158.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 34.7,
                ions: [{
                    formula: "Ca",
                    valence: 2,
                    count: 1
                }, {
                    formula: "CH3COO",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.5,
                meltingPoint: 160,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "(CH3COO)2Cu",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u918B\u9178\u94DC",
                molecularMass: 181.5,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 7.2,
                ions: [{
                    formula: "Cu",
                    valence: 2,
                    count: 1
                }, {
                    formula: "CH3COO",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.84,
                meltingPoint: 115,
                solidColor: 35723,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "(CH3COO)2Fe",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u4E59\u9178\u4E9A\u94C1",
                molecularMass: 173.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 30,
                ions: [{
                    formula: "Fe",
                    valence: 2,
                    count: 1
                }, {
                    formula: "CH3COO",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1,
                meltingPoint: 200,
                solidColor: 6876578,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "(CH3COO)2Mg",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u918B\u9178\u9541",
                molecularMass: 142.3,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 60,
                ions: [{
                    formula: "Mg",
                    valence: 2,
                    count: 1
                }, {
                    formula: "CH3COO",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.45,
                meltingPoint: 80,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "(NH4)2CO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u78B3\u9178\u94F5",
                molecularMass: 96,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 100,
                ions: [{
                    formula: "NH4",
                    valence: 1,
                    count: 2
                }, {
                    formula: "CO3",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.58,
                meltingPoint: "58\uFF08\u5206\u89E3\uFF09",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "(NH4)2SO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u4E9A\u786B\u9178\u94F5",
                molecularMass: 116.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 75,
                ions: [{
                    formula: "NH4",
                    valence: 1,
                    count: 2
                }, {
                    formula: "SO3",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.41,
                meltingPoint: "60\uFF08\u5206\u89E3\uFF09",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "(NH4)2SO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u9178\u94F5",
                molecularMass: 132.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 76.9,
                ions: [{
                    formula: "NH4",
                    valence: 1,
                    count: 2
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.77,
                meltingPoint: "235\uFF08\u5206\u89E3\uFF09",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "[Ag(NH3)2]Cl",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u6C2F\u5316\u4E8C\u6C28\u5408\u94F6",
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                ions: [{
                    formula: "Ag(NH3)2",
                    valence: 1,
                    count: 1
                }, {
                    formula: "Cl",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1,
                meltingPoint: "\u5206\u89E3",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "[Ag(NH3)2]OH",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u6C22\u6C27\u5316\u4E8C\u6C28\u5408\u94F6",
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                ions: [{
                    formula: "Ag(NH3)2",
                    valence: 1,
                    count: 1
                }, {
                    formula: "OH",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1,
                meltingPoint: "\u5206\u89E3",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "[Cu(NH3)4]SO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u9178\u56DB\u6C28\u5408\u94DC",
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                ions: [{
                    formula: "[Cu(NH3)4]",
                    valence: 2,
                    count: 1
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1,
                meltingPoint: 9999,
                solidColor: 680893,
                solidAlpha: [1, 1, 1, 1]
            }, {
                formula: "Ag",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u94F6",
                molecularMass: 107.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 2162,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 10.49,
                meltingPoint: 962,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Silver",
                jpName: "\u9280",
                twName: "\u9280",
                krName: "\uC740"
            }, {
                formula: "Ag2CO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u78B3\u9178\u94F6",
                molecularMass: 275.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 845e-14,
                ions: [{
                    formula: "Ag",
                    valence: 1,
                    count: 2
                }, {
                    formula: "CO3",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 6.08,
                meltingPoint: "210\uFF08\u5206\u89E3\uFF09",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "Ag2O",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C27\u5316\u94F6",
                molecularMass: 231.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 7.14,
                meltingPoint: "280\uFF08\u5206\u89E3\uFF09",
                solidColor: 3552822,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Silver oxide",
                jpName: "\u9178\u5316\u9280",
                twName: "\u6C27\u5316\u9280",
                krName: "\uC0B0\uD654\uC740"
            }, {
                formula: "Ag2S",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u5316\u94F6",
                molecularMass: 247.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 669e-52,
                ions: [{
                    formula: "Ag",
                    valence: 1,
                    count: 2
                }, {
                    formula: "S",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u6C27\u5316",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 7.23,
                meltingPoint: 825,
                solidColor: 0,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Silver sulfide",
                jpName: "\u786B\u5316\u9280",
                twName: "\u786B\u5316\u9280",
                krName: "\uD669\uD654\uC740"
            }, {
                formula: "Ag2SO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u9178\u94F6",
                molecularMass: 311.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 14e-6,
                ions: [{
                    formula: "Ag",
                    valence: 1,
                    count: 2
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1085,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 5.45,
                meltingPoint: 652,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Silver sulfate",
                jpName: "\u786B\u9178\u9280",
                twName: "\u786B\u9178\u9280",
                krName: "\uD669\uC0B0\uC740"
            }, {
                formula: "AgBr",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6EB4\u5316\u94F6",
                molecularMass: 187.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 535e-15,
                ions: [{
                    formula: "Ag",
                    valence: 1,
                    count: 1
                }, {
                    formula: "Br",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "1300\uFF08\u5206\u89E3\uFF09",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 6.47,
                meltingPoint: 703,
                solidColor: 16775885,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Silver bromide",
                jpName: "\u81ED\u5316\u9280",
                twName: "\u6EB4\u5316\u9280",
                krName: "\uBE0C\uB86C\uD654\uC740"
            }, {
                formula: "AgCl",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C2F\u5316\u94F6",
                molecularMass: 143.4,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 177e-12,
                ions: [{
                    formula: "Ag",
                    valence: 1,
                    count: 1
                }, {
                    formula: "Cl",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1547,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 5.56,
                meltingPoint: 728,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Silver chloride",
                jpName: "\u5869\u5316\u9280",
                twName: "\u6C2F\u5316\u9280",
                krName: "\uC5FC\uD654\uC740"
            }, {
                formula: "AgF",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C1F\u5316\u94F6",
                molecularMass: 126.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 180,
                ions: [{
                    formula: "Ag",
                    valence: 1,
                    count: 1
                }, {
                    formula: "F",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1159,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 5.85,
                meltingPoint: 708,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Silver fluoride",
                jpName: "\u30D5\u30C3\u5316\u9280",
                twName: "\u6C1F\u5316\u9280",
                krName: "\uD50C\uB8E8\uC624\uB9B0\uD654\uC740"
            }, {
                formula: "AgI",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u7898\u5316\u94F6",
                molecularMass: 234.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 85e-18,
                ions: [{
                    formula: "Ag",
                    valence: 1,
                    count: 1
                }, {
                    formula: "I",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1506,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 5.68,
                meltingPoint: 829,
                solidColor: 16776960,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Silver iodide",
                jpName: "\u30E8\u30A6\u5316\u9280",
                twName: "\u7898\u5316\u9280",
                krName: "\uC694\uC624\uB4DC\uD654\uC740"
            }, {
                formula: "AgNO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u785D\u9178\u94F6",
                molecularMass: 169.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 220,
                solutionHeat: 22590,
                ions: [{
                    formula: "Ag",
                    valence: 1,
                    count: 1
                }, {
                    formula: "NO3",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "440\uFF08\u5206\u89E3\uFF09",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 4.35,
                meltingPoint: 208,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Silver nitrate",
                jpName: "\u785D\u9178\u9280",
                twName: "\u785D\u9178\u9280",
                krName: "\uC9C8\uC0B0\uC740"
            }, {
                formula: "AgOH",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C22\u6C27\u5316\u94F6",
                molecularMass: 124.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 2e-8,
                ions: [{
                    formula: "Ag",
                    valence: 1,
                    count: 1
                }, {
                    formula: "OH",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 7.14,
                meltingPoint: "\u5206\u89E3",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "Al",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u94DD\u7C89",
                molecularMass: 27,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1091,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.7,
                meltingPoint: 650,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Aluminium",
                jpName: "\u30A2\u30EB\u30DF\u30CB\u30A6\u30E0",
                twName: "\u92C1",
                krName: "\uC54C\uB8E8\uBBF8\uB284"
            }, {
                formula: "Al(NO3)3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u785D\u9178\u94DD",
                molecularMass: 213,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 76,
                ions: [{
                    formula: "Al",
                    valence: 3,
                    count: 1
                }, {
                    formula: "NO3",
                    valence: -1,
                    count: 3
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.05,
                meltingPoint: 73,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Al(OH)3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C22\u6C27\u5316\u94DD",
                molecularMass: 78,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 19e-34,
                ions: [{
                    formula: "Al",
                    valence: 3,
                    count: 1
                }, {
                    formula: "OH",
                    valence: -1,
                    count: 3
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.4,
                meltingPoint: 300,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Al2(SO4)3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u9178\u94DD",
                molecularMass: 342.3,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 38,
                ions: [{
                    formula: "Al",
                    valence: 3,
                    count: 2
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 3
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.69,
                meltingPoint: "770\uFF08\u5206\u89E3\uFF09",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Al2O3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C27\u5316\u94DD",
                molecularMass: 102,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 2977,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.95,
                meltingPoint: 2072,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Aluminium oxide",
                jpName: "\u9178\u5316\u30A2\u30EB\u30DF\u30CB\u30A6\u30E0",
                twName: "\u6C27\u5316\u92C1",
                krName: "\uC0B0\uD654 \uC54C\uB8E8\uBBF8\uB284 "
            }, {
                formula: "Al2S3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u5316\u94DD",
                molecularMass: 150.3,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1500,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.02,
                meltingPoint: 1100,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Aluminium sulfide",
                jpName: "\u786B\u5316\u30A2\u30EB\u30DF\u30CB\u30A6\u30E0",
                twName: "\u786B\u5316\u92C1",
                krName: "\uD669\uD654 \uC54C\uB8E8\uBBF8\uB284 "
            }, {
                formula: "AlBr3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6EB4\u5316\u94DD",
                molecularMass: 266.7,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                ions: [{
                    formula: "Al",
                    valence: 3,
                    count: 1
                }, {
                    formula: "Br",
                    valence: -1,
                    count: 3
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 265,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.2,
                meltingPoint: 97.8,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Aluminium bromide",
                jpName: "\u81ED\u5316\u30A2\u30EB\u30DF\u30CB\u30A6\u30E0",
                twName: "\u6EB4\u5316\u92C1",
                krName: "\uBE0C\uB86C\uD654 \uC54C\uB8E8\uBBF8\uB284"
            }, {
                formula: "AlCl3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C2F\u5316\u94DD",
                molecularMass: 133.5,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 45.8,
                ions: [{
                    formula: "Al",
                    valence: 3,
                    count: 1
                }, {
                    formula: "Cl",
                    valence: -1,
                    count: 3
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 180,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.48,
                meltingPoint: 194,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Aluminium chloride",
                jpName: "\u5869\u5316\u30A2\u30EB\u30DF\u30CB\u30A6\u30E0",
                twName: "\u6C2F\u5316\u92C1",
                krName: "\uC5FC\uD654 \uC54C\uB8E8\uBBF8\uB284"
            }, {
                formula: "AlI3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u7898\u5316\u94DD",
                molecularMass: 407.7,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 10,
                ions: [{
                    formula: "Al",
                    valence: 3,
                    count: 1
                }, {
                    formula: "I",
                    valence: -1,
                    count: 3
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 382,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.98,
                meltingPoint: 191,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "Ar",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u6C29\u6C14",
                molecularMass: 40,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                densityGas: .001784,
                heatCapacityGas: 20.79,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -185.9,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -189.4,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Argon",
                jpName: "\u30A2\u30EB\u30B4\u30F3",
                twName: "\u6C2C",
                krName: "\uC544\uB974\uACE4"
            }, {
                formula: "Ba",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u94A1",
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: 1600,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.51,
                meltingPoint: 725,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1]
            }, {
                formula: "Ba(HCO3)2",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u78B3\u9178\u6C22\u94A1",
                molecularMass: 259,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 200,
                ions: [{
                    formula: "Ba",
                    valence: 2,
                    count: 1
                }, {
                    formula: "HCO3",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2,
                meltingPoint: "100\uFF08\u5206\u89E3\uFF09",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "Ba(NO3)2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u785D\u9178\u94A1",
                molecularMass: 261,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 10,
                ions: [{
                    formula: "Ba",
                    valence: 2,
                    count: 1
                }, {
                    formula: "NO3",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "600\uFF08\u5206\u89E3\uFF09",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.24,
                meltingPoint: 590,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Ba(OH)2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C22\u6C27\u5316\u94A1",
                molecularMass: 171,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 3.89,
                ions: [{
                    formula: "Ba",
                    valence: 2,
                    count: 1
                }, {
                    formula: "OH",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 780,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.18,
                meltingPoint: 408,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Ba(OH)2\xB78H2O",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u516B\u6C34\u5408\u6C22\u6C27\u5316\u94A1",
                isSolvent: !1,
                molarVolume: 0,
                solubility: 6,
                ions: [{
                    formula: "Ba",
                    valence: 2,
                    count: 1
                }, {
                    formula: "OH",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 100,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.18,
                meltingPoint: 78,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "BaCl2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C2F\u5316\u94A1",
                molecularMass: 208,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 30,
                ions: [{
                    formula: "Ba",
                    valence: 2,
                    count: 1
                }, {
                    formula: "Cl",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1560,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.86,
                meltingPoint: 963,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Barium chloride",
                jpName: "\u5869\u5316\u30D0\u30EA\u30A6\u30E0",
                twName: "\u6C2F\u5316\u92C7",
                krName: "\uC5FC\uD654 \uBC14\uB968"
            }, {
                formula: "BaCO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u78B3\u9178\u94A1",
                molecularMass: 197,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 259e-11,
                ions: [{
                    formula: "Ba",
                    valence: 2,
                    count: 1
                }, {
                    formula: "CO3",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1360,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 4.29,
                meltingPoint: 811,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Barium carbonate",
                jpName: "\u70AD\u9178\u30D0\u30EA\u30A6\u30E0",
                twName: "\u78B3\u9178\u92C7",
                krName: "\uD0C4\uC0B0 \uBC14\uB968"
            }, {
                formula: "BaO",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C27\u5316\u94A1",
                molecularMass: 153,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 2e3,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 5.72,
                meltingPoint: 1923,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Barium oxide",
                jpName: "\u9178\u5316\u30D0\u30EA\u30A6\u30E0",
                twName: "\u6C27\u5316\u92C7",
                krName: "\uC0B0\uD654 \uBC14\uB968"
            }, {
                formula: "BaSO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u9178\u94A1",
                molecularMass: 233.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 11e-11,
                ions: [{
                    formula: "Ba",
                    valence: 2,
                    count: 1
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1600,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 4.5,
                meltingPoint: 1345,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 29560,
                enName: "Barium sulfate",
                jpName: "\u786B\u9178\u30D0\u30EA\u30A6\u30E0",
                twName: "\u786B\u9178\u92C7",
                krName: "\uD669\uC0B0 \uBC14\uB968"
            }, {
                formula: "Br2",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u6EB4",
                molecularMass: 159.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 3.4,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 3.18,
                boilingPoint: 58.8,
                liquidColor: 10103580,
                liquidAlpha: [.1, .1, .2, 1],
                densitySolid: 1,
                meltingPoint: -7.2,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Bromine",
                jpName: "\u81ED\u7D20",
                twName: "\u6EB4",
                krName: "\uBE0C\uB86C"
            }, {
                formula: "C",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6D3B\u6027\u70AD",
                molecularMass: 12,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                heatCapacityLiquid: 840,
                boilingPoint: 4827,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.2,
                meltingPoint: 3550,
                solidColor: 0,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800,
                enName: "Carbon",
                jpName: "\u70AD\u7D20",
                twName: "\u78B3",
                krName: "\uD0C4\uC18C"
            }, {
                formula: "C12H22O11",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u8517\u7CD6",
                molecularMass: 342,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 210,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.59,
                meltingPoint: 160,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Sucrose",
                jpName: "\u30B9\u30AF\u30ED\u30FC\u30B9",
                twName: "\u8517\u7CD6",
                krName: "\uC790\uB2F9"
            }, {
                formula: "C2H2",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u4E59\u7094",
                molecularMass: 26,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                densityGas: .0011596,
                heatCapacityGas: 45.5,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -84,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -273,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800,
                enName: "Acetylene",
                jpName: "\u30A2\u30BB\u30C1\u30EC\u30F3",
                twName: "\u4E59\u7094",
                krName: "\uC544\uC138\uD2F8\uB80C"
            }, {
                formula: "C2H5OH",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u4E59\u9187",
                molecularMass: 46,
                isSolvent: !0,
                molarVolume: 0,
                solubility: "Infinity",
                kab: 126e-18,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "C2H5O",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: .789,
                boilingPoint: 78.2,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: -114.3,
                solidColor: 16777215,
                solidAlpha: [0, 0, 0, 0]
            }, {
                formula: "C2H5ONa",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u4E59\u9187\u94A0",
                molecularMass: 68,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 260,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: .87,
                meltingPoint: 91,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "C3H7OH",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u4E19\u9187",
                molecularMass: 60,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: .786,
                boilingPoint: 82.4,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: -87.9,
                solidColor: 16777215,
                solidAlpha: [0, 0, 0, 0],
                undefined: 40800
            }, {
                formula: "C5H11O5COONa",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u8461\u8404\u7CD6\u9178\u94A0",
                molecularMass: 218,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 1
                }, {
                    formula: "C5H11O5COO",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1,
                meltingPoint: 206,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "C5H11O5COONH4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u8461\u8404\u7CD6\u9178\u94F5",
                molecularMass: 213,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                ions: [{
                    formula: "NH4",
                    valence: 1,
                    count: 1
                }, {
                    formula: "C5H11O5COO",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1,
                meltingPoint: 9999,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "C6H12O7",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u8461\u8404\u7CD6\u9178",
                molecularMass: 196,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 57.98,
                kab: 14e-5,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "C5H11O5COO",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 673.6,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.24,
                meltingPoint: 131,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "C6H3Br3O",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u4E09\u6EB4\u82EF\u915A",
                molecularMass: 330.7,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 244,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.55,
                meltingPoint: 90,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "C6H4(NO2)2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u95F4\u4E8C\u785D\u57FA\u82EF",
                molecularMass: 168,
                isSolvent: !1,
                molarVolume: 0,
                solubility: .5,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 301,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.57,
                meltingPoint: 89,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "C6H5Br",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u6EB4\u82EF",
                molecularMass: 156.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1.18,
                boilingPoint: 156.2,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1.6,
                meltingPoint: -30.7,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "C6H5COOH",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u82EF\u7532\u9178",
                molecularMass: 122,
                isSolvent: !1,
                molarVolume: 0,
                solubility: .35,
                kab: 646e-7,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "C6H5COO",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 249,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.08,
                meltingPoint: 122,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "C6H5NO2",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u785D\u57FA\u82EF",
                molecularMass: 123,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 210,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: 5.7,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "C6H5OH",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u82EF\u915A",
                molecularMass: 94,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 9.3,
                kab: 11e-11,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "C6H5O",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 182,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.07,
                meltingPoint: 43,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "C6H5ONa",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u82EF\u915A\u94A0",
                molecularMass: 116,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 1
                }, {
                    formula: "C6H5O",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.1,
                meltingPoint: 384,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "C6H5SO3H",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u82EF\u78FA\u9178",
                molecularMass: 158.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "C6H5SO3",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 137,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.57,
                meltingPoint: 44,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "C6H6",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u82EF",
                molecularMass: 78,
                isSolvent: !0,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: .8786,
                boilingPoint: 80,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: 5.5,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1]
            }, {
                formula: "C7H8",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u7532\u82EF",
                molecularMass: 92,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: .87,
                boilingPoint: 110.6,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: -94.9,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "C8H18",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u6C7D\u6CB9",
                molecularMass: 114,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: .74,
                boilingPoint: 200,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: 5.5,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "Ca",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u9499",
                molecularMass: 40.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1484,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.55,
                meltingPoint: 839,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Calcium",
                jpName: "\u30AB\u30EB\u30B7\u30A6\u30E0",
                twName: "\u9223",
                krName: "\uCE7C\uC298"
            }, {
                formula: "Ca(ClO)2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6B21\u6C2F\u9178\u9499",
                molecularMass: 143.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 21,
                ions: [{
                    formula: "Ca",
                    valence: 2,
                    count: 1
                }, {
                    formula: "ClO",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.35,
                meltingPoint: 100,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "CaC2O4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u8349\u9178\u9499",
                molecularMass: 128.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 234e-11,
                ions: [{
                    formula: "Ca",
                    valence: 2,
                    count: 1
                }, {
                    formula: "C2O4",
                    valence: -2,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [7, 7, 7, 7],
                densityLiquid: 7,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.2,
                meltingPoint: 9999,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1]
            }, {
                formula: "Ca(HCO3)2",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u78B3\u9178\u6C22\u9499",
                molecularMass: 162.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: .5,
                ions: [{
                    formula: "Ca",
                    valence: 2,
                    count: 1
                }, {
                    formula: "HCO3",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.83,
                meltingPoint: "100\uFF08\u5206\u89E3\uFF09",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "Ca(NO3)2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u785D\u9178\u9499",
                molecularMass: 164.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 129,
                ions: [{
                    formula: "Ca",
                    valence: 2,
                    count: 1
                }, {
                    formula: "NO3",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.5,
                meltingPoint: 561,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Ca(OH)2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C22\u6C27\u5316\u9499",
                molecularMass: 74.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: .17,
                ions: [{
                    formula: "Ca",
                    valence: 2,
                    count: 1
                }, {
                    formula: "OH",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.21,
                meltingPoint: 580,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "CaC2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u78B3\u5316\u9499",
                molecularMass: 64.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 2300,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.22,
                meltingPoint: 2160,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Calcium carbide",
                jpName: "\u70AD\u5316\u30AB\u30EB\u30B7\u30A6\u30E0",
                twName: "\u78B3\u5316\u9223",
                krName: "\uD0C4\uD654 \uCE7C\uC298"
            }, {
                formula: "CaCl2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C2F\u5316\u9499",
                molecularMass: 111.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 74.5,
                ions: [{
                    formula: "Ca",
                    valence: 2,
                    count: 1
                }, {
                    formula: "Cl",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1935,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.15,
                meltingPoint: 772,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Calcium chloride",
                jpName: "\u5869\u5316\u30AB\u30EB\u30B7\u30A6\u30E0",
                twName: "\u6C2F\u5316\u9223",
                krName: "\uC5FC\uD654 \uCE7C\uC298"
            }, {
                formula: "CaCO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u78B3\u9178\u9499",
                molecularMass: 100.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 496e-11,
                ions: [{
                    formula: "Ca",
                    valence: 2,
                    count: 1
                }, {
                    formula: "CO3",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.83,
                meltingPoint: "825\uFF08\u5206\u89E3\uFF09",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Calcium carbonate",
                jpName: "\u70AD\u9178\u30AB\u30EB\u30B7\u30A6\u30E0",
                twName: "\u78B3\u9178\u9223",
                krName: "\uD0C4\uC0B0 \uCE7C\uC298"
            }, {
                formula: "CaO",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C27\u5316\u9499",
                molecularMass: 56.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 2850,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.35,
                meltingPoint: 2572,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Calcium oxide",
                jpName: "\u9178\u5316\u30AB\u30EB\u30B7\u30A6\u30E0",
                twName: "\u6C27\u5316\u9223",
                krName: "\uC0B0\uD654 \uCE7C\uC298"
            }, {
                formula: "CaS",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u5316\u9499",
                molecularMass: 72.2,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.6,
                meltingPoint: 2400,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "CaSiO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u7845\u9178\u9499",
                molecularMass: 116.2,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.9,
                meltingPoint: 9999,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "CaSO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u4E9A\u786B\u9178\u9499",
                molecularMass: 120.2,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 68e-9,
                ions: [{
                    formula: "Ca",
                    valence: 2,
                    count: 1
                }, {
                    formula: "SO3",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.6,
                meltingPoint: 600,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Calcium sulfite",
                jpName: "\u4E9C\u786B\u9178\u30AB\u30EB\u30B7\u30A6\u30E0",
                twName: "\u4E9E\u786B\u9178\u9223",
                krName: "\uC544\uD669\uC0B0 \uCE7C\uC298"
            }, {
                formula: "CaSO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u9178\u9499",
                molecularMass: 136.2,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 71e-6,
                ions: [{
                    formula: "Ca",
                    valence: 2,
                    count: 1
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.96,
                meltingPoint: 1460,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Calcium sulfate",
                jpName: "\u786B\u9178\u30AB\u30EB\u30B7\u30A6\u30E0",
                twName: "\u786B\u9178\u9223",
                krName: "\uD669\uC0B0 \uCE7C\uC298"
            }, {
                formula: "CCl4",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u56DB\u6C2F\u5316\u78B3",
                molecularMass: 154,
                isSolvent: !0,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1.58,
                boilingPoint: 76.8,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: -22.9,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "CH2=CH2",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u4E59\u70EF",
                molecularMass: 28,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                densityGas: .0012488,
                heatCapacityGas: 47.24,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -103.9,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -169.4,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "CH2BrCH2Br",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u4E8C\u6EB4\u4E59\u70F7",
                molecularMass: 187.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 2.17,
                boilingPoint: 130,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: 10,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "CH2Cl2",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u4E8C\u6C2F\u7532\u70F7",
                molecularMass: 85,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1.33,
                boilingPoint: 40,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: -97,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "CH2O",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u7532\u919B",
                molecularMass: 30,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                densityGas: .001338,
                heatCapacityGas: 57.6,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -19.5,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -92,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "CH2OH(CHOH)3COCH2OH",
                valence: 0,
                classify: "\u6709\u673A\u7269",
                defaultPhaseType: "s",
                showName: "C6H12O6(lan_key)",
                chemicalName: "\u679C\u7CD6",
                molecularMass: 180,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 37.5,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.54,
                meltingPoint: 103,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "CH3CH2Br",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u6EB4\u4E59\u70F7",
                molecularMass: 108.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1.45,
                boilingPoint: 38.4,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: -119,
                solidColor: 16777215,
                solidAlpha: [0, 0, 0, 0],
                undefined: 40800
            }, {
                formula: "CH3CH2OCH2CH3",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u4E59\u919A",
                molecularMass: 74,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: .713,
                boilingPoint: 34.6,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: -116.3,
                solidColor: 16777215,
                solidAlpha: [0, 0, 0, 0],
                undefined: 40800
            }, {
                formula: "CH3CHO",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u4E59\u919B",
                molecularMass: 44,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: .783,
                boilingPoint: 20.8,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: -121,
                solidColor: 16777215,
                solidAlpha: [0, 0, 0, 0],
                undefined: 40800
            }, {
                formula: "CH3Cl",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u4E00\u6C2F\u7532\u70F7",
                molecularMass: 50.5,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                densityGas: .0022523,
                heatCapacityGas: 40.75,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -23.7,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -97,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "CH3COOC2H5",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u4E59\u9178\u4E59\u916F",
                molecularMass: 88,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 8.3,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: .897,
                heatCapacityLiquid: 800,
                boilingPoint: 77,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: -84,
                solidColor: 16777215,
                solidAlpha: [0, 0, 0, 0],
                undefined: 40800
            }, {
                formula: "CH3COOH",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u7A00\u918B\u9178",
                molecularMass: 60,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                kab: 175e-7,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "CH3COO",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1.05,
                boilingPoint: 118,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 2,
                meltingPoint: 16.6,
                solidColor: 16777215,
                solidAlpha: [0, 0, 0, 0],
                vaporizationHeat: 40800,
                enName: "Acetic acid",
                jpName: "\u9162\u9178",
                twName: "\u918B\u9178",
                krName: "\uC544\uC138\uD2B8\uC0B0"
            }, {
                formula: "CH3COOK",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u918B\u9178\u94BE",
                molecularMass: 98.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 269.4,
                ions: [{
                    formula: "K",
                    valence: 1,
                    count: 1
                }, {
                    formula: "CH3COO",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.57,
                meltingPoint: 292,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "CH3COONa",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u918B\u9178\u94A0",
                molecularMass: 82,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 33,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 1
                }, {
                    formula: "CH3COO",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.53,
                meltingPoint: 16,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "CH3COONH4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u918B\u9178\u94F5",
                molecularMass: 77,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 1480,
                ions: [{
                    formula: "NH4",
                    valence: 1,
                    count: 1
                }, {
                    formula: "CH3COO",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.17,
                meltingPoint: 112,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1]
            }, {
                formula: "CH3OH",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u7532\u9187",
                molecularMass: 32,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: .792,
                boilingPoint: 64.7,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: -97,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "CH4",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u7532\u70F7",
                molecularMass: 16,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                densityGas: 7136e-7,
                heatCapacityGas: 35.31,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -182.9,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -218.8,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "CHBr=CHBr",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u4E8C\u6EB4\u4E59\u70EF",
                molecularMass: 185.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 110,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: -273,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "CHBr2CHBr2",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u56DB\u6EB4\u4E59\u70F7",
                molecularMass: 345.6,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 243.5,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: -273,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "CHCl3",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u4E09\u6C2F\u7532\u70F7",
                molecularMass: 119.5,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1.484,
                boilingPoint: 62,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: -273,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "Cl2",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u6C2F\u6C14",
                molecularMass: 71,
                isSolvent: !1,
                molarVolume: 0,
                solubility: .44,
                densityGas: .0031666,
                heatCapacityGas: 33.91,
                gasColor: 13822481,
                gasAlpha: [0, 0, .045, 1],
                densityLiquid: 1,
                boilingPoint: -34,
                liquidColor: 13822481,
                liquidAlpha: [0, 0, .045, 1],
                densitySolid: 1,
                meltingPoint: -101.5,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Chlorine",
                jpName: "\u5869\u7D20",
                twName: "\u6C2F",
                krName: "\uC5FC\uC18C"
            }, {
                formula: "CO",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u4E00\u6C27\u5316\u78B3",
                molecularMass: 28,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                densityGas: .0012488,
                heatCapacityGas: 29.14,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -182.9,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -218.8,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Cobalt",
                jpName: "\u30B3\u30D0\u30EB\u30C8",
                twName: "\u9237",
                krName: "\uCF54\uBC1C\uD2B8"
            }, {
                formula: "CO2",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u4E8C\u6C27\u5316\u78B3",
                molecularMass: 44,
                isSolvent: !1,
                molarVolume: 0,
                solubility: .15,
                densityGas: .0019624,
                heatCapacityGas: 37.11,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -57,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -78,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Carbon dioxide",
                jpName: "\u4E8C\u9178\u5316\u70AD\u7D20",
                twName: "\u4E8C\u6C27\u5316\u78B3",
                krName: "\uC774\uC0B0\uD654\uD0C4\uC18C"
            }, {
                formula: "Cr2(SO4)3",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u786B\u9178\u94EC",
                molecularMass: 392.3,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 120,
                ions: [{
                    formula: "Cr",
                    valence: 3,
                    count: 2
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 3
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 330,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.84,
                meltingPoint: 173,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "Cu",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u94DC\u7C89",
                molecularMass: 63.5,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 8.02,
                boilingPoint: 2562,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 8.94,
                meltingPoint: 1085,
                solidColor: 12213312,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Copper",
                jpName: "\u9285",
                twName: "\u9285",
                krName: "\uAD6C\uB9AC"
            }, {
                formula: "Cu(NO3)2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u785D\u9178\u94DC",
                molecularMass: 187.5,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 125,
                ions: [{
                    formula: "Cu",
                    valence: 2,
                    count: 1
                }, {
                    formula: "NO3",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1.32,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.32,
                meltingPoint: "200\uFF08\u5206\u89E3\uFF09",
                solidColor: 225477,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Cu(OH)2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C22\u6C27\u5316\u94DC",
                molecularMass: 97.5,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 22e-21,
                ions: [{
                    formula: "Cu",
                    valence: 2,
                    count: 1
                }, {
                    formula: "OH",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.37,
                meltingPoint: "81\uFF08\u5206\u89E3\uFF09",
                solidColor: 225477,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Cu1",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u94DC\u4E1D",
                molecularMass: 63.5,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 8.02,
                boilingPoint: 2562,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 8.94,
                meltingPoint: 1085,
                solidColor: 12213312,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Cu2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u94DC\u7247",
                molecularMass: 127,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 8.02,
                boilingPoint: 2562,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 8.94,
                meltingPoint: 1085,
                solidColor: 12213312,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Cu2(OH)2CO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u78B1\u5F0F\u78B3\u9178\u94DC",
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.85,
                meltingPoint: 220,
                solidColor: 56870,
                solidAlpha: [1, 1, 1, 1]
            }, {
                formula: "Cu2O",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C27\u5316\u4E9A\u94DC",
                molecularMass: 143,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1800,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 6,
                meltingPoint: 1244,
                solidColor: 9704724,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "Cu2S",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u5316\u4E9A\u94DC",
                molecularMass: 159.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 65e-49,
                ions: [{
                    formula: "Cu",
                    valence: 1,
                    count: 2
                }, {
                    formula: "S",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 5.6,
                meltingPoint: 1100,
                solidColor: 0,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Copper(I) sulfide",
                jpName: "\u786B\u5316\u9285\uFF08I\uFF09",
                twName: "\u786B\u5316\u4E9E\u9285",
                krName: "\uD669\uD654 \uAD6C\uB9AC"
            }, {
                formula: "CuCl2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C2F\u5316\u94DC",
                molecularMass: 134.5,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 73,
                ions: [{
                    formula: "Cu",
                    valence: 2,
                    count: 1
                }, {
                    formula: "Cl",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 993,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.39,
                meltingPoint: 498,
                solidColor: 225477,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Copper chloride",
                jpName: "\u5869\u5316\u9285",
                twName: "\u6C2F\u5316\u9285",
                krName: "\uC5FC\uD654 \uAD6C\uB9AC"
            }, {
                formula: "CuCO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u78B3\u9178\u94DC",
                molecularMass: 123.5,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 25e-11,
                ions: [{
                    formula: "Cu",
                    valence: 2,
                    count: 1
                }, {
                    formula: "CO3",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.9,
                meltingPoint: "200\uFF08\u5206\u89E3\uFF09",
                solidColor: 225477,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Copper carbonate",
                jpName: "\u70AD\u9178\u9285",
                twName: "\u78B3\u9178\u9285",
                krName: "\uD0C4\uC0B0 \uAD6C\uB9AC "
            }, {
                formula: "CuI",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u7898\u5316\u4E9A\u94DC",
                molecularMass: 190.4,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 127e-14,
                ions: [{
                    formula: "Cu",
                    valence: 2,
                    count: 1
                }, {
                    formula: "I",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1336,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 5.63,
                meltingPoint: 605,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1]
            }, {
                formula: "CuO",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C27\u5316\u94DC",
                molecularMass: 79.5,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 6.32,
                meltingPoint: "1000\uFF08\u5206\u89E3\uFF09",
                solidColor: 0,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Copper oxide",
                jpName: "\u9178\u5316\u9285 ",
                twName: "\u6C27\u5316\u9285",
                krName: "\uC0B0\uD654 \uAD6C\uB9AC"
            }, {
                formula: "CuS",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u5316\u94DC",
                molecularMass: 95.6,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 127e-38,
                ions: [{
                    formula: "Cu",
                    valence: 2,
                    count: 1
                }, {
                    formula: "S",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2,
                meltingPoint: 220,
                solidColor: 0,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "CuSO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u9178\u94DC",
                molecularMass: 159.6,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 31.3,
                ions: [{
                    formula: "Cu",
                    valence: 2,
                    count: 1
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.6,
                meltingPoint: "650\uFF08\u5206\u89E3\uFF09",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Copper sulfate",
                jpName: "\u786B\u9178\u9285",
                twName: "\u786B\u9178\u9285",
                krName: "\uD669\uC0B0 \uAD6C\uB9AC"
            }, {
                formula: "CuSO4\xB75H2O",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u4E94\u6C34\u5408\u786B\u9178\u94DC",
                isSolvent: !1,
                molarVolume: 0,
                solubility: 49,
                ions: [{
                    formula: "Cu",
                    valence: 2,
                    count: 1
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.6,
                meltingPoint: "260\uFF08\u5206\u89E3\uFF09",
                solidColor: 225477,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "F2",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u6C1F\u6C14",
                molecularMass: 38,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                densityGas: .0016948,
                heatCapacityGas: 31.3,
                gasColor: 10735950,
                gasAlpha: [0, 0, .045, 1],
                densityLiquid: 1,
                boilingPoint: -188,
                liquidColor: 10735950,
                liquidAlpha: [0, 0, .045, 1],
                densitySolid: 1,
                meltingPoint: -252,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Fluorine",
                jpName: "\u30D5\u30C3\u7D20",
                twName: "\u6C1F",
                krName: "\uD50C\uB8E8\uC624\uB9B0"
            }, {
                formula: "Fe",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u94C1\u7C89",
                molecularMass: 55.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 2862,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 7.87,
                meltingPoint: 1538,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Iron",
                jpName: "\u9244",
                twName: "\u9435",
                krName: "\uCCA0"
            }, {
                formula: "Fe(NO3)2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u785D\u9178\u4E9A\u94C1",
                molecularMass: 179.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 71,
                ions: [{
                    formula: "Fe",
                    valence: 2,
                    count: 1
                }, {
                    formula: "NO3",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.32,
                meltingPoint: 60.5,
                solidColor: 6876578,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Fe(NO3)3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u785D\u9178\u94C1",
                molecularMass: 241.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 138,
                ions: [{
                    formula: "Fe",
                    valence: 3,
                    count: 1
                }, {
                    formula: "NO3",
                    valence: -1,
                    count: 3
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "125\uFF08\u5206\u89E3\uFF09",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.68,
                meltingPoint: 47.2,
                solidColor: 9603327,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Fe(OH)2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C22\u6C27\u5316\u4E9A\u94C1",
                molecularMass: 89.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 49e-18,
                ions: [{
                    formula: "Fe",
                    valence: 2,
                    count: 1
                }, {
                    formula: "OH",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.4,
                meltingPoint: 9999,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Fe(OH)3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C22\u6C27\u5316\u94C1",
                molecularMass: 106.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 264e-41,
                ions: [{
                    formula: "Fe",
                    valence: 3,
                    count: 1
                }, {
                    formula: "OH",
                    valence: -1,
                    count: 3
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.9,
                meltingPoint: "500\uFF08\u5206\u89E3\uFF09",
                solidColor: 7414812,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Fe(OH)3\uFF08\u80F6\u4F53\uFF09",
                valence: 0,
                defaultPhaseType: "l",
                showName: "Fe(OH)3\uFF08\u80F6\u4F53\uFF09",
                chemicalName: "\u6C22\u6C27\u5316\u94C1\u80F6\u4F53",
                molecularMass: 106.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 61,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 6557455,
                liquidAlpha: [1, .8, .1, 1],
                densitySolid: 3.9,
                meltingPoint: "500\uFF08\u5206\u89E3\uFF09",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Fe(SCN)3",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u786B\u6C30\u5316\u94C1",
                molecularMass: 230.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                kab: 251e-8,
                ions: [{
                    formula: "Fe",
                    valence: 3,
                    count: 1
                }, {
                    formula: "SCN",
                    valence: -1,
                    count: 3
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 14483456,
                liquidAlpha: [1, .9, 1, 1],
                densitySolid: 1.89,
                meltingPoint: 999,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "Fe1",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u94C1\u4E1D",
                molecularMass: 55.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 2862,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 7.87,
                meltingPoint: 1538,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Fe2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u94C1\u7247",
                molecularMass: 111.6,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 2862,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 7.87,
                meltingPoint: 1538,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Fe2(SO4)3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u9178\u94C1",
                molecularMass: 399.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 50,
                ions: [{
                    formula: "Fe",
                    valence: 3,
                    count: 2
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 3
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.1,
                meltingPoint: 480,
                solidColor: 16763904,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Fe2O3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C27\u5316\u94C1",
                molecularMass: 159.6,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 2862,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 5.24,
                meltingPoint: 1566,
                solidColor: 11477510,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Iron(III) oxide",
                jpName: "\u9178\u5316\u9244\uFF08III\uFF09",
                twName: "\u6C27\u5316\u9435",
                krName: "\uC0B0\uD654 \uCCA0"
            }, {
                formula: "Fe3O4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u56DB\u6C27\u5316\u4E09\u94C1",
                molecularMass: 231.4,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 5.17,
                meltingPoint: 1597,
                solidColor: 0,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Iron(II III) oxide",
                jpName: "\u56DB\u9178\u5316\u4E09\u9244",
                twName: "\u56DB\u6C27\u5316\u4E09\u9435",
                krName: "\uC0B0\uD654 \uCCA0"
            }, {
                formula: "FeCl2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C2F\u5316\u4E9A\u94C1",
                molecularMass: 126.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 64.5,
                ions: [{
                    formula: "Fe",
                    valence: 2,
                    count: 1
                }, {
                    formula: "Cl",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1023,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.16,
                meltingPoint: 677,
                solidColor: 8824931,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Iron(II) chloride",
                jpName: "\u5869\u5316\u9244\uFF08II\uFF09",
                twName: "\u6C2F\u5316\u4E9E\u9435",
                krName: "\uC5FC\uD654 \uCCA0II"
            }, {
                formula: "FeCl3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C2F\u5316\u94C1",
                molecularMass: 162.3,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 91.8,
                ions: [{
                    formula: "Fe",
                    valence: 3,
                    count: 1
                }, {
                    formula: "Cl",
                    valence: -1,
                    count: 3
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 315,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.9,
                meltingPoint: 306,
                solidColor: 8931077,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Iron(III) chloride",
                jpName: "\u5869\u5316\u9244\uFF08III\uFF09",
                twName: "\u6C2F\u5316\u9435",
                krName: "\uC5FC\uD654 \uCCA0III"
            }, {
                formula: "FeO",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C27\u5316\u4E9A\u94C1",
                molecularMass: 71.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 3414,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 5.74,
                meltingPoint: 1377,
                solidColor: 0,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Iron(II) oxide",
                jpName: "\u9178\u5316\u9244\uFF08II\uFF09",
                twName: "\u6C27\u5316\u4E9E\u9435",
                krName: "\uC0B0\uD654 \uCCA0 "
            }, {
                formula: "FeS",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u5316\u4E9A\u94C1",
                molecularMass: 87.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 159e-21,
                ions: [{
                    formula: "Fe",
                    valence: 2,
                    count: 1
                }, {
                    formula: "S",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 4.84,
                meltingPoint: 1194,
                solidColor: 0,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "FeSO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u9178\u4E9A\u94C1",
                molecularMass: 151.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 30,
                ions: [{
                    formula: "Fe",
                    valence: 2,
                    count: 1
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.9,
                meltingPoint: "500\uFF08\u5206\u89E3\uFF09",
                solidColor: 6810560,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Iron(II) sulfate",
                jpName: "\u786B\u9178\u9244\uFF08II\uFF09",
                twName: "\u786B\u9178\u4E9E\u9435",
                krName: "\uD669\uC0B0 \uCCA0II"
            }, {
                formula: "H2",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u6C22\u6C14",
                molecularMass: 2,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                densityGas: 892e-7,
                heatCapacityGas: 28.82,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -252.9,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -259.1,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Hydrogen",
                jpName: "\u6C34\u7D20",
                twName: "\u6C2B",
                krName: "\uC218\uC18C"
            }, {
                formula: "H2C2O4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u8349\u9178",
                molecularMass: 90,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 14.3,
                kab: .059,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 2
                }, {
                    formula: "HC2O4",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "150\uFF08\u5206\u89E3\uFF09",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.65,
                meltingPoint: 101,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "H2CO3",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u78B3\u9178",
                molecularMass: 62,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 6e-4,
                kab: 258e-6,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "HCO3",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                meltingPoint: "\u5206\u89E3",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1]
            }, {
                formula: "H2CrO4",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u94EC\u9178",
                molecularMass: 118,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 10,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 2
                }, {
                    formula: "CrO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1,
                meltingPoint: "100\uFF08\u5206\u89E3\uFF09",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "H2O",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u84B8\u998F\u6C34",
                molecularMass: 18,
                isSolvent: !0,
                molarVolume: 18,
                solubility: "Infinity",
                kab: 1e-14,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "OH",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 100,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: .92,
                meltingPoint: 0,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Water",
                jpName: "\u6C34",
                twName: "\u6C34",
                krName: "\uBB3C"
            }, {
                formula: "H2O2",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u8FC7\u6C27\u5316\u6C22",
                molecularMass: 34,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1.46,
                boilingPoint: 150.2,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1.71,
                meltingPoint: -.43,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Hydrogen peroxide",
                jpName: "\u904E\u9178\u5316\u6C34\u7D20",
                twName: "\u904E\u6C27\u5316\u6C2B",
                krName: "\uACFC\uC0B0\uD654\uC218\uC18C"
            }, {
                formula: "H2S",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u786B\u5316\u6C22",
                molecularMass: 34.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: .51,
                kab: 95e-9,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "HS",
                    valence: -1,
                    count: 1
                }],
                densityGas: .00152086,
                heatCapacityGas: 34.23,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -60,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -82,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Hydrogen sulfide",
                jpName: "\u786B\u5316\u6C34\u7D20",
                twName: "\u786B\u5316\u6C2B",
                krName: "\uD669\uD654\uC218\uC18C"
            }, {
                formula: "H2SiO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u7845\u9178",
                molecularMass: 78.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: .1,
                kab: 17e-11,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 2
                }, {
                    formula: "SiO3",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.2,
                meltingPoint: 1610,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "H2SO3",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u4E9A\u786B\u9178",
                molecularMass: 82.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                kab: .0154,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "HSO3",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: "\u5206\u89E3",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Sulfurous acid",
                jpName: "\u4E9C\u786B\u9178",
                twName: "\u4E9E\u786B\u9178",
                krName: "\uC544\uD669\uC0B0"
            }, {
                formula: "H2SO4",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u786B\u9178",
                molecularMass: 98.1,
                isSolvent: !1,
                molarVolume: 49.35,
                solubility: "Infinity",
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 2
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1.84,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: 10,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Sulfuric acid",
                jpName: "\u786B\u9178",
                twName: "\u786B\u9178",
                krName: "\uD669\uC0B0"
            }, {
                formula: "H3[Fe(C6H5O)6]",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u516D\u82EF\u915A\u5408\u94C1\u9178",
                molecularMass: 3,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 3
                }, {
                    formula: "[Fe(C6H5O)6]",
                    valence: -3,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1,
                meltingPoint: 9999,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "H3BO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u787C\u9178",
                molecularMass: 61.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 5.55,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 300,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.43,
                meltingPoint: 169,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "H3PO4",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u78F7\u9178",
                molecularMass: 98,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                kab: .0075,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "H2PO4",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1.87,
                boilingPoint: 60,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: 40,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1]
            }, {
                formula: "HBr",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u6EB4\u5316\u6C22",
                molecularMass: 80.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 193,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "Br",
                    valence: -1,
                    count: 1
                }],
                densityGas: .00360814,
                heatCapacityGas: 29.13,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -67,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -87,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "HCl",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u6C2F\u5316\u6C22",
                molecularMass: 36.5,
                isSolvent: !1,
                molarVolume: 21.21,
                solubility: 72,
                solutionHeat: -74840,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "Cl",
                    valence: -1,
                    count: 1
                }],
                densityGas: .0016279,
                heatCapacityGas: 29.12,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -85,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -112,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Hydrogen chloride",
                jpName: "\u5869\u5316\u6C34\u7D20",
                twName: "\u9E7D\u9178",
                krName: "\uC5FC\uD654\uC218\uC18C"
            }, {
                formula: "HClO",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u6B21\u6C2F\u9178",
                molecularMass: 52.5,
                isSolvent: !1,
                molarVolume: 0,
                solubility: .16,
                kab: 298e-10,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "ClO",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1.28,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: "\u5206\u89E3",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "HClO4",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u9AD8\u6C2F\u9178",
                molecularMass: 100.5,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                solutionHeat: -88760,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "ClO4",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1.76,
                boilingPoint: 130,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: "\u5206\u89E3",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1]
            }, {
                formula: "He",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u6C26\u6C14",
                molecularMass: 4,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                densityGas: 1784e-7,
                heatCapacityGas: 20.79,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -268,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -272,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Helium",
                jpName: "\u30D8\u30EA\u30A6\u30E0",
                twName: "\u6C26",
                krName: "\uD5EC\uB968"
            }, {
                formula: "HF",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u6C1F\u5316\u6C22",
                molecularMass: 20,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                solutionHeat: -61500,
                kab: 631e-6,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "F",
                    valence: -1,
                    count: 1
                }],
                densityGas: 892e-6,
                heatCapacityGas: 29.13,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: 19.5,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -83.6,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Hydrogen fluoride",
                jpName: "\u30D5\u30C3\u5316\u6C34\u7D20",
                twName: "\u6C1F\u5316\u6C2B",
                krName: "\uD50C\uB8E8\uC624\uB974\uD654 \uC218\uC18C"
            }, {
                formula: "Hg",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u6C34\u94F6",
                molecularMass: 201,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 13.534,
                boilingPoint: 356.7,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1,
                meltingPoint: -38.8,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Mercury",
                jpName: "\u30DE\u30FC\u30AD\u30E5\u30EA\u30FC",
                twName: "\u6C34\u9280",
                krName: "\uC218\uC740"
            }, {
                formula: "HgO",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C27\u5316\u6C5E",
                molecularMass: 217,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 11.4,
                meltingPoint: "500\uFF08\u5206\u89E3\uFF09",
                solidColor: 15608874,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Mercury oxide",
                jpName: "\u9178\u5316\u6C34\u9280",
                twName: "\u6C27\u5316\u6C5E",
                krName: "\uC0B0\uD654 \uC218\uC740"
            }, {
                formula: "HI",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u7898\u5316\u6C22",
                molecularMass: 127.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 234,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "I",
                    valence: -1,
                    count: 1
                }],
                densityGas: .00570434,
                heatCapacityGas: 29.16,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: 35.1,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -50.8,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "HNO3",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u785D\u9178",
                molecularMass: 63,
                isSolvent: !1,
                molarVolume: 38.26,
                solubility: "Infinity",
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "NO3",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1.09,
                boilingPoint: 83,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -42,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800,
                enName: "Nitric acid",
                jpName: "\u785D\u9178",
                twName: "\u785D\u9178",
                krName: "\uC9C8\uC0B0"
            }, {
                formula: "I2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u7898",
                molecularMass: 253.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: .033,
                heatCapacityGas: 7,
                gasColor: 16711127,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 184.3,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 4.93,
                meltingPoint: 113.7,
                solidColor: 591132,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 81600,
                enName: "Iodine",
                jpName: "\u30E8\u30A6\u7D20",
                twName: "\u7898",
                krName: "\uC694\uC624\uB4DC"
            }, {
                formula: "K",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u94BE",
                molecularMass: 39.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 759,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: .86,
                meltingPoint: 63.4,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Potassium",
                jpName: "\u30AB\u30EA\u30A6\u30E0",
                twName: "\u9240",
                krName: "\uCE7C\uB968"
            }, {
                formula: "K2CO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u78B3\u9178\u94BE",
                molecularMass: 138.2,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 110,
                ions: [{
                    formula: "K",
                    valence: 1,
                    count: 2
                }, {
                    formula: "CO3",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.43,
                meltingPoint: 891,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "K2Cr2O7",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u91CD\u94EC\u9178\u94BE",
                molecularMass: 294.2,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 16.1,
                ions: [{
                    formula: "K",
                    valence: 1,
                    count: 2
                }, {
                    formula: "Cr2O7",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 500,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.65,
                meltingPoint: 398,
                solidColor: 15469312,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "K2CrO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u94EC\u9178\u94BE",
                molecularMass: 194.2,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 69.9,
                ions: [{
                    formula: "K",
                    valence: 1,
                    count: 2
                }, {
                    formula: "CrO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.73,
                meltingPoint: 968,
                solidColor: 16050688,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "K2MnO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u9530\u9178\u94BE",
                molecularMass: 197.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 20,
                ions: [{
                    formula: "K",
                    valence: 1,
                    count: 2
                }, {
                    formula: "MnO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.5,
                meltingPoint: 190,
                solidColor: 1127214,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Potassium manganate",
                jpName: "\u30DE\u30F3\u30AC\u30F3\u9178\u30AB\u30EA\u30A6\u30E0",
                twName: "\u9333\u9178\u9240",
                krName: "\uB9DD\uAC04\uC0B0 \uCE7C\uB968"
            }, {
                formula: "K2O",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C27\u5316\u94BE",
                molecularMass: 94.2,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.35,
                meltingPoint: 350,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Potassium oxide",
                jpName: "\u9178\u5316\u30AB\u30EA\u30A6\u30E0",
                twName: "\u6C27\u5316\u9240",
                krName: "\uC0B0\uD654 \uCE7C\uB968"
            }, {
                formula: "K2O2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u8FC7\u6C27\u5316\u94BE",
                molecularMass: 110.2,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.5,
                meltingPoint: 490,
                solidColor: 10335118,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "K2S",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u5316\u94BE",
                molecularMass: 110.3,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 11.1,
                ions: [{
                    formula: "K",
                    valence: 1,
                    count: 2
                }, {
                    formula: "S",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.8,
                meltingPoint: 840,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "K2SO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u9178\u94BE",
                molecularMass: 174.3,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 11.1,
                ions: [{
                    formula: "K",
                    valence: 1,
                    count: 2
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1089,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.66,
                meltingPoint: 1069,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Potassium sulfate",
                jpName: "\u786B\u9178\u30AB\u30EA\u30A6\u30E0",
                twName: "\u786B\u9178\u9240",
                krName: "\uD669\uC0B0 \uCE7C\uB968"
            }, {
                formula: "K3[Fe(CN)6]",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u94C1\u6C30\u5316\u94BE",
                molecularMass: 117.3,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 46.4,
                ions: [{
                    formula: "K",
                    valence: 1,
                    count: 3
                }, {
                    formula: "[Fe(CN)6]",
                    valence: -3,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.85,
                meltingPoint: 300,
                solidColor: 12848643,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "KBr",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6EB4\u5316\u94BE",
                molecularMass: 119,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 65.3,
                solutionHeat: 19870,
                ions: [{
                    formula: "K",
                    valence: 1,
                    count: 1
                }, {
                    formula: "Br",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1435,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.98,
                meltingPoint: 734,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Potassium bromide",
                jpName: "\u81ED\u5316\u30AB\u30EA\u30A6\u30E0",
                twName: "\u6EB4\u5316\u9240",
                krName: "\uC5FC\uD654\uCE7C\uB968"
            }, {
                formula: "KCl",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C2F\u5316\u94BE",
                molecularMass: 74.6,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 34.2,
                solutionHeat: 17200,
                ions: [{
                    formula: "K",
                    valence: 1,
                    count: 1
                }, {
                    formula: "Cl",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1420,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.98,
                meltingPoint: 770,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Potassium chloride",
                jpName: "\u5869\u5316\u30AB\u30EA\u30A6\u30E0",
                twName: "\u6C2F\u5316\u9240",
                krName: "\uC5FC\uD654\uCE7C\uB968"
            }, {
                formula: "KClO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C2F\u9178\u94BE",
                molecularMass: 122.6,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 7.3,
                solutionHeat: 41380,
                ions: [{
                    formula: "K",
                    valence: 1,
                    count: 1
                }, {
                    formula: "ClO3",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.34,
                meltingPoint: "400\uFF08\u5206\u89E3\uFF09",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Potassium chlorate",
                jpName: "\u5869\u7D20\u9178\u30AB\u30EA\u30A6\u30E0",
                twName: "\u6C2F\u9178\u9240",
                krName: "\uC5FC\uC18C\uC0B0 \uCE7C\uB968"
            }, {
                formula: "KHCO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u78B3\u9178\u6C22\u94BE",
                molecularMass: 100.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 22.4,
                ions: [{
                    formula: "K",
                    valence: 1,
                    count: 1
                }, {
                    formula: "HCO3",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.17,
                meltingPoint: "292\uFF08\u5206\u89E3\uFF09",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "KI",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u7898\u5316\u94BE",
                molecularMass: 166,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 14.3,
                ions: [{
                    formula: "K",
                    valence: 1,
                    count: 1
                }, {
                    formula: "I",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1330,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.12,
                meltingPoint: 681,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Potassium iodide",
                jpName: "\u30E8\u30A6\u5316\u30AB\u30EA\u30A6\u30E0",
                twName: "\u7898\u5316\u9240",
                krName: "\uC694\uC624\uB4DC\uD654 \uCE7C\uB968"
            }, {
                formula: "KMnO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u9AD8\u9530\u9178\u94BE",
                molecularMass: 158,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 8,
                solutionHeat: 43560,
                ions: [{
                    formula: "K",
                    valence: 1,
                    count: 1
                }, {
                    formula: "MnO4",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.01,
                meltingPoint: "220\uFF08\u5206\u89E3\uFF09",
                solidColor: 591132,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Potassium permanganate",
                jpName: "\u904E\u30DE\u30F3\u30AC\u30F3\u9178\u30AB\u30EA\u30A6\u30E0",
                twName: "\u9AD8\u9333\u9178\u9240",
                krName: "\uACFC\uB9DD\uAC04\uC0B0 \uCE7C\uB968"
            }, {
                formula: "KNO2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u4E9A\u785D\u9178\u94BE",
                molecularMass: 85.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 306,
                ions: [{
                    formula: "K",
                    valence: 1,
                    count: 1
                }, {
                    formula: "NO2",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.92,
                meltingPoint: 387,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1]
            }, {
                formula: "KNO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u785D\u9178\u94BE",
                molecularMass: 101.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 31.6,
                solutionHeat: 34890,
                ions: [{
                    formula: "K",
                    valence: 1,
                    count: 1
                }, {
                    formula: "NO3",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.11,
                meltingPoint: "670\uFF08\u5206\u89E3\uFF09",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Potassium nitrate",
                jpName: "\u785D\u9178\u30AB\u30EA\u30A6\u30E0",
                twName: "\u785D\u9178\u9240",
                krName: "\uC9C8\uC0B0 \uCE7C\uB968"
            }, {
                formula: "KOH",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C22\u6C27\u5316\u94BE",
                molecularMass: 56.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 112,
                solutionHeat: -57610,
                ions: [{
                    formula: "K",
                    valence: 1,
                    count: 1
                }, {
                    formula: "OH",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1327,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.04,
                meltingPoint: 360,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Potassium hydroxide",
                jpName: "\u6C34\u9178\u5316\u30AB\u30EA\u30A6\u30E0",
                twName: "\u6C2B\u6C27\u5316\u9240",
                krName: "\uC218\uC0B0\uD654 \uCE7C\uB968"
            }, {
                formula: "KSCN",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u6C30\u5316\u94BE",
                molecularMass: 97.2,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 100,
                ions: [{
                    formula: "K",
                    valence: 1,
                    count: 1
                }, {
                    formula: "SCN",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 500,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.89,
                meltingPoint: 173,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "Li",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u9502",
                molecularMass: 6.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1342,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: .53,
                meltingPoint: 180.54,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Lithium",
                jpName: "\u30EA\u30C1\u30A6\u30E0",
                twName: "\u92F0",
                krName: "\uB9AC\uD2AC"
            }, {
                formula: "Li2O",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C27\u5316\u9502",
                molecularMass: 29.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 2600,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.01,
                meltingPoint: 1567,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Lithium oxide",
                jpName: "\u9178\u5316\u30EA\u30C1\u30A6\u30E0",
                twName: "\u6C27\u5316\u92F0",
                krName: "\uC0B0\uD654 \uB9AC\uD2AC"
            }, {
                formula: "LiOH",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C22\u6C27\u5316\u9502",
                molecularMass: 23.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 12.35,
                ions: [{
                    formula: "Li",
                    valence: 1,
                    count: 1
                }, {
                    formula: "OH",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 924,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.46,
                meltingPoint: 462,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Lithium hydroxide",
                jpName: "\u6C34\u9178\u5316\u30EA\u30C1\u30A6\u30E0",
                twName: "\u6C2B\u6C27\u5316\u92F0",
                krName: "\uC218\uC0B0\uD654 \uB9AC\uD2AC"
            }, {
                formula: "Mg",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u9541\u7C89",
                molecularMass: 24.3,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1091,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.74,
                meltingPoint: 650,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Magnesium",
                jpName: "\u30DE\u30B0\u30CD\u30B7\u30A6\u30E0",
                twName: "\u9382",
                krName: "\uB9C8\uADF8\uB124\uC298"
            }, {
                formula: "Mg(NO3)2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u785D\u9178\u9541",
                molecularMass: 148.3,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 69.5,
                ions: [{
                    formula: "Mg",
                    valence: 2,
                    count: 1
                }, {
                    formula: "NO3",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 330,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.3,
                meltingPoint: 129,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Mg(OH)2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C22\u6C27\u5316\u9541",
                molecularMass: 58.3,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 561e-14,
                ions: [{
                    formula: "Mg",
                    valence: 2,
                    count: 1
                }, {
                    formula: "OH",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.34,
                meltingPoint: "350\uFF08\u5206\u89E3\uFF09",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Mg3N2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C2E\u5316\u9541",
                molecularMass: 100.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.71,
                meltingPoint: 800,
                solidColor: 14483328,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Magnesium nitride",
                jpName: "\u7A92\u5316\u30DE\u30B0\u30CD\u30B7\u30A6\u30E0",
                twName: "\u6C2E\u5316\u9382",
                krName: "\uC9C8\uD654 \uB9C8\uADF8\uB124\uC298"
            }, {
                formula: "MgCl2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C2F\u5316\u9541",
                molecularMass: 95.3,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 54.6,
                ions: [{
                    formula: "Mg",
                    valence: 2,
                    count: 1
                }, {
                    formula: "Cl",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1412,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.32,
                meltingPoint: 714,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Magnesium chloride",
                jpName: "\u5869\u5316\u30DE\u30B0\u30CD\u30B7\u30A6\u30E0",
                twName: "\u6C2F\u5316\u9382",
                krName: "\uC5FC\uD654 \uB9C8\uADF8\uB124\uC298"
            }, {
                formula: "MgCO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u78B3\u9178\u9541",
                molecularMass: 84.3,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 682e-8,
                ions: [{
                    formula: "Mg",
                    valence: 2,
                    count: 1
                }, {
                    formula: "CO3",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.16,
                meltingPoint: "560\uFF08\u5206\u89E3\uFF09",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: 0,
                jpName: 0,
                twName: 0,
                krName: 0
            }, {
                formula: "MgO",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C27\u5316\u9541",
                molecularMass: 40.3,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 3600,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.58,
                meltingPoint: 2850,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Magnesium oxide",
                jpName: "\u9178\u5316\u30DE\u30B0\u30CD\u30B7\u30A6\u30E0",
                twName: "\u6C27\u5316\u9382",
                krName: "\uC0B0\uD654 \uB9C8\uADF8\uB124\uC298"
            }, {
                formula: "MgSO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u9178\u9541",
                molecularMass: 120.4,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 33.7,
                ions: [{
                    formula: "Mg",
                    valence: 2,
                    count: 1
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.66,
                meltingPoint: 1124,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Magnesium sulfate",
                jpName: "\u786B\u9178\u30DE\u30B0\u30CD\u30B7\u30A6\u30E0",
                twName: "\u786B\u9178\u9382",
                krName: "\uD669\uC0B0 \uB9C8\uADF8\uB124\uC298"
            }, {
                formula: "Mn",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u9530",
                molecularMass: 54.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1962,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 7.44,
                meltingPoint: 1247,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800,
                enName: "Manganese",
                jpName: "\u30DE\u30F3\u30AC\u30F3",
                twName: "\u9333",
                krName: "\uB9DD\uAC04"
            }, {
                formula: "Mn(OH)2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C22\u6C27\u5316\u9530",
                molecularMass: 88.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 19e-14,
                ions: [{
                    formula: "Mn",
                    valence: 2,
                    count: 1
                }, {
                    formula: "OH",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.26,
                meltingPoint: 140,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "MnCl2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C2F\u5316\u9530",
                molecularMass: 125.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 73.9,
                ions: [{
                    formula: "Mn",
                    valence: 2,
                    count: 1
                }, {
                    formula: "Cl",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1225,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.98,
                meltingPoint: 654,
                solidColor: 16573179,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Manganese(II) chloride",
                jpName: "\u5869\u5316\u30DE\u30F3\u30AC\u30F3\uFF08II\uFF09",
                twName: "\u6C2F\u5316\u9333",
                krName: "\uC5FC\uD654 \uB9DD\uAC04"
            }, {
                formula: "MnO2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u4E8C\u6C27\u5316\u9530",
                molecularMass: 86.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 5.03,
                meltingPoint: 535,
                solidColor: 0,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Manganese dioxide",
                jpName: "\u4E8C\u9178\u5316\u30DE\u30F3\u30AC\u30F3",
                twName: "\u4E8C\u6C27\u5316\u9333",
                krName: "\uC774\uC0B0\uD654 \uB9DD\uAC04"
            }, {
                formula: "MnSO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u9178\u9530",
                molecularMass: 151,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 10,
                ions: [{
                    formula: "Mn",
                    valence: 2,
                    count: 1
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.25,
                meltingPoint: 700,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "N2",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u6C2E\u6C14",
                molecularMass: 28,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                densityGas: .0012488,
                heatCapacityGas: 29.12,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -195.8,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -210,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Nitrogen",
                jpName: "\u7A92\u7D20",
                twName: "\u6C2E",
                krName: "\uC9C8\uC18C"
            }, {
                formula: "N2O",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u4E00\u6C27\u5316\u4E8C\u6C2E",
                molecularMass: 44,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 12.8,
                densityGas: .0019624,
                heatCapacityGas: 38.45,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -88,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -90.9,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Nitrous oxide",
                jpName: "\u4E9C\u9178\u5316\u7A92\u7D20",
                twName: "\u7B11\u6C23",
                krName: "\uC544\uC0B0\uD654 \uC9C8\uC18C"
            }, {
                formula: "N2O4",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u56DB\u6C27\u5316\u4E8C\u6C2E",
                molecularMass: 92,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                densityGas: .0041032,
                heatCapacityGas: 77.28,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: 21,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -11.2,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "Na",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u94A0",
                molecularMass: 23,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                heatCapacityLiquid: 1300,
                boilingPoint: 883,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: .97,
                meltingPoint: 97.7,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Sodium",
                jpName: "\u30CA\u30C8\u30EA\u30A6\u30E0",
                twName: "\u9209",
                krName: "\uB098\uD2B8\uB968"
            }, {
                formula: "Na2CO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u78B3\u9178\u94A0",
                molecularMass: 106,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 21.5,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 2
                }, {
                    formula: "CO3",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1633,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.54,
                meltingPoint: 851,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Sodium carbonate",
                jpName: "\u70AD\u9178\u30CA\u30C8\u30EA\u30A6\u30E0",
                twName: "\u7D14\u9E7C",
                krName: "\uD0C4\uC0B0\uB098\uD2B8\uB968"
            }, {
                formula: "Na2Cr2O7",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u91CD\u94EC\u9178\u94A0",
                molecularMass: 262,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 238,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 2
                }, {
                    formula: "Cr2O7",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.52,
                meltingPoint: 356.7,
                solidColor: 14709797,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "Na2CrO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u94EC\u9178\u94A0",
                molecularMass: 162,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 84,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 2
                }, {
                    formula: "CrO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.72,
                meltingPoint: 792,
                solidColor: 16710195,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "Na2HPO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u78F7\u9178\u4E00\u6C22\u94A0",
                molecularMass: 142,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 7.7,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 2
                }, {
                    formula: "HPO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.52,
                meltingPoint: 250,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1]
            }, {
                formula: "Na2O",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C27\u5316\u94A0",
                molecularMass: 62,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1950,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.27,
                meltingPoint: 1132,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Sodium oxide",
                jpName: "\u9178\u5316\u30CA\u30C8\u30EA\u30A6\u30E0",
                twName: "\u6C27\u5316\u9209",
                krName: "\uC0B0\uD654 \uB098\uD2B8\uB968"
            }, {
                formula: "Na2O2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u8FC7\u6C27\u5316\u94A0",
                molecularMass: 78,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 657,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.81,
                meltingPoint: 460,
                solidColor: 16774306,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Sodium peroxide",
                jpName: "\u904E\u9178\u5316\u30CA\u30C8\u30EA\u30A6\u30E0",
                twName: "\u904E\u6C27\u5316\u9209",
                krName: "\uACFC\uC0B0\uD654 \uB098\uD2B8\uB968"
            }, {
                formula: "Na2S",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u5316\u94A0",
                molecularMass: 78.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 18.6,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 2
                }, {
                    formula: "S",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.86,
                meltingPoint: 950,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "Na2S2O3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u4EE3\u786B\u9178\u94A0",
                molecularMass: 158.2,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 73,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 2
                }, {
                    formula: "S2O3",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.67,
                meltingPoint: 48.3,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "Na2SiO3",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u7845\u9178\u94A0\u6EB6\u6DB2",
                molecularMass: 122.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 22.2,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 2
                }, {
                    formula: "SiO3",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 2.33,
                meltingPoint: 1410,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Na2SO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u4E9A\u786B\u9178\u94A0",
                molecularMass: 126.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 70.1,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 2
                }, {
                    formula: "SO3",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 100,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.66,
                meltingPoint: 48,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Na2SO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u9178\u94A0",
                molecularMass: 142.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 30,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 2
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1429,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.66,
                meltingPoint: 884,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Sodium sulfate",
                jpName: "\u786B\u9178\u30CA\u30C8\u30EA\u30A6\u30E0",
                twName: "\u786B\u9178\u9209",
                krName: "\uD669\uC0B0 \uB098\uD2B8\uB968"
            }, {
                formula: "Na3PO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u78F7\u9178\u94A0",
                molecularMass: 164,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 28.3,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 3
                }, {
                    formula: "PO4",
                    valence: -3,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.64,
                meltingPoint: 9999,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1]
            }, {
                formula: "NaAlO2",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u504F\u94DD\u9178\u94A0",
                molecularMass: 82,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 87,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 1
                }, {
                    formula: "AlO2",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1.5,
                meltingPoint: "\u5206\u89E3",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Sodium aluminate",
                jpName: "\u30A2\u30EB\u30DF\u30F3\u9178\u30CA\u30C8\u30EA\u30A6\u30E0",
                twName: "\u92C1\u9178\u9209",
                krName: "\uC54C\uB8E8 \uBBFC\uC0B0 \uB098\uD2B8\uB968"
            }, {
                formula: "Na[B(OH)4]",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u56DB\u7F9F\u5408\u787C\u9178\u94A0",
                molecularMass: 101.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 109,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 1
                }, {
                    formula: "[B(OH)4]",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1.03,
                meltingPoint: "\u5206\u89E3",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "NaBr",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6EB4\u5316\u94A0",
                molecularMass: 102.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 121,
                solutionHeat: -600,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 1
                }, {
                    formula: "Br",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1390,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.2,
                meltingPoint: 747,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "NaBrO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6EB4\u9178\u94A0",
                molecularMass: 150.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 36.4,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 1
                }, {
                    formula: "BrO",
                    valence: -1,
                    count: 3
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1390,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.34,
                meltingPoint: 381,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "NaCl",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C2F\u5316\u94A0",
                molecularMass: 58.5,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 35.9,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 1
                }, {
                    formula: "Cl",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1413,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.16,
                meltingPoint: 801,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Sodium chloride",
                jpName: "\u5869\u5316\u30CA\u30C8\u30EA\u30A6\u30E0",
                twName: "\u6C2F\u5316\u9209",
                krName: "\uC5FC\uD654\uB098\uD2B8\uB968"
            }, {
                formula: "NaClO",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u6B21\u6C2F\u9178\u94A0",
                molecularMass: 74.5,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "Infinity",
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 1
                }, {
                    formula: "ClO",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -6,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "NaH2PO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u78F7\u9178\u4E8C\u6C22\u94A0",
                molecularMass: 120,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 86.9,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 1
                }, {
                    formula: "H2PO4",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.92,
                meltingPoint: 100,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1]
            }, {
                formula: "NaHCO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u78B3\u9178\u6C22\u94A0",
                molecularMass: 84,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 9.6,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 1
                }, {
                    formula: "HCO3",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.2,
                meltingPoint: "270\uFF08\u5206\u89E3\uFF09",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Sodium bicarbonate",
                jpName: "\u91CD\u70AD\u9178\u30CA\u30C8\u30EA\u30A6\u30E0",
                twName: "\u78B3\u9178\u6C2B\u9209",
                krName: "\uD0C4\uC0B0\uC218\uC18C \uB098\uD2B8\uB968"
            }, {
                formula: "NaHS",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u786B\u6C22\u5316\u94A0",
                molecularMass: 56.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 620,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 1
                }, {
                    formula: "HS",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: "\u5206\u89E3",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1]
            }, {
                formula: "NaHSO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u4E9A\u786B\u9178\u6C22\u94A0",
                molecularMass: 104.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 42,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 1
                }, {
                    formula: "HSO3",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "\u5206\u89E3",
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.48,
                meltingPoint: "100\uFF08\u5206\u89E3\uFF09",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "NaHSO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u9178\u6C22\u94A0",
                molecularMass: 120.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 9.6,
                solutionHeat: -7530,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "Na",
                    valence: 1,
                    count: 1
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 315,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.74,
                meltingPoint: 58.5,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Sodium bisulfate",
                jpName: "\u91CD\u786B\u9178\u30CA\u30C8\u30EA\u30A6\u30E0",
                twName: "\u786B\u9178\u6C2B\u9209",
                krName: "\uD669\uC0B0\uC218\uC18C \uB098\uD2B8\uB968"
            }, {
                formula: "NaI",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u7898\u5316\u94A0",
                molecularMass: 149.9,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 184,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 1
                }, {
                    formula: "I",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1304,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.67,
                meltingPoint: 660,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "NaNO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u785D\u9178\u94A0",
                molecularMass: 85,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 87.6,
                solutionHeat: 20500,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 1
                }, {
                    formula: "NO3",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 380,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.25,
                meltingPoint: 308,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Sodium nitrate",
                jpName: "\u785D\u9178\u30CA\u30C8\u30EA\u30A6\u30E0",
                twName: "\u785D\u9178\u9209",
                krName: "\uC9C8\uC0B0 \uB098\uD2B8\uB968"
            }, {
                formula: "NaOH",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C22\u6C27\u5316\u94A0",
                molecularMass: 40,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 109,
                solutionHeat: -44510,
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 1
                }, {
                    formula: "OH",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 1388,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.03,
                meltingPoint: 318,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Sodium hydroxide",
                jpName: "\u6C34\u9178\u5316\u30CA\u30C8\u30EA\u30A6\u30E0",
                twName: "\u6C2B\u6C27\u5316\u9209",
                krName: "\uC218\uC0B0\uD654 \uB098\uD2B8\uB968"
            }, {
                formula: "Ne",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u6C16\u6C14",
                molecularMass: 20.2,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                densityGas: 90092e-8,
                heatCapacityGas: 20.79,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -246,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -248.6,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Neon",
                jpName: "\u30CD\u30AA\u30F3",
                twName: "\u6C16",
                krName: "\uB124\uC628"
            }, {
                formula: "NH3",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u6C28\u6C14",
                molecularMass: 17,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 10.6,
                densityGas: 7582e-7,
                heatCapacityGas: 35.06,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -33.3,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -77.73,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Ammonia",
                jpName: "\u30A2\u30F3\u30E2\u30CB\u30A2",
                twName: "\u6C28",
                krName: "\uC554\uBAA8\uB2C8\uC544"
            }, {
                formula: "NH3\xB7H2O",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u4E00\u6C34\u5408\u6C28",
                molecularMass: 35,
                isSolvent: !1,
                molarVolume: 23.69,
                solubility: 87.5,
                kab: 18e-6,
                ions: [{
                    formula: "NH4",
                    valence: 1,
                    count: 1
                }, {
                    formula: "OH",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: "70\uFF08\u5206\u89E3\uFF09",
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: "\u5206\u89E3",
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800,
                enName: "Ammonium hydroxide",
                jpName: "\u6C34\u9178\u5316\u30A2\u30F3\u30E2\u30CB\u30A6\u30E0",
                twName: "\u4E00\u6C34\u5408\u6C28",
                krName: "\uC218\uC0B0\uD654 \uC554\uBAA8\uB284"
            }, {
                formula: "NH4Cl",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C2F\u5316\u94F5",
                molecularMass: 53.5,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 50,
                solutionHeat: 14780,
                ions: [{
                    formula: "NH4",
                    valence: 1,
                    count: 1
                }, {
                    formula: "Cl",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 520,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.53,
                meltingPoint: 338,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Ammonium chloride",
                jpName: "\u5869\u5316\u30A2\u30F3\u30E2\u30CB\u30A6\u30E0",
                twName: "\u6C2F\u5316\u92A8",
                krName: "\uC5FC\uD654 \uC554\uBAA8\uB284"
            }, {
                formula: "NH4HCO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u78B3\u9178\u6C22\u94F5",
                molecularMass: 79,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 21.7,
                ions: [{
                    formula: "NH4",
                    valence: 1,
                    count: 1
                }, {
                    formula: "HCO3",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 169.8,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.58,
                meltingPoint: 105,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "NH4NO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u785D\u9178\u94F5",
                molecularMass: 80,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 192,
                solutionHeat: 25690,
                ions: [{
                    formula: "NH4",
                    valence: 1,
                    count: 1
                }, {
                    formula: "NO3",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 210,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.72,
                meltingPoint: 169.6,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Ammonium nitrate",
                jpName: "\u785D\u9178\u30A2\u30F3\u30E2\u30CB\u30A6\u30E0",
                twName: "\u785D\u9178\u92A8",
                krName: "\uC9C8\uC0B0 \uC554\uBAA8\uB284"
            }, {
                formula: "NO",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u4E00\u6C27\u5316\u6C2E",
                molecularMass: 30,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                densityGas: .001338,
                heatCapacityGas: 29.84,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -152,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -164,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Nitric oxide",
                jpName: "\u9178\u5316\u7A92\u7D20",
                twName: "\u4E00\u6C27\u5316\u6C2E",
                krName: "\uC77C\uC0B0\uD654 \uC9C8\uC18C"
            }, {
                formula: "NO2",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u4E8C\u6C27\u5316\u6C2E",
                molecularMass: 46,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                densityGas: .0020516,
                heatCapacityGas: 37.2,
                gasColor: 10103580,
                gasAlpha: [0, 0, .045, 1],
                densityLiquid: 1,
                boilingPoint: 21,
                liquidColor: 10103580,
                liquidAlpha: [0, 0, .045, 1],
                densitySolid: 1,
                meltingPoint: -11.2,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Nitrogen dioxide",
                jpName: "\u4E8C\u9178\u5316\u7A92\u7D20",
                twName: "\u4E8C\u6C27\u5316\u6C2E",
                krName: "\uC774\uC0B0\uD654\uC9C8\uC18C"
            }, {
                formula: "O2",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u6C27\u6C14",
                molecularMass: 32,
                isSolvent: !1,
                molarVolume: 0,
                solubility: .0043,
                densityGas: .0014272,
                heatCapacityGas: 29.36,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -182.9,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -218.8,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Oxygen",
                jpName: "\u9178\u7D20",
                twName: "\u6C27",
                krName: "\uC0B0\uC18C"
            }, {
                formula: "OHC(CHOH)4CH2OH",
                valence: 0,
                classify: "\u6709\u673A\u7269",
                defaultPhaseType: "s",
                showName: "C6H12O6(lan_key)",
                chemicalName: "\u8461\u8404\u7CD6",
                molecularMass: 180,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 83,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.54,
                meltingPoint: 148,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "P",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u7EA2\u78F7",
                molecularMass: 31,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1.8,
                heatCapacityLiquid: 2e3,
                boilingPoint: 280,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.82,
                meltingPoint: 44.2,
                solidColor: 5312792,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Phosphorus",
                jpName: "\u30EA\u30F3",
                twName: "\u78F7",
                krName: "\uC778"
            }, {
                formula: "P2O5",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u4E94\u6C27\u5316\u4E8C\u78F7",
                molecularMass: 142,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 2.2,
                boilingPoint: 360,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.39,
                meltingPoint: 340,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Phosphorus pentoxide",
                jpName: "\u4E94\u9178\u5316\u30EA\u30F3",
                twName: "\u4E94\u6C27\u5316\u4E8C\u78F7",
                krName: "\uC624\uC0B0\uD654\uC778"
            }, {
                formula: "P4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u767D\u78F7",
                molecularMass: 124,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1.8,
                heatCapacityLiquid: 1e3,
                boilingPoint: 280,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.82,
                meltingPoint: 40,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "Pb",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u94C5",
                molecularMass: 207,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 10.66,
                boilingPoint: 1749,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 11.34,
                meltingPoint: 327.46,
                solidColor: 14672096,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Lead",
                jpName: "\u925B",
                twName: "\u925B",
                krName: "\uB0A9"
            }, {
                formula: "Pb(NO3)2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u785D\u9178\u94C5",
                molecularMass: 331,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 56.5,
                ions: [{
                    formula: "Pb",
                    valence: 2,
                    count: 1
                }, {
                    formula: "NO3",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1,
                meltingPoint: 470,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800
            }, {
                formula: "PbCl2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C2F\u5316\u94C5",
                molecularMass: 278,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 16e-6,
                ions: [{
                    formula: "Pb",
                    valence: 2,
                    count: 1
                }, {
                    formula: "Cl",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 5.45,
                boilingPoint: 950,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 5.85,
                meltingPoint: 501,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Lead chloride",
                jpName: "\u5869\u5316\u925B",
                twName: "\u6C2F\u5316\u925B",
                krName: "\uC5FC\uD654 \uB0A9"
            }, {
                formula: "PbI2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u7898\u5316\u94C5",
                molecularMass: 460.8,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 71e-10,
                ions: [{
                    formula: "Pb",
                    valence: 2,
                    count: 1
                }, {
                    formula: "I",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 954,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 6.16,
                meltingPoint: 402,
                solidColor: 16776960,
                solidAlpha: [1, 1, 1, 1],
                undefined: 40800,
                enName: "Lead iodide",
                jpName: "\u30E8\u30A6\u5316\u925B",
                twName: "\u7898\u5316\u925B",
                krName: "\uC694\uC624\uB4DC\uD654 \uB0A9"
            }, {
                formula: "PbO",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C27\u5316\u94C5",
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 888,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 9.53,
                meltingPoint: 1535,
                solidColor: 14866968,
                solidAlpha: [1, 1, 1, 1]
            }, {
                formula: "PbO2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u4E8C\u6C27\u5316\u94C5",
                molecularMass: 239,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 9.38,
                meltingPoint: 290,
                solidColor: 3683378,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Lead dioxide",
                jpName: "\u4E8C\u9178\u5316\u925B",
                twName: "\u4E8C\u6C27\u5316\u925B",
                krName: "\uC774\uC0B0\uD654 \uB0A9"
            }, {
                formula: "PbSO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u9178\u94C5",
                molecularMass: 303.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 18e-9,
                ions: [{
                    formula: "Pb",
                    valence: 2,
                    count: 1
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 6.29,
                meltingPoint: 1087,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Lead sulfate",
                jpName: "\u786B\u9178\u925B",
                twName: "\u786B\u9178\u925B",
                krName: "\uD669\uC0B0 \uB0A9"
            }, {
                formula: "Pt",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u94C2",
                molecularMass: 195,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 19.77,
                boilingPoint: 3825,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 21.45,
                meltingPoint: 1768,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Platinum",
                jpName: "\u767D\u91D1",
                twName: "\u9251\u91D1",
                krName: "\uBC31\uAE08"
            }, {
                formula: "S",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B",
                molecularMass: 32.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1.819,
                boilingPoint: 444.6,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1.96,
                meltingPoint: 115.2,
                solidColor: 16774306,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Sulfur",
                jpName: "\u786B\u9EC4",
                twName: "\u786B",
                krName: "\uD669"
            }, {
                formula: "Si",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u7845",
                molecularMass: 28.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 2355,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.33,
                meltingPoint: 1410,
                solidColor: 3683378,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Silicon",
                jpName: "\u30B1\u30A4\u7D20",
                twName: "\u77FD",
                krName: "\uADDC\uC18C"
            }, {
                formula: "SiO2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u4E8C\u6C27\u5316\u7845",
                molecularMass: 60.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 2900,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 1,
                meltingPoint: 1414,
                solidColor: 16777215,
                solidAlpha: [0, 0, 0, 0],
                vaporizationHeat: 40800
            }, {
                formula: "SO2",
                valence: 0,
                defaultPhaseType: "g",
                chemicalName: "\u4E8C\u6C27\u5316\u786B",
                molecularMass: 64.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 10,
                densityGas: .00285886,
                heatCapacityGas: 39.87,
                gasColor: 16777215,
                gasAlpha: [0, 0, 0, 0],
                densityLiquid: 1,
                boilingPoint: -10,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -75,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Sulfur dioxide",
                jpName: "\u4E8C\u9178\u5316\u786B\u9EC4",
                twName: "\u4E8C\u6C27\u5316\u786B",
                krName: "\uC774\uC0B0\uD654\uD669"
            }, {
                formula: "SO3",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u4E09\u6C27\u5316\u786B",
                molecularMass: 80.1,
                isSolvent: !1,
                molarVolume: 0,
                solubility: "\u53CD\u5E94",
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1.92,
                boilingPoint: 45,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, .2],
                densitySolid: 1,
                meltingPoint: 16.9,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Sulfur trioxide",
                jpName: "\u4E09\u9178\u5316\u786B\u9EC4",
                twName: "\u4E09\u6C27\u5316\u786B",
                krName: "\uC0BC\uC0B0\uD654\uD669"
            }, {
                formula: "Zn",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u950C",
                molecularMass: 65.4,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 907,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 7.14,
                meltingPoint: 419,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Zinc",
                jpName: "\u4E9C\u925B",
                twName: "\u92C5",
                krName: "\uC544\uC5F0"
            }, {
                formula: "Zn(NO3)2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u785D\u9178\u950C",
                molecularMass: 189.4,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 118.3,
                ions: [{
                    formula: "Zn",
                    valence: 2,
                    count: 1
                }, {
                    formula: "NO3",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 2.065,
                boilingPoint: 125,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.06,
                meltingPoint: 110,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800
            }, {
                formula: "ZnCl2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C2F\u5316\u950C",
                molecularMass: 136.4,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 432,
                ions: [{
                    formula: "Zn",
                    valence: 2,
                    count: 1
                }, {
                    formula: "Cl",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 756,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 2.9,
                meltingPoint: 292,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Zinc chloride",
                jpName: "\u5869\u5316\u4E9C\u925B",
                twName: "\u6C2F\u5316\u92C5",
                krName: "\uC5FC\uD654 \uC544\uC5F0"
            }, {
                formula: "ZnS",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u5316\u950C",
                molecularMass: 97.5,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 11e-22,
                ions: [{
                    formula: "Zn",
                    valence: 2,
                    count: 1
                }, {
                    formula: "S",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 4.09,
                meltingPoint: 1085,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Zinc sulfide",
                jpName: "\u786B\u5316\u4E9C\u925B",
                twName: "\u786B\u5316\u92C5",
                krName: "\uD669\uD654 \uC544\uC5F0"
            }, {
                formula: "ZnSO4",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786B\u9178\u950C",
                molecularMass: 161.5,
                isSolvent: !1,
                molarVolume: 0,
                solubility: 53.8,
                ions: [{
                    formula: "Zn",
                    valence: 2,
                    count: 1
                }, {
                    formula: "SO4",
                    valence: -2,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [1, 1, 1, 1],
                densityLiquid: 1,
                boilingPoint: 280,
                liquidColor: 16777215,
                liquidAlpha: [1, 1, 1, 1],
                densitySolid: 3.54,
                meltingPoint: 100,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1],
                vaporizationHeat: 40800,
                enName: "Zinc sulfate",
                jpName: "\u786B\u9178\u4E9C\u925B",
                twName: "\u786B\u9178\u92C5",
                krName: "\uD669\uC0B0 \uC544\uC5F0"
            }, {
                formula: "Zn(OH)2",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6C22\u6C27\u5316\u950C",
                isSolvent: !1,
                molarVolume: 0,
                solubility: 0,
                ksp: 686e-19,
                ions: [{
                    formula: "Zn",
                    valence: 2,
                    count: 1
                }, {
                    formula: "OH",
                    valence: -1,
                    count: 2
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                gasAlpha: [2, 2, 2, 2],
                densityLiquid: 2,
                boilingPoint: 281,
                liquidColor: 16777215,
                liquidAlpha: [2, 2, 2, 2],
                densitySolid: 3.05,
                meltingPoint: 100,
                solidColor: 16777215,
                solidAlpha: [1, 1, 1, 1]
            }, {
                showName: "Ag\u207A",
                formula: "Ag",
                valence: 1,
                chemicalName: "\u94F6\u79BB\u5B50",
                molecularMass: 107.9,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "[Ag(NH3)2]\u207A",
                formula: "[Ag(NH3)2]",
                valence: 1,
                chemicalName: "\u4E8C\u6C28\u5408\u94F6\u79BB\u5B50",
                molecularMass: 141.9,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "Al\xB3\u207A",
                formula: "Al",
                valence: 3,
                chemicalName: "\u94DD\u79BB\u5B50",
                molecularMass: 27,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "AlO2\u207B",
                formula: "AlO2",
                valence: -1,
                chemicalName: "\u504F\u94DD\u9178\u6839\u79BB\u5B50",
                molecularMass: 59,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "[B(OH)4]\u207B",
                formula: "[B(OH)4]",
                valence: -1,
                chemicalName: "\u56DB\u7F9F\u5408\u787C\u9178\u6839\u79BB\u5B50",
                molecularMass: 0,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "Ba\xB2\u207A",
                formula: "Ba",
                valence: 2,
                chemicalName: "\u94A1\u79BB\u5B50",
                molecularMass: 137,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "Br\u207B",
                formula: "Br",
                valence: -1,
                chemicalName: "\u6EB4\u79BB\u5B50",
                molecularMass: 79.9,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "BrO\u207B",
                formula: "BrO",
                valence: -1,
                chemicalName: "\u6B21\u6EB4\u9178\u6839\u79BB\u5B50",
                molecularMass: 95.9,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "C17H35COO\u207B",
                formula: "C17H35COO",
                valence: -1,
                chemicalName: "\u786C\u8102\u9178\u6839\u79BB\u5B50",
                molecularMass: 283,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "C2H5O\u207B",
                formula: "C2H5O",
                valence: -1,
                chemicalName: "\u4E59\u6C27\u8D1F\u79BB\u5B50",
                molecularMass: 45,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "C2O4\xB2\u207B",
                formula: "C2O4",
                valence: -2,
                chemicalName: "\u8349\u9178\u6839\u79BB\u5B50",
                molecularMass: 88,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "C5H11O5COO\u207B",
                formula: "C5H11O5COO",
                valence: -1,
                chemicalName: "\u8461\u8404\u7CD6\u9178\u6839\u79BB\u5B50",
                molecularMass: 195,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "C6H5COO\u207B",
                formula: "C6H5COO",
                valence: -1,
                chemicalName: "\u82EF\u7532\u9178\u6839\u79BB\u5B50",
                molecularMass: 121,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "C6H5SO3\u207B",
                formula: "C6H5SO3",
                valence: -1,
                chemicalName: "\u82EF\u78FA\u9178\u6839\u79BB\u5B50",
                molecularMass: 157.1,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "C6H5O\u207B",
                formula: "C6H5O",
                valence: -1,
                chemicalName: "\u82EF\u6C27\u8D1F\u79BB\u5B50",
                molecularMass: 93,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "Ca\xB2\u207A",
                formula: "Ca",
                valence: 2,
                chemicalName: "\u9499\u79BB\u5B50",
                molecularMass: 40.1,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "CH3COO\u207B",
                formula: "CH3COO",
                valence: -1,
                chemicalName: "\u918B\u9178\u6839\u79BB\u5B50",
                molecularMass: 59,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "Cl\u207B",
                formula: "Cl",
                valence: -1,
                chemicalName: "\u6C2F\u79BB\u5B50",
                molecularMass: 35.5,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "ClO\u207B",
                formula: "ClO",
                valence: -1,
                chemicalName: "\u6B21\u6C2F\u9178\u6839\u79BB\u5B50",
                molecularMass: 51.5,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "ClO3\u207B",
                formula: "ClO3",
                valence: -1,
                chemicalName: "\u6C2F\u9178\u6839\u79BB\u5B50",
                molecularMass: 83.5,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "ClO4\u207B",
                formula: "ClO4",
                valence: -1,
                chemicalName: "\u9AD8\u6C2F\u9178\u6839\u79BB\u5B50",
                molecularMass: 99.5,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "CO3\xB2\u207B",
                formula: "CO3",
                valence: -2,
                chemicalName: "\u78B3\u9178\u6839\u79BB\u5B50",
                molecularMass: 60,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "Cr\xB3\u207A",
                formula: "Cr",
                valence: 3,
                chemicalName: "\u94EC\u79BB\u5B50",
                molecularMass: 52,
                ionColor: 1845534,
                ionAlpha: [.01, .1, 1, 1]
            }, {
                showName: "Cr2O7\xB2\u207B",
                formula: "Cr2O7",
                valence: -2,
                chemicalName: "\u91CD\u94EC\u9178\u6839\u79BB\u5B50",
                molecularMass: 216,
                ionColor: 15469312,
                ionAlpha: [.001, .1, .4, 1]
            }, {
                showName: "CrO4\xB2\u207B",
                formula: "CrO4",
                valence: -2,
                chemicalName: "\u94EC\u9178\u6839\u79BB\u5B50",
                molecularMass: 116,
                ionColor: 16050688,
                ionAlpha: [.001, .1, .8, 1]
            }, {
                showName: "Cu\u207A",
                formula: "Cu",
                valence: 1,
                chemicalName: "\u4E9A\u94DC\u79BB\u5B50",
                molecularMass: 63.5,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "Cu\xB2\u207A",
                formula: "Cu",
                valence: 2,
                chemicalName: "\u94DC\u79BB\u5B50",
                molecularMass: 63.5,
                ionColor: 225477,
                ionAlpha: [.01, .1, .5, 1]
            }, {
                showName: "F\u207B",
                formula: "F",
                valence: -1,
                chemicalName: "\u6C1F\u79BB\u5B50",
                molecularMass: 19,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "Fe\xB2\u207A",
                formula: "Fe",
                valence: 2,
                chemicalName: "\u4E9A\u94C1\u79BB\u5B50",
                molecularMass: 55.8,
                ionColor: 8824931,
                ionAlpha: [.01, .1, .5, 1]
            }, {
                showName: "Fe\xB3\u207A",
                formula: "Fe",
                valence: 3,
                chemicalName: "\u94C1\u79BB\u5B50",
                molecularMass: 55.8,
                ionColor: 8931077,
                ionAlpha: [.01, .1, .5, 1]
            }, {
                showName: "[Fe(C6H5O)6]\xB3\u207B",
                formula: "[Fe(C6H5O)6]",
                valence: -3,
                chemicalName: "\u516D\u82EF\u915A\u5408\u94C1\u9178\u6839\u79BB\u5B50",
                molecularMass: 0,
                ionColor: 5832868,
                ionAlpha: [.001, .1, .01, 1]
            }, {
                showName: "H\u207A",
                formula: "H",
                valence: 1,
                chemicalName: "\u6C22\u79BB\u5B50",
                molecularMass: 1,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "H2PO4\u207B",
                formula: "H2PO4",
                valence: -1,
                chemicalName: "\u78F7\u9178\u4E8C\u6C22\u6839\u79BB\u5B50",
                molecularMass: 97,
                kab: 62e-9,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "HPO4",
                    valence: -2,
                    count: 1
                }],
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "HCO3\u207B",
                formula: "HCO3",
                valence: -1,
                chemicalName: "\u78B3\u9178\u6C22\u6839\u79BB\u5B50",
                molecularMass: 61,
                kab: 56e-12,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "CO3",
                    valence: -2,
                    count: 1
                }],
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "HPO4\xB2\u207B",
                formula: "HPO4",
                valence: -2,
                chemicalName: "\u78F7\u9178\u4E00\u6C22\u6839\u79BB\u5B50",
                molecularMass: 96,
                kab: 42e-14,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "PO4",
                    valence: -3,
                    count: 1
                }],
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "HC2O4\u207B",
                formula: "HC2O4",
                valence: -1,
                chemicalName: "\u8349\u9178\u6C22\u6839\u79BB\u5B50",
                molecularMass: 89,
                kab: 54e-6,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 2
                }, {
                    formula: "C2O4",
                    valence: -2,
                    count: 1
                }],
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "HS\u207B",
                formula: "HS",
                valence: -1,
                chemicalName: "\u786B\u6C22\u6839\u79BB\u5B50",
                molecularMass: 33.1,
                kab: 13e-14,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "S",
                    valence: -2,
                    count: 1
                }],
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "HSO3\u207B",
                formula: "HSO3",
                valence: -1,
                chemicalName: "\u4E9A\u786B\u9178\u6C22\u6839\u79BB\u5B50",
                molecularMass: 81.1,
                kab: 64e-9,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "SO3",
                    valence: -2,
                    count: 1
                }],
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "I\u207B",
                formula: "I",
                valence: -1,
                chemicalName: "\u7898\u79BB\u5B50",
                molecularMass: 126.9,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "IO3\u207B",
                formula: "IO3",
                valence: -1,
                chemicalName: "\u7898\u9178\u6839\u79BB\u5B50",
                molecularMass: 174.9,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "K\u207A",
                formula: "K",
                valence: 1,
                chemicalName: "\u94BE\u79BB\u5B50",
                molecularMass: 39.1,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "Li\u207A",
                formula: "Li",
                valence: 1,
                chemicalName: "\u9502\u79BB\u5B50",
                molecularMass: 6.9,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "Mg\xB2\u207A",
                formula: "Mg",
                valence: 2,
                chemicalName: "\u9541\u79BB\u5B50",
                molecularMass: 24.3,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "Mn\xB2\u207A",
                formula: "Mn",
                valence: 2,
                chemicalName: "\u9530\u79BB\u5B50",
                molecularMass: 54.9,
                ionColor: 16573179,
                ionAlpha: [.001, .1, 2, 1]
            }, {
                showName: "MnO4\u207B",
                formula: "MnO4",
                valence: -1,
                chemicalName: "\u9AD8\u9530\u9178\u6839\u79BB\u5B50",
                molecularMass: 118.9,
                ionColor: 13899237,
                ionAlpha: [.01, .1, .4, 1]
            }, {
                showName: "MnO4\xB2\u207B",
                formula: "MnO4",
                valence: -2,
                chemicalName: "\u9530\u9178\u6839\u79BB\u5B50",
                molecularMass: 118.9,
                ionColor: 1127214,
                ionAlpha: [.001, .1, .8, 1]
            }, {
                showName: "Na\u207A",
                formula: "Na",
                valence: 1,
                chemicalName: "\u94A0\u79BB\u5B50",
                molecularMass: 23,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "NH4\u207A",
                formula: "NH4",
                valence: 1,
                chemicalName: "\u94F5\u6839\u79BB\u5B50",
                molecularMass: 18,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "NO2\u207B",
                formula: "NO2",
                valence: -1,
                chemicalName: "\u4E9A\u785D\u9178\u6839\u79BB\u5B50",
                molecularMass: 46,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "NO3\u207B",
                formula: "NO3",
                valence: -1,
                chemicalName: "\u785D\u9178\u6839\u79BB\u5B50",
                molecularMass: 62,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "OH\u207B",
                formula: "OH",
                valence: -1,
                chemicalName: "\u6C22\u6C27\u6839\u79BB\u5B50",
                molecularMass: 17,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "Pb\xB2\u207A",
                formula: "Pb",
                valence: 2,
                chemicalName: "\u94C5\u79BB\u5B50",
                molecularMass: 207,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "PO4\xB3\u207B",
                formula: "PO4",
                valence: -3,
                chemicalName: "\u78F7\u9178\u6839\u79BB\u5B50",
                molecularMass: 95,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "S\xB2\u207B",
                formula: "S",
                valence: -2,
                chemicalName: "\u786B\u79BB\u5B50",
                molecularMass: 32.1,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "S2O3\xB2\u207B",
                formula: "S2O3",
                valence: -2,
                chemicalName: "\u786B\u4EE3\u786B\u9178\u6839\u79BB\u5B50",
                molecularMass: 112.2,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "SCN\u207B",
                formula: "SCN",
                valence: -1,
                chemicalName: "\u786B\u6C30\u9178\u6839\u79BB\u5B50",
                molecularMass: 58.1,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "SiO3\xB2\u207B",
                formula: "SiO3",
                valence: -2,
                chemicalName: "\u7845\u9178\u6839\u79BB\u5B50",
                molecularMass: 76.1,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "SO3\xB2\u207B",
                formula: "SO3",
                valence: -2,
                chemicalName: "\u4E9A\u786B\u9178\u6839\u79BB\u5B50",
                molecularMass: 80.1,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "SO4\xB2\u207B",
                formula: "SO4",
                valence: -2,
                chemicalName: "\u786B\u9178\u6839\u79BB\u5B50",
                molecularMass: 96.1,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "Zn\xB2\u207A",
                formula: "Zn",
                valence: 2,
                chemicalName: "\u950C\u79BB\u5B50",
                molecularMass: 65.4,
                ionColor: 16777215,
                ionAlpha: [0, 0, 0, 0]
            }, {
                showName: "[Fe(CN)6]\xB3\u207B",
                formula: "[Fe(CN)6]",
                valence: -3,
                chemicalName: "\u516D\u6C30\u5408\u94C1\u9178\u6839\u79BB\u5B50",
                molecularMass: 211.9,
                ionColor: 16706663,
                ionAlpha: [.01, .1, 1, 1]
            }, {
                showName: "[Cu(NH3)4]\xB2\u207A",
                formula: "[Cu(NH3)4]",
                valence: 2,
                chemicalName: "\u56DB\u6C28\u5408\u94DC\u79BB\u5B50",
                ionColor: 680893,
                ionAlpha: [.01, .1, 1, 1]
            }, {
                showName: "BrO3",
                formula: "BrO3",
                valence: -1,
                chemicalName: "\u6EB4\u9178\u6839\u79BB\u5B50",
                molecularMass: 127.9,
                ionColor: 16777215,
                ionAlpha: [1, 1, 1, 1]
            }, {
                formula: "OTHERS",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6742\u8D28(\u7D2B\u9ED1)",
                molecularMass: 166,
                isSolvent: !1,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 1330,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 20,
                meltingPoint: 681,
                solidColor: 16777215
            }, {
                formula: "NO2(C)0",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u5438\u4E86\u4E8C\u6C27\u5316\u6C2E\u7684\u6D3B\u6027\u70AD",
                molecularMass: 58,
                isSolvent: !1,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "C20H19N3(C)0",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u5438\u4E86\u54C1\u7EA2\u7684\u6D3B\u6027\u70AD",
                molecularMass: 58,
                isSolvent: !1,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1.2,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "C7H8O5NCl",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u88AB\u6F02\u767D\u4E86\u7684\u77F3\u854A",
                molecularMass: 18,
                isSolvent: !1,
                solubility: "Infinity",
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 200,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "C70H71O41N10Cl",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u6F02\u767D\u7684\u54C1\u7EA2",
                molecularMass: 1742.5,
                isSolvent: !1,
                solubility: "Infinity",
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "H2O2C20H14O4",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u8FC7\u6C27\u5316\u6C22\u548C\u915A\u915E",
                molecularMass: 123.98,
                isSolvent: !1,
                solubility: "Infinity",
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "(C6H10O5)n",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6DC0\u7C89",
                molecularMass: 88,
                isSolvent: !1,
                solubility: "Infinity",
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1.5,
                heatCapacityLiquid: 4200,
                boilingPoint: 357.8,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "\u9E21\u86CB\u6E05",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u9E21\u86CB\u6E05",
                molecularMass: 20,
                isSolvent: !1,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "\u788E\u74F7\u7247",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u788E\u74F7\u7247",
                molecularMass: 60,
                isSolvent: !1,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 2.18,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "\u77F3\u8721\u6CB9",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u77F3\u8721\u6CB9",
                molecularMass: 72,
                isSolvent: !1,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: .95,
                heatCapacityLiquid: 4200,
                boilingPoint: 200,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: -24,
                solidColor: 16777215
            }, {
                formula: "\u6D77\u5E26\u7070",
                isSolvent: !1,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 2,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "\u6742\u8D281",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6742\u8D28(\u9EC4\u767D)",
                molecularMass: 166,
                isSolvent: !1,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 1330,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1.2,
                meltingPoint: 681,
                solidColor: 16777215
            }, {
                formula: "C14H14N3SO3Na",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u7532\u57FA\u6A59",
                molecularMass: 0,
                isSolvent: !1,
                solubility: "Infinity",
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "C15H15N3O2",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u7532\u57FA\u7EA2",
                molecularMass: 269,
                isSolvent: !1,
                solubility: "Infinity",
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "C17H35COOH",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u786C\u8102\u9178",
                molecularMass: 284,
                isSolvent: !1,
                solubility: "Infinity",
                kab: 18e-6,
                ions: [{
                    formula: "H",
                    valence: 1,
                    count: 1
                }, {
                    formula: "C17H35COO",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: .847,
                heatCapacityLiquid: 4200,
                boilingPoint: 383,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: 69.6,
                solidColor: 16777215
            }, {
                formula: "C17H35COONa",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u786C\u8102\u9178\u94A0",
                molecularMass: 306,
                isSolvent: !1,
                solubility: "Infinity",
                ions: [{
                    formula: "Na",
                    valence: 1,
                    count: 1
                }, {
                    formula: "C17H35COO",
                    valence: -1,
                    count: 1
                }],
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1.103,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "C20H14O4",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u915A\u915E",
                molecularMass: 318,
                isSolvent: !1,
                solubility: "Infinity",
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "C20H16O6",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u88AB\u8FC7\u6C27\u5316\u6C22\u6C27\u5316\u7684\u915A\u915E",
                molecularMass: 352,
                isSolvent: !1,
                solubility: "Infinity",
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "C20H19N3",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u54C1\u7EA2",
                molecularMass: 301,
                isSolvent: !1,
                solubility: "Infinity",
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1.01,
                heatCapacityLiquid: 4200,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1.4,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "C20H19N3\xB7H2SO3",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u54C1\u7EA2\u7EDC\u5408\u7269",
                molecularMass: 383.1,
                isSolvent: !1,
                solubility: "Infinity",
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1.02,
                heatCapacityLiquid: 4200,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1.5,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "C20H20N3ClO",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u88AB\u6F02\u767D\u4E86\u7684\u54C1\u7EA2",
                molecularMass: 353.5,
                isSolvent: !1,
                solubility: "Infinity",
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "C25H52",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u8721\u70DB",
                molecularMass: 352,
                isSolvent: !1,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: .75,
                heatCapacityLiquid: 4200,
                boilingPoint: 158,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: .9,
                meltingPoint: 51,
                solidColor: 16777215
            }, {
                formula: "C7H7O4N",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u77F3\u854A",
                molecularMass: 169,
                isSolvent: !1,
                solubility: "Infinity",
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 200,
                liquidColor: 10040012,
                liquidAlpha: [0, 1, 1, 1],
                densitySolid: 1,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "C7H8O5NCl",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u88AB\u6B21\u6C2F\u9178\u6C27\u5316\u7684\u77F3\u854A",
                molecularMass: 221.5,
                isSolvent: !1,
                solubility: "Infinity",
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 200,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: 9999,
                solidColor: 16777215
            }, {
                formula: "CH2ONa(CHONa)4CHO",
                valence: 0,
                defaultPhaseType: "l",
                chemicalName: "\u94A0\u76D0",
                molecularMass: 290,
                isSolvent: !1,
                solubility: "Infinity",
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 1,
                meltingPoint: 9999,
                solidColor: 16777215,
                vaporizationHeat: 40800
            }, {
                formula: "AmBpO2p\xB7nH2O",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6CB8\u77F3",
                molecularMass: 293,
                isSolvent: !1,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 20,
                meltingPoint: 9999,
                solidColor: 16777215,
                vaporizationHeat: 40800
            }, {
                formula: "KI(OTHERS)9",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u6D77\u5E26\u7070",
                molecularMass: 607.9,
                isSolvent: !1,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: 1,
                heatCapacityLiquid: 4200,
                boilingPoint: 1330,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: 3.123,
                meltingPoint: 681,
                solidColor: 16777215,
                vaporizationHeat: 40800
            }, {
                formula: "PE",
                valence: 0,
                defaultPhaseType: "s",
                chemicalName: "\u805A\u4E59\u70EF",
                molecularMass: 31,
                isSolvent: !1,
                solubility: 0,
                ksp: 0,
                heatCapacityGas: 7,
                gasColor: 16777215,
                densityLiquid: .98,
                heatCapacityLiquid: 1e3,
                boilingPoint: 9999,
                liquidColor: 16777215,
                liquidAlpha: [0, 0, 0, 0],
                densitySolid: .7,
                meltingPoint: 120,
                solidColor: 16777215,
                vaporizationHeat: 40800
            }]
              , st = [{
                uid: 1,
                reactants: [{
                    formula: "(NH4)2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "NH3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 0,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [60, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 2,
                reactants: [{
                    formula: "(NH4)2SO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "NH3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 0,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [60, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 3,
                reactants: [{
                    formula: "(NH4)2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "NH3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "SO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 0,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [235, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 4,
                reactants: [{
                    formula: "(NH4)2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Ba(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "NH3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "BaSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 5,
                reactants: [{
                    formula: "(NH4)2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Ca(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "NH3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "CaSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 6,
                reactants: [{
                    formula: "(NH4)2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "KOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                products: [{
                    formula: "NH3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "K2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 7,
                reactants: [{
                    formula: "(NH4)2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                products: [{
                    formula: "NH3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "Na2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 8,
                reactants: [{
                    formula: "Ag",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ag2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 9,
                reactants: [{
                    formula: "Ag",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AgNO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 10,
                reactants: [{
                    formula: "Ag",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AgNO3",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 2,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 11,
                reactants: [{
                    formula: "Ag",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "Ag2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 12,
                reactants: [{
                    formula: "Ag2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                products: [{
                    formula: "Ag",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [280, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 13,
                reactants: [{
                    formula: "Ag2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "Ag2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [210, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 14,
                reactants: [{
                    formula: "Ag2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AgNO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 3,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 15,
                reactants: [{
                    formula: "Ag2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AgCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 4,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 16,
                reactants: [{
                    formula: "AgOH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NH3\xB7H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "[Ag(NH3)2]OH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 5,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 17,
                reactants: [{
                    formula: "Ag2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AgNO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 6,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 18,
                reactants: [{
                    formula: "Ag2S",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AgNO3",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }, {
                    formula: "S",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 7,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 19,
                reactants: [{
                    formula: "AgCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NH3\xB7H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "[Ag(NH3)2]Cl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 8,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 20,
                reactants: [{
                    formula: "AgCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "KI",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AgI",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "KCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 9,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 21,
                reactants: [{
                    formula: "AgCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "Na2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ag2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 10,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 22,
                reactants: [{
                    formula: "AgI",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "Na2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ag2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NaI",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 11,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 23,
                reactants: [{
                    formula: "AgNO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                products: [{
                    formula: "Ag",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [440, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 24,
                reactants: [{
                    formula: "AgNO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ag2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 12,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 25,
                reactants: [{
                    formula: "AgNO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NH3\xB7H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AgOH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NH4NO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 13,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 26,
                reactants: [{
                    formula: "AgOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                products: [{
                    formula: "Ag2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 27,
                reactants: [{
                    formula: "AlCl3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NaAlO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al(OH)3",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "s"
                }, {
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 14,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 28,
                reactants: [{
                    formula: "AlCl3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NaHCO3",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al(OH)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 15,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 29,
                reactants: [{
                    formula: "AlCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Na2CO3",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al(OH)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 16,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 30,
                reactants: [{
                    formula: "Al(OH)3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                products: [{
                    formula: "Al2O3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 31,
                reactants: [{
                    formula: "Al(OH)3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AlCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 17,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 32,
                reactants: [{
                    formula: "Al(OH)3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al2(SO4)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 17,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 33,
                reactants: [{
                    formula: "Al(OH)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NaAlO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 18,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 34,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "AgNO3",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al(NO3)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Ag",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 19,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 35,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "CuCl2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AlCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cu",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 20,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 36,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "CuSO4",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al2(SO4)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cu",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 20,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 37,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "Cu(NO3)2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al(NO3)3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cu",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 20,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 38,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AlCl3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 21,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 39,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "Fe2(SO4)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al2(SO4)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 21,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 40,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Fe(NO3)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al(NO3)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 21,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 41,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "Fe2O3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "Al2O3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [600, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 42,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "FeO",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }],
                products: [{
                    formula: "Al2O3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [600, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 43,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "s"
                }, {
                    formula: "Fe3O4",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }],
                products: [{
                    formula: "Al2O3",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "s"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 9,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [600, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 44,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "FeCl2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AlCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 22,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 45,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "FeSO4",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al2(SO4)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 22,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 46,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AlCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 23,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 47,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al2(SO4)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 24,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 48,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al(NO3)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 25,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 49,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "I2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }],
                products: [{
                    formula: "AlI3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: ["H2O"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 50,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "s"
                }, {
                    formula: "MnO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }],
                products: [{
                    formula: "Al2O3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "Mn",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [600, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 51,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                products: [{
                    formula: "Al2O3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 52,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NaAlO2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 26,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 53,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "S",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }],
                products: [{
                    formula: "Al2S3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 54,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "ZnCl2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AlCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Zn",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 27,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 55,
                reactants: [{
                    formula: "Al2O3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AlCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 28,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 56,
                reactants: [{
                    formula: "Al2O3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NaAlO2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 29,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 57,
                reactants: [{
                    formula: "Al2S3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al(OH)3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "H2S",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 58,
                reactants: [{
                    formula: "NaAlO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al(OH)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 30,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 59,
                reactants: [{
                    formula: "Ba(NO3)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "BaSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 31,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 60,
                reactants: [{
                    formula: "BaCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CuSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "BaSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CuCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 31,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 61,
                reactants: [{
                    formula: "BaCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Na2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "BaSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 31,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 62,
                reactants: [{
                    formula: "Ba(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CuSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "BaSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Cu(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 32,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 63,
                reactants: [{
                    formula: "Ba(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "BaSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 33,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 64,
                reactants: [{
                    formula: "Ba(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "BaCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 34,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 65,
                reactants: [{
                    formula: "Ba(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ba(NO3)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 34,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 66,
                reactants: [{
                    formula: "Ba(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Na2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "BaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 35,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 67,
                reactants: [{
                    formula: "Ba(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NH4Cl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "BaCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NH3\xB7H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 36,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 68,
                reactants: [{
                    formula: "Ba(OH)2\xB78H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NH4Cl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                products: [{
                    formula: "BaCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NH3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 69,
                reactants: [{
                    formula: "Ba",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ba(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 37,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 70,
                reactants: [{
                    formula: "BaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ba(HCO3)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 38,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 71,
                reactants: [{
                    formula: "Ba(HCO3)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "BaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 39,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 72,
                reactants: [{
                    formula: "BaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "BaCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 40,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 73,
                reactants: [{
                    formula: "Ba(NO3)2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                products: [{
                    formula: "BaO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "g"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [590, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 74,
                reactants: [{
                    formula: "BaO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ba(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 41,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 75,
                reactants: [{
                    formula: "Br2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "KI",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "I2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "KBr",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 42,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 76,
                reactants: [{
                    formula: "Br2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "HBr",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 43,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 77,
                reactants: [{
                    formula: "Br2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NaBr",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "l"
                }, {
                    formula: "NaBrO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 44,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 78,
                reactants: [{
                    formula: "C",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "CO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [800, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 79,
                reactants: [{
                    formula: "C",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CuO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "CO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [600, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 80,
                reactants: [{
                    formula: "C",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "Fe2O3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "CO",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [600, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 81,
                reactants: [{
                    formula: "C",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "FeO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "CO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [600, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 82,
                reactants: [{
                    formula: "C",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "CO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [700, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 83,
                reactants: [{
                    formula: "C",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 84,
                reactants: [{
                    formula: "C",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 45,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 85,
                reactants: [{
                    formula: "C",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [300, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 86,
                reactants: [{
                    formula: "Ca(HCO3)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 46,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 87,
                reactants: [{
                    formula: "Ca(OH)2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Ca(ClO)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 47,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 88,
                reactants: [{
                    formula: "Ca(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 48,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 89,
                reactants: [{
                    formula: "Ca(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CuSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Cu(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 49,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 90,
                reactants: [{
                    formula: "Ca(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "FeSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Fe(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 50,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 91,
                reactants: [{
                    formula: "Ca(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 34,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 92,
                reactants: [{
                    formula: "Ca(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ca(NO3)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 34,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 93,
                reactants: [{
                    formula: "Ca(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Na2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 51,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 94,
                reactants: [{
                    formula: "Ca(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NH4Cl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                products: [{
                    formula: "CaCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NH3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 95,
                reactants: [{
                    formula: "Ca(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NH4Cl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NH3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [60, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 52,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 96,
                reactants: [{
                    formula: "Ca(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaSO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 53,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 97,
                reactants: [{
                    formula: "Ca",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 54,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 98,
                reactants: [{
                    formula: "Ca",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ca(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 55,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 99,
                reactants: [{
                    formula: "Ca",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "CaO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 100,
                reactants: [{
                    formula: "CaCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Na2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 51,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 101,
                reactants: [{
                    formula: "CaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "CaO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [700, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 102,
                reactants: [{
                    formula: "CaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ca(HCO3)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 56,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 103,
                reactants: [{
                    formula: "CaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 57,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 104,
                reactants: [{
                    formula: "CaO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ca(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 58,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 105,
                reactants: [{
                    formula: "CaS",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ca(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 106,
                reactants: [{
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "CuCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 107,
                reactants: [{
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 108,
                reactants: [{
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "HCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HClO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 59,
                heat: null,
                reverseCoefficient: 42e-5,
                isIon: !1
            }, {
                uid: 109,
                reactants: [{
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "KI",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "I2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "KCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 60,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 110,
                reactants: [{
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "KBr",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Br2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "KCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 61,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 111,
                reactants: [{
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }, {
                    formula: "NH3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                products: [{
                    formula: "N2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 112,
                reactants: [{
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 62,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 113,
                reactants: [{
                    formula: "CO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "CO2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 114,
                reactants: [{
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Ba(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "BaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 63,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 115,
                reactants: [{
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Ca(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 64,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 116,
                reactants: [{
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "H2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: .00166,
                isIon: !1
            }, {
                uid: 117,
                reactants: [{
                    formula: "K2Cr2O7",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "FeSO4",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 7,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cr2(SO4)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Fe2(SO4)3",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "K2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 7,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 65,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 118,
                reactants: [{
                    formula: "K2CrO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "K2Cr2O7",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "K2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 66,
                heat: null,
                reverseCoefficient: 42e13,
                isIon: !1
            }, {
                uid: 119,
                reactants: [{
                    formula: "CuSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CuS",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 67,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 120,
                reactants: [{
                    formula: "Cu(NO3)2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                products: [{
                    formula: "CuO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "g"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 121,
                reactants: [{
                    formula: "Cu(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "CuO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 122,
                reactants: [{
                    formula: "Cu(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CuSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 68,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 123,
                reactants: [{
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "AgNO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ag",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "Cu(NO3)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 69,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 124,
                reactants: [{
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CuSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 70,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 125,
                reactants: [{
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cu(NO3)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 71,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 126,
                reactants: [{
                    formula: "Cu",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cu(NO3)2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 72,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 127,
                reactants: [{
                    formula: "Cu",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "CuO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 128,
                reactants: [{
                    formula: "Cu",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "Cu2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 129,
                reactants: [{
                    formula: "Cu2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CuSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 73,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 130,
                reactants: [{
                    formula: "CuSO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "KI",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CuI",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "I2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "K2SO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 74,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 131,
                reactants: [{
                    formula: "Cu2(OH)2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "CuO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 132,
                reactants: [{
                    formula: "Cu2(OH)2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CuCl2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 75,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 133,
                reactants: [{
                    formula: "Cu2S",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 16,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cu(NO3)2",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }, {
                    formula: "S",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 76,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 134,
                reactants: [{
                    formula: "CuO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 135,
                reactants: [{
                    formula: "CuO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CuCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 77,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 136,
                reactants: [{
                    formula: "CuO",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "NH3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                products: [{
                    formula: "Cu",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "N2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 137,
                reactants: [{
                    formula: "CuS",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 10,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cu(NO3)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 78,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 138,
                reactants: [{
                    formula: "CuS",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cu(NO3)2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "S",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 79,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 139,
                reactants: [{
                    formula: "CuSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "CuO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "SO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [650, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 140,
                reactants: [{
                    formula: "CuSO4\xB75H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "CuSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [260, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 141,
                reactants: [{
                    formula: "CuSO4\xB75H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "CuSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: ["\u6D53\u786B\u9178"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 142,
                reactants: [{
                    formula: "CuSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "g"
                }],
                products: [{
                    formula: "CuSO4\xB75H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 143,
                reactants: [{
                    formula: "F2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "HF",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 144,
                reactants: [{
                    formula: "FeCl2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 80,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 145,
                reactants: [{
                    formula: "FeCl2",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }, {
                    formula: "NaClO",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }, {
                    formula: "Fe(OH)3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 81,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 146,
                reactants: [{
                    formula: "FeCl2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe(NO3)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 82,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 147,
                reactants: [{
                    formula: "FeCl2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe(NO3)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 83,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 148,
                reactants: [{
                    formula: "FeSO4",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe2(SO4)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 149,
                reactants: [{
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "FeCl2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "CuCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 84,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 150,
                reactants: [{
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "FeCl2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 85,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 151,
                reactants: [{
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe(OH)3\uFF08\u80F6\u4F53\uFF09",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 152,
                reactants: [{
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "FeCl2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 86,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 153,
                reactants: [{
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "HI",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "FeCl2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "I2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 87,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 154,
                reactants: [{
                    formula: "Fe2(SO4)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "FeSO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 88,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 155,
                reactants: [{
                    formula: "Fe(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "FeCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 89,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 156,
                reactants: [{
                    formula: "Fe(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe(OH)3",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 157,
                reactants: [{
                    formula: "Fe(OH)3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                products: [{
                    formula: "Fe2O3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 158,
                reactants: [{
                    formula: "Fe(OH)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 90,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 159,
                reactants: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "AgNO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe(NO3)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Ag",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 91,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 160,
                reactants: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                products: [{
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 161,
                reactants: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CuSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "FeSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 92,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 162,
                reactants: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "g"
                }],
                products: [{
                    formula: "Fe3O4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [600, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 163,
                reactants: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe2(SO4)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 164,
                reactants: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "FeSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 93,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 165,
                reactants: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "FeCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 93,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 166,
                reactants: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe(NO3)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 94,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 167,
                reactants: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe(NO3)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 95,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 168,
                reactants: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                products: [{
                    formula: "Fe3O4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [300, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 169,
                reactants: [{
                    formula: "Fe2O3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CO",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                products: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [300, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 170,
                reactants: [{
                    formula: "Fe2O3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                products: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 171,
                reactants: [{
                    formula: "Fe2O3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 96,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 172,
                reactants: [{
                    formula: "Fe2O3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe2(SO4)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 96,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 173,
                reactants: [{
                    formula: "Fe3O4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CO",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "g"
                }],
                products: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [400, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 174,
                reactants: [{
                    formula: "Fe3O4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "l"
                }],
                products: [{
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "FeCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 97,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 175,
                reactants: [{
                    formula: "Fe3O4",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 28,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe(NO3)3",
                    valence: 0,
                    coefficient: 9,
                    phaseType: "l"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 14,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 98,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 176,
                reactants: [{
                    formula: "Fe3O4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 10,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe(NO3)3",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 99,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 177,
                reactants: [{
                    formula: "FeCl2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 100,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 178,
                reactants: [{
                    formula: "FeCl2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe(NO3)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 101,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 179,
                reactants: [{
                    formula: "FeCl2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe(NO3)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 102,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 180,
                reactants: [{
                    formula: "FeO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "FeSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 103,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 181,
                reactants: [{
                    formula: "CuO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [300, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 182,
                reactants: [{
                    formula: "H2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 183,
                reactants: [{
                    formula: "H2C2O4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "CO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [150, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 184,
                reactants: [{
                    formula: "H2C2O4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CaCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaC2O4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 104,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 185,
                reactants: [{
                    formula: "H2C2O4",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "l"
                }, {
                    formula: "KMnO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "MnSO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "K2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 10,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 105,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 186,
                reactants: [{
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "H2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !0,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 187,
                reactants: [{
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NH3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NH3\xB7H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 4,
                isIon: !1
            }, {
                uid: 188,
                reactants: [{
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                products: [{
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 106,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 189,
                reactants: [{
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 190,
                reactants: [{
                    formula: "H2O2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 191,
                reactants: [{
                    formula: "H2O2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: ["MnO2"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 192,
                reactants: [{
                    formula: "H2O2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: ["CuSO4"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 193,
                reactants: [{
                    formula: "H2O2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: ["FeCl3"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 194,
                reactants: [{
                    formula: "H2S",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "S",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 195,
                reactants: [{
                    formula: "H3BO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO3",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "HCO3",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "[B(OH)4]",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 108,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 196,
                reactants: [{
                    formula: "KMnO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 16,
                    phaseType: "l"
                }],
                products: [{
                    formula: "MnCl2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "KCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 109,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 197,
                reactants: [{
                    formula: "HCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "NH3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "NH4Cl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 300]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 198,
                reactants: [{
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Pb(NO3)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "PbCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 110,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 199,
                reactants: [{
                    formula: "HClO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !0,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 200,
                reactants: [{
                    formula: "HClO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 201,
                reactants: [{
                    formula: "NaHCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 111,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 202,
                reactants: [{
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NO2",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "g"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [80, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 203,
                reactants: [{
                    formula: "I2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "HI",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 112,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 204,
                reactants: [{
                    formula: "K",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "KOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 113,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 205,
                reactants: [{
                    formula: "K2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "KHCO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 114,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 206,
                reactants: [{
                    formula: "K2Cr2O7",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "C2H5OH",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cr2(SO4)3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "CH3COOH",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 11,
                    phaseType: "l"
                }, {
                    formula: "K2SO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 115,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 207,
                reactants: [{
                    formula: "K",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "KCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 208,
                reactants: [{
                    formula: "KClO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                products: [{
                    formula: "KCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [400, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 209,
                reactants: [{
                    formula: "KClO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                products: [{
                    formula: "KCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: ["MnO2"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [300, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 210,
                reactants: [{
                    formula: "KClO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "KCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 116,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 211,
                reactants: [{
                    formula: "NaI",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Br2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NaBr",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "I2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 60,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 212,
                reactants: [{
                    formula: "KI",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "I2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "K2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 118,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 213,
                reactants: [{
                    formula: "KI",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Pb(NO3)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "PbI2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "KNO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 119,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 214,
                reactants: [{
                    formula: "KMnO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                products: [{
                    formula: "K2MnO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "MnO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [300, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 215,
                reactants: [{
                    formula: "KMnO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O2",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "MnSO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "l"
                }, {
                    formula: "K2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 120,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 216,
                reactants: [{
                    formula: "Mg(NO3)2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                products: [{
                    formula: "MgO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "g"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [330, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 217,
                reactants: [{
                    formula: "Mg(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "MgO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [350, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 218,
                reactants: [{
                    formula: "Mg(OH)2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "MgCl2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "Fe(OH)3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 121,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 219,
                reactants: [{
                    formula: "Mg(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "MgCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 122,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 220,
                reactants: [{
                    formula: "Mg(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NH4Cl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "MgCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NH3\xB7H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 123,
                heat: null,
                reverseCoefficient: .017,
                isIon: !1
            }, {
                uid: 221,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "AgNO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mg(NO3)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Ag",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 124,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 222,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "AlCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "MgCl2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 125,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 223,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "MgCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [300, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 224,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "MgO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "C",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [300, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 225,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "FeCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "MgCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 126,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 226,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "MgCl2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 127,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 227,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CuCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "MgCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 128,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 228,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "MgCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 129,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 229,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mg(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [90, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 230,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "N2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "Mg3N2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [500, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 231,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "MgO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 232,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "ZnCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "MgCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Zn",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 130,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 233,
                reactants: [{
                    formula: "MgCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "MgCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 131,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 234,
                reactants: [{
                    formula: "MgO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "MgSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 132,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 235,
                reactants: [{
                    formula: "MnO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "MnCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 133,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 236,
                reactants: [{
                    formula: "KMnO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "FeSO4",
                    valence: 0,
                    coefficient: 10,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "l"
                }],
                products: [{
                    formula: "MnSO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Fe2(SO4)3",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "l"
                }, {
                    formula: "K2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 134,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 237,
                reactants: [{
                    formula: "N2O4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "NO2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 1.021,
                isIon: !1
            }, {
                uid: 238,
                reactants: [{
                    formula: "Na",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "C2H5OH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C2H5ONa",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 239,
                reactants: [{
                    formula: "Na",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 240,
                reactants: [{
                    formula: "Na",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 135,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 241,
                reactants: [{
                    formula: "Na",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 136,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 242,
                reactants: [{
                    formula: "Na",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "Na2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 243,
                reactants: [{
                    formula: "Na",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "Na2O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 244,
                reactants: [{
                    formula: "Na2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CH3COOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CH3COONa",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 137,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 245,
                reactants: [{
                    formula: "Na2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 138,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 246,
                reactants: [{
                    formula: "Na2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NaHCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 139,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 247,
                reactants: [{
                    formula: "Na2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "Na2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 248,
                reactants: [{
                    formula: "Na2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 249,
                reactants: [{
                    formula: "Na2O2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 250,
                reactants: [{
                    formula: "Na2O2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                products: [{
                    formula: "Na2CO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 251,
                reactants: [{
                    formula: "Na2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 140,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 252,
                reactants: [{
                    formula: "Na2SO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Na2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 141,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 253,
                reactants: [{
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NaHSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 254,
                reactants: [{
                    formula: "NaHCO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                products: [{
                    formula: "Na2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 255,
                reactants: [{
                    formula: "NaI",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "I2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 42,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 256,
                reactants: [{
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NaClO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 47,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 257,
                reactants: [{
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Na2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 117,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 258,
                reactants: [{
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "SiO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Na2SiO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 142,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 259,
                reactants: [{
                    formula: "NH3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NH4HCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 260,
                reactants: [{
                    formula: "NH3",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "g"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                products: [{
                    formula: "N2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: ["Cu"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 261,
                reactants: [{
                    formula: "NH4Cl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "NH3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [300, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 262,
                reactants: [{
                    formula: "NH4HCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "NH3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 263,
                reactants: [{
                    formula: "NH4NO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "N2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 264,
                reactants: [{
                    formula: "NO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "NO2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 265,
                reactants: [{
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Na2SO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 143,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 266,
                reactants: [{
                    formula: "P",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "g"
                }],
                products: [{
                    formula: "P2O5",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [250, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 267,
                reactants: [{
                    formula: "P2O5",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "H3PO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 268,
                reactants: [{
                    formula: "P4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "g"
                }],
                products: [{
                    formula: "P2O5",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [50, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 269,
                reactants: [{
                    formula: "Pb",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "PbSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 144,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 270,
                reactants: [{
                    formula: "Pb",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "PbCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 145,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 271,
                reactants: [{
                    formula: "PbO2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "PbSO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 146,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 272,
                reactants: [{
                    formula: "PbO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "PbCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 12,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 147,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 273,
                reactants: [{
                    formula: "S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 274,
                reactants: [{
                    formula: "Na2S2O3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 148,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 275,
                reactants: [{
                    formula: "Si",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Na2SiO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 149,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 276,
                reactants: [{
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "H2SO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 1,
                isIon: !1
            }, {
                uid: 277,
                reactants: [{
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 278,
                reactants: [{
                    formula: "KMnO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "MnSO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "K2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 150,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 279,
                reactants: [{
                    formula: "Na2SO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NaHSO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 151,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 280,
                reactants: [{
                    formula: "Zn",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "FeCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "ZnCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 152,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 281,
                reactants: [{
                    formula: "Zn",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "ZnCl2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 153,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 282,
                reactants: [{
                    formula: "Zn",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "ZnCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 154,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 283,
                reactants: [{
                    formula: "Zn",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CuCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "ZnCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 155,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 284,
                reactants: [{
                    formula: "Zn",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "AgNO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Zn(NO3)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Ag",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 156,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 285,
                reactants: [{
                    formula: "ZnCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Zn(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NaCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 157,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 286,
                reactants: [{
                    formula: "CuCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CuSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 161,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 287,
                reactants: [{
                    formula: "H2C2O4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "CO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: ["\u6D53\u786B\u9178"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 288,
                reactants: [{
                    formula: "\u6D77\u5E26\u7070",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "KI",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "\u6742\u8D281",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 289,
                reactants: [{
                    formula: "C7H7O4N",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HClO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C7H8O5NCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 290,
                reactants: [{
                    formula: "C20H19N3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HClO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C20H20N3ClO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 291,
                reactants: [{
                    formula: "C20H14O4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C20H16O6",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 292,
                reactants: [{
                    formula: "C7H7O4N",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HClO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C7H8O5NCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 293,
                reactants: [{
                    formula: "CH4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 294,
                reactants: [{
                    formula: "CHCl3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "CCl4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !0,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 295,
                reactants: [{
                    formula: "CH2Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "CHCl3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !0,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 296,
                reactants: [{
                    formula: "CH3Cl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "CH2Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !0,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 297,
                reactants: [{
                    formula: "CH4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "CH3Cl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !0,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 298,
                reactants: [{
                    formula: "CH3COOH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CH3COONa",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 158,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 299,
                reactants: [{
                    formula: "CH3COOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "(CH3COO)2Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 159,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 300,
                reactants: [{
                    formula: "CH3COOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "(CH3COO)2Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: 160,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 301,
                reactants: [{
                    formula: "CH3COOH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "C2H5OH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CH3COOC2H5",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: ["\u6D53\u786B\u9178"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 302,
                reactants: [{
                    formula: "CH3COOC2H5",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CH3COONa",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "C2H5OH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 303,
                reactants: [{
                    formula: "CH3CHO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cu(OH)2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CH3COONa",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cu2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 304,
                reactants: [{
                    formula: "CH3CHO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Ag(NH3)2OH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Ag",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "NH3",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "CH3COONH4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [50, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 305,
                reactants: [{
                    formula: "CH3CH2Br",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C2H5OH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HBr",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 306,
                reactants: [{
                    formula: "CH3CH2Br",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CH2=CH2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "NaBr",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: ["C2H5OH"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 307,
                reactants: [{
                    formula: "CH2=CH2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                products: [{
                    formula: "CO2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 308,
                reactants: [{
                    formula: "CH2=CH2",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "g"
                }, {
                    formula: "KMnO4",
                    valence: 0,
                    coefficient: 12,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 18,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CO2",
                    valence: 0,
                    coefficient: 10,
                    phaseType: "g"
                }, {
                    formula: "MnSO4",
                    valence: 0,
                    coefficient: 12,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 28,
                    phaseType: "l"
                }, {
                    formula: "K2SO4",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 309,
                reactants: [{
                    formula: "CH2=CH2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "Br2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CH2BrCH2Br",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 310,
                reactants: [{
                    formula: "CaC2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ca(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "C2H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 311,
                reactants: [{
                    formula: "C7H8",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "l"
                }, {
                    formula: "KMnO4",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 9,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C6H5COOH",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "l"
                }, {
                    formula: "MnSO4",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 14,
                    phaseType: "l"
                }, {
                    formula: "K2SO4",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 312,
                reactants: [{
                    formula: "C6H6",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C6H5NO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: ["\u6D53\u786B\u9178"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: ["50", "60"]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 313,
                reactants: [{
                    formula: "C6H6",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C6H4(NO2)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: ["\u6D53\u786B\u9178"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [60, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 314,
                reactants: [{
                    formula: "C6H5NO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HNO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C6H4(NO2)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: ["\u6D53\u786B\u9178"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [60, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 315,
                reactants: [{
                    formula: "C6H6",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C6H5SO3H",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 316,
                reactants: [{
                    formula: "C6H6",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Br2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C6H5Br",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HBr",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: ["Fe"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 317,
                reactants: [{
                    formula: "C6H6",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Br2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C6H5Br",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HBr",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: ["FeBr3"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 318,
                reactants: [{
                    formula: "C6H5ONa",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C6H5OH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NaHCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 319,
                reactants: [{
                    formula: "C6H5ONa",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CH3COOH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C6H5OH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CH3COONa",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 320,
                reactants: [{
                    formula: "C6H5OH",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }, {
                    formula: "FeCl3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "H3[Fe(C6H5O)6]",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCl",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 321,
                reactants: [{
                    formula: "C6H5OH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Br2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C6H3Br3O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "HBr",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 322,
                reactants: [{
                    formula: "OHC(CHOH)4CH2OH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cu(OH)2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "NaOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C5H11O5COONa",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cu2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 323,
                reactants: [{
                    formula: "OHC(CHOH)4CH2OH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Ag(NH3)2OH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C5H11O5COONH4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Ag",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "NH3",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "CH3COONH4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [50, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 324,
                reactants: [{
                    formula: "C2H5OH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "CH3CHO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: ["Cu"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 325,
                reactants: [{
                    formula: "C2H5OH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "CH3CHO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: ["Ag"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 326,
                reactants: [{
                    formula: "C2H5OH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CuO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "CH3CHO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 327,
                reactants: [{
                    formula: "C2H5OH",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "l"
                }, {
                    formula: "KMnO4",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CH3COOH",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "l"
                }, {
                    formula: "MnSO4",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 11,
                    phaseType: "l"
                }, {
                    formula: "K2SO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 328,
                reactants: [{
                    formula: "C2H5OH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CH2=CH2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: ["\u6D53\u786B\u9178"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [170, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 329,
                reactants: [{
                    formula: "C2H5OH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [140, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 330,
                reactants: [{
                    formula: "C2H5OH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CH3CH2OCH2CH3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: ["\u6D53\u786B\u9178"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: ["140", "145"]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 331,
                reactants: [{
                    formula: "C2H2",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "g"
                }, {
                    formula: "KMnO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CO2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "MnSO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "l"
                }, {
                    formula: "K2SO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 332,
                reactants: [{
                    formula: "C2H2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "g"
                }],
                products: [{
                    formula: "CO2",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 333,
                reactants: [{
                    formula: "C2H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "Br2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CHBr=CHBr",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 334,
                reactants: [{
                    formula: "C2H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "Br2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CHBr2CHBr2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: null
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 335,
                reactants: [{
                    formula: "C20H19N3\xB7H2SO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C20H19N3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [50, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 336,
                reactants: [{
                    formula: "C20H19N3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "C20H19N3\xB7H2SO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 50]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 337,
                reactants: [{
                    formula: "C12H22O11",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "C",
                    valence: 0,
                    coefficient: 12,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 11,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: ["\u6D53\u786B\u9178"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 338,
                reactants: [{
                    formula: "C12H22O11",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CH2OH(CHOH)3COCH2OH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OHC(CHOH)4CH2OH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: ["\u7A00\u786B\u9178"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [50, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 339,
                reactants: [{
                    formula: "\u77F3\u8721\u6CB9",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CH2=CH2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: -1,
                    k: .1
                },
                catalysts: ["\u788E\u74F7\u7247"],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [200, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !1
            }, {
                uid: 1,
                reactants: [{
                    formula: "Ag",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ag",
                    valence: 1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 2,
                reactants: [{
                    formula: "Ag",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ag",
                    valence: 1,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 3,
                reactants: [{
                    formula: "Ag2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ag",
                    valence: 1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 4,
                reactants: [{
                    formula: "Ag2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cl",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AgCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 5,
                reactants: [{
                    formula: "AgOH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NH3\xB7H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ag(NH3)2",
                    valence: 1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 6,
                reactants: [{
                    formula: "Ag2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ag",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 7,
                reactants: [{
                    formula: "Ag2S",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 8,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ag",
                    valence: 1,
                    coefficient: 6,
                    phaseType: "l"
                }, {
                    formula: "S",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 8,
                reactants: [{
                    formula: "AgCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NH3\xB7H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ag(NH3)2",
                    valence: 1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cl",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 9,
                reactants: [{
                    formula: "AgCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "I",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AgI",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Cl",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 10,
                reactants: [{
                    formula: "AgCl",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "S",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ag2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Cl",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 11,
                reactants: [{
                    formula: "AgI",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "S",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ag2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "I",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 12,
                reactants: [{
                    formula: "Ag",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ag2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 13,
                reactants: [{
                    formula: "Ag",
                    valence: 1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NH3\xB7H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AgOH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NH4",
                    valence: 1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 14,
                reactants: [{
                    formula: "Al",
                    valence: 3,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "AlO2",
                    valence: -1,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al(OH)3",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 15,
                reactants: [{
                    formula: "Al",
                    valence: 3,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCO3",
                    valence: -1,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al(OH)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 16,
                reactants: [{
                    formula: "Al",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "CO3",
                    valence: -2,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al(OH)3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 17,
                reactants: [{
                    formula: "Al(OH)3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 18,
                reactants: [{
                    formula: "Al(OH)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AlO2",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 19,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Ag",
                    valence: 1,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al",
                    valence: 3,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Ag",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 20,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "Cu",
                    valence: 2,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cu",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 21,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Fe",
                    valence: 3,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al",
                    valence: 3,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 22,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "Fe",
                    valence: 2,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 23,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 24,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 6,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 6,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 25,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 6,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 26,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AlO2",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 27,
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "Zn",
                    valence: 2,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Zn",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 28,
                reactants: [{
                    formula: "Al2O3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 29,
                reactants: [{
                    formula: "Al2O3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AlO2",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 30,
                reactants: [{
                    formula: "AlO2",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al(OH)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 31,
                reactants: [{
                    formula: "Ba",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "BaSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 32,
                reactants: [{
                    formula: "Ba",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cu",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "BaSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Cu(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 33,
                reactants: [{
                    formula: "Ba",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "BaSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 34,
                reactants: [{
                    formula: "H",
                    valence: 1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 35,
                reactants: [{
                    formula: "Ba",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO3",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "BaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 36,
                reactants: [{
                    formula: "NH4",
                    valence: 1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NH3\xB7H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 37,
                reactants: [{
                    formula: "Ba",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ba",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 38,
                reactants: [{
                    formula: "BaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ba",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCO3",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 39,
                reactants: [{
                    formula: "Ba",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCO3",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "BaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 40,
                reactants: [{
                    formula: "BaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ba",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 41,
                reactants: [{
                    formula: "BaO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ba",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 42,
                reactants: [{
                    formula: "Br2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "I",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "I2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Br",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 43,
                reactants: [{
                    formula: "Br2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Br",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 44,
                reactants: [{
                    formula: "Br2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Br",
                    valence: -1,
                    coefficient: 5,
                    phaseType: "l"
                }, {
                    formula: "BrO3",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 45,
                reactants: [{
                    formula: "C",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 46,
                reactants: [{
                    formula: "Ca",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCO3",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 47,
                reactants: [{
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cl",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "ClO",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 48,
                reactants: [{
                    formula: "Ca",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 49,
                reactants: [{
                    formula: "Ca",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cu",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Cu(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 50,
                reactants: [{
                    formula: "Ca",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Fe(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 51,
                reactants: [{
                    formula: "Ca",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO3",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 52,
                reactants: [{
                    formula: "NH4",
                    valence: 1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NH3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [60, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 53,
                reactants: [{
                    formula: "Ca",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                products: [{
                    formula: "CaSO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 54,
                reactants: [{
                    formula: "Ca",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ca",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 55,
                reactants: [{
                    formula: "Ca",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ca",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 56,
                reactants: [{
                    formula: "CaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ca",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HCO3",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 57,
                reactants: [{
                    formula: "CaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ca",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 58,
                reactants: [{
                    formula: "CaO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ca",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 59,
                reactants: [{
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "H",
                    valence: 1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "HClO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cl",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 42e-5,
                isIon: !0
            }, {
                uid: 60,
                reactants: [{
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "I",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "I2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cl",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 61,
                reactants: [{
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Br",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Br2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cl",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 62,
                reactants: [{
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cl",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 63,
                reactants: [{
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Ba",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "BaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 64,
                reactants: [{
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Ca",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 65,
                reactants: [{
                    formula: "Cr2O7",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 2,
                    coefficient: 6,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 14,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cr",
                    valence: 3,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 3,
                    coefficient: 6,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 7,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 66,
                reactants: [{
                    formula: "CrO4",
                    valence: -2,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cr2O7",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 42e13,
                isIon: !0
            }, {
                uid: 67,
                reactants: [{
                    formula: "Cu",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CuS",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 68,
                reactants: [{
                    formula: "Cu(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cu",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 69,
                reactants: [{
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Ag",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Ag",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "Cu",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 70,
                reactants: [{
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2SO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cu",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 71,
                reactants: [{
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cu",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 72,
                reactants: [{
                    formula: "Cu",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 8,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cu",
                    valence: 2,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 73,
                reactants: [{
                    formula: "Cu2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cu",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 74,
                reactants: [{
                    formula: "Cu",
                    valence: 2,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "I",
                    valence: -1,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CuI",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "I2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 75,
                reactants: [{
                    formula: "Cu2(OH)2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cu",
                    valence: 2,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 76,
                reactants: [{
                    formula: "Cu2S",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 16,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cu",
                    valence: 2,
                    coefficient: 6,
                    phaseType: "l"
                }, {
                    formula: "S",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 77,
                reactants: [{
                    formula: "CuO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cu",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 78,
                reactants: [{
                    formula: "CuS",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 8,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 8,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cu",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 79,
                reactants: [{
                    formula: "CuS",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 8,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cu",
                    valence: 2,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "S",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 80,
                reactants: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cl",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 81,
                reactants: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 6,
                    phaseType: "l"
                }, {
                    formula: "ClO",
                    valence: -1,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 4,
                    phaseType: "l"
                }, {
                    formula: "Fe(OH)3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "Cl",
                    valence: -1,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 82,
                reactants: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 83,
                reactants: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 84,
                reactants: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cu",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 85,
                reactants: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 86,
                reactants: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 87,
                reactants: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "I",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "I2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 88,
                reactants: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 89,
                reactants: [{
                    formula: "Fe(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 90,
                reactants: [{
                    formula: "Fe(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 91,
                reactants: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Ag",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Ag",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 92,
                reactants: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Cu",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 93,
                reactants: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 94,
                reactants: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 95,
                reactants: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 6,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 96,
                reactants: [{
                    formula: "Fe2O3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 97,
                reactants: [{
                    formula: "Fe3O4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 8,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 98,
                reactants: [{
                    formula: "Fe3O4",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 28,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 9,
                    phaseType: "l"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 14,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 99,
                reactants: [{
                    formula: "Fe3O4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 10,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 100,
                reactants: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 101,
                reactants: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 102,
                reactants: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 103,
                reactants: [{
                    formula: "FeO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 104,
                reactants: [{
                    formula: "H2C2O4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Ca",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CaC2O4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 105,
                reactants: [{
                    formula: "H2C2O4",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "l"
                }, {
                    formula: "MnO4",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mn",
                    valence: 2,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 10,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 106,
                reactants: [{
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NO2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }],
                products: [{
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "NO3",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "NO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 107,
                reactants: [{
                    formula: "H3BO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "[B(OH)4]",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: .0073,
                isIon: !0
            }, {
                uid: 108,
                reactants: [{
                    formula: "H3BO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Na2CO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "NaHCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Na[B(OH)4]",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 109,
                reactants: [{
                    formula: "MnO4",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 16,
                    phaseType: "l"
                }, {
                    formula: "Cl",
                    valence: -1,
                    coefficient: 10,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mn",
                    valence: 2,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 110,
                reactants: [{
                    formula: "Cl",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Pb",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "PbCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 111,
                reactants: [{
                    formula: "HCO3",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 112,
                reactants: [{
                    formula: "I2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "I",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 113,
                reactants: [{
                    formula: "K",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "K",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 114,
                reactants: [{
                    formula: "CO3",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "HCO3",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 115,
                reactants: [{
                    formula: "Cr2O7",
                    valence: -2,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "C2H5OH",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 16,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cr",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "CH3COOH",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 11,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 116,
                reactants: [{
                    formula: "ClO3",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cl",
                    valence: -1,
                    coefficient: 5,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 117,
                reactants: [{
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CO3",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 118,
                reactants: [{
                    formula: "I",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "I2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 119,
                reactants: [{
                    formula: "I",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Pb",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "PbI2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 120,
                reactants: [{
                    formula: "MnO4",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O2",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mn",
                    valence: 2,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 8,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 121,
                reactants: [{
                    formula: "Mg(OH)2",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "Fe",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mg",
                    valence: 2,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "Fe(OH)3",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 122,
                reactants: [{
                    formula: "Mg(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mg",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 123,
                reactants: [{
                    formula: "Mg(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "NH4",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mg",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "NH3\xB7H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 124,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Ag",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mg",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Ag",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 125,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "Al",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mg",
                    valence: 2,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "Al",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 126,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Fe",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mg",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 127,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "Fe",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mg",
                    valence: 2,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 128,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Cu",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mg",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 129,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mg",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 130,
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Zn",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mg",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Zn",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 131,
                reactants: [{
                    formula: "MgCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mg",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 132,
                reactants: [{
                    formula: "MgO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mg",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 133,
                reactants: [{
                    formula: "MnO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }, {
                    formula: "Cl",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mn",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 134,
                reactants: [{
                    formula: "MnO4",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 2,
                    coefficient: 5,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 8,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mn",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 3,
                    coefficient: 5,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 135,
                reactants: [{
                    formula: "Na",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Na",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 136,
                reactants: [{
                    formula: "Na",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Na",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 137,
                reactants: [{
                    formula: "CO3",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CH3COOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CH3COO",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 138,
                reactants: [{
                    formula: "CO3",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 139,
                reactants: [{
                    formula: "CO3",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "HCO3",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 140,
                reactants: [{
                    formula: "S",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Cl",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 141,
                reactants: [{
                    formula: "SO3",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 142,
                reactants: [{
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "SiO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "SiO3",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 143,
                reactants: [{
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "SO3",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 144,
                reactants: [{
                    formula: "Pb",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "PbSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 145,
                reactants: [{
                    formula: "Pb",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Cl",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "PbCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 146,
                reactants: [{
                    formula: "PbO2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "PbSO4",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }, {
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 147,
                reactants: [{
                    formula: "PbO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }, {
                    formula: "Cl",
                    valence: -1,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "PbCl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [100, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 148,
                reactants: [{
                    formula: "S2O3",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "S",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 149,
                reactants: [{
                    formula: "Si",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "SiO3",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 150,
                reactants: [{
                    formula: "MnO4",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 5,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mn",
                    valence: 2,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 5,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 151,
                reactants: [{
                    formula: "SO3",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "SO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "HSO3",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 152,
                reactants: [{
                    formula: "Zn",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Fe",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Zn",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 153,
                reactants: [{
                    formula: "Zn",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "s"
                }, {
                    formula: "Fe",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Zn",
                    valence: 2,
                    coefficient: 3,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 154,
                reactants: [{
                    formula: "Zn",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Zn",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 155,
                reactants: [{
                    formula: "Zn",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Cu",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Zn",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 156,
                reactants: [{
                    formula: "Zn",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Ag",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Zn",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "Ag",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 157,
                reactants: [{
                    formula: "Zn",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Zn(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 158,
                reactants: [{
                    formula: "CH3COOH",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CH3COO",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 159,
                reactants: [{
                    formula: "CH3COOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "CH3COO",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "Mg",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 160,
                reactants: [{
                    formula: "CH3COOH",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                products: [{
                    formula: "CH3COO",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "Fe",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }, {
                uid: 161,
                reactants: [{
                    formula: "CuCO3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cu",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                reactionRate: {
                    type: 2,
                    k: .1
                },
                catalysts: [],
                conditions: {
                    electrify: !1,
                    light: !1,
                    temperature: [-270, 1e6]
                },
                equation: "",
                type: -1,
                ionId: -1,
                heat: null,
                reverseCoefficient: 0,
                isIon: !0
            }]
              , ct = [{
                type: 0,
                E: -2.37,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Mg",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                uid: 1
            }, {
                type: 1,
                E: -2.37,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Mg",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 2
            }, {
                type: 0,
                E: -2.69,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Mg(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                uid: 3
            }, {
                type: 1,
                E: -2.69,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Mg",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mg(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                uid: 4
            }, {
                type: 0,
                E: -1.66,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Al",
                    valence: 3,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 3,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                uid: 5
            }, {
                type: 1,
                E: -1.66,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -3,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Al",
                    valence: 3,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 6
            }, {
                type: 0,
                E: -2.43,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "AlO2",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 3,
                    phaseType: "e"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 4,
                    phaseType: "l"
                }],
                uid: 7
            }, {
                type: 1,
                E: -2.43,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Al",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -3,
                    phaseType: "e"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AlO2",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                uid: 8
            }, {
                type: 0,
                E: -.76,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Zn",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Zn",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                uid: 9
            }, {
                type: 1,
                E: -.76,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Zn",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Zn",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 10
            }, {
                type: 0,
                E: -1.24,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Zn(OH)",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Zn",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                uid: 11
            }, {
                type: 1,
                E: -1.24,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Zn",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Zn(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                uid: 12
            }, {
                type: 0,
                E: -.45,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                uid: 13
            }, {
                type: 1,
                E: -.45,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 14
            }, {
                type: 0,
                E: -.88,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Fe(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                uid: 15
            }, {
                type: 1,
                E: -.88,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Fe",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                uid: 16
            }, {
                type: 0,
                E: -.36,
                acid: 0,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "PbSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Pb",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 17
            }, {
                type: 1,
                E: -.36,
                acid: 0,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Pb",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "PbSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                uid: 18
            }, {
                type: 0,
                E: -.12,
                acid: 0,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Pb",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Pb",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                uid: 19
            }, {
                type: 1,
                E: -.12,
                acid: 0,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Pb",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Pb",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 20
            }, {
                type: 0,
                E: -.58,
                acid: 1,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "PbO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Pb",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                uid: 21
            }, {
                type: 1,
                E: -.58,
                acid: 1,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Pb",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "PbO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 22
            }, {
                type: 0,
                E: 0,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: -.22,
                    Zn: -.69,
                    Ag: -.3,
                    Cu: -.35,
                    C: -.32
                },
                reactants: [{
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                uid: 23
            }, {
                type: 1,
                E: 0,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "H",
                    valence: 1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                uid: 24
            }, {
                type: 0,
                E: -.83,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: -.22,
                    Zn: -.69,
                    Ag: -.3,
                    Cu: -.35,
                    C: -.32
                },
                reactants: [{
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                uid: 25
            }, {
                type: 1,
                E: -.83,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "H2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                uid: 26
            }, {
                type: 0,
                E: .25,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "PbO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "PbO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                uid: 27
            }, {
                type: 1,
                E: .25,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "PbO",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "PbO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 28
            }, {
                type: 0,
                E: .34,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Cu",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                uid: 29
            }, {
                type: 1,
                E: .34,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Cu",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 30
            }, {
                type: 0,
                E: -.36,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Cu(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                uid: 31
            }, {
                type: 1,
                E: -.36,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Cu",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cu(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                uid: 32
            }, {
                type: 0,
                E: .54,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "I2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "I",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                uid: 33
            }, {
                type: 1,
                E: .54,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "I",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "I2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 34
            }, {
                type: 0,
                E: .26,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "IO3",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 6,
                    phaseType: "e"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "I",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 6,
                    phaseType: "l"
                }],
                uid: 35
            }, {
                type: 1,
                E: .26,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "I",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -6,
                    phaseType: "e"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "IO3",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                uid: 36
            }, {
                type: 0,
                E: .77,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 37
            }, {
                type: 1,
                E: .77,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Fe",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -1,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Fe",
                    valence: 3,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 38
            }, {
                type: 0,
                E: -.56,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Fe(OH)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Fe(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 39
            }, {
                type: 1,
                E: -.56,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Fe(OH)2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -1,
                    phaseType: "e"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Fe(OH)3",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                uid: 40
            }, {
                type: 0,
                E: .8,
                acid: 0,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Ag",
                    valence: 1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Ag",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                uid: 41
            }, {
                type: 1,
                E: .8,
                acid: 0,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Ag",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -1,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Ag",
                    valence: 1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 42
            }, {
                type: 0,
                E: .22,
                acid: 0,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "AgCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Ag",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Cl",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 43
            }, {
                type: 1,
                E: .22,
                acid: 0,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Ag",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -1,
                    phaseType: "e"
                }, {
                    formula: "Cl",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AgCl",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                uid: 44
            }, {
                type: 0,
                E: .04,
                acid: 0,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "AgBr",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Ag",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "Br",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 45
            }, {
                type: 1,
                E: .04,
                acid: 0,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Ag",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -1,
                    phaseType: "e"
                }, {
                    formula: "Br",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AgBr",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                uid: 46
            }, {
                type: 0,
                E: -.15,
                acid: 0,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "AgI",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Ag",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "I",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 47
            }, {
                type: 1,
                E: -.15,
                acid: 0,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Ag",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -1,
                    phaseType: "e"
                }, {
                    formula: "I",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "AgI",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                uid: 48
            }, {
                type: 0,
                E: 1.09,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Br2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Br",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                uid: 49
            }, {
                type: 1,
                E: 1.09,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Br",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Br2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 50
            }, {
                type: 0,
                E: .76,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "BrO3",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 6,
                    phaseType: "e"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Br",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 6,
                    phaseType: "l"
                }],
                uid: 51
            }, {
                type: 1,
                E: .76,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Br",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -6,
                    phaseType: "e"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 6,
                    phaseType: "l"
                }],
                products: [{
                    formula: "BrO3",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 3,
                    phaseType: "l"
                }],
                uid: 52
            }, {
                type: 0,
                E: 1.23,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 4,
                    phaseType: "e"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                uid: 53
            }, {
                type: 1,
                E: 1.23,
                acid: 0,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: .98,
                    Cu: .66,
                    C: 1.09
                },
                reactants: [{
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -4,
                    phaseType: "e"
                }],
                products: [{
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }],
                uid: 54
            }, {
                type: 0,
                E: .4,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 4,
                    phaseType: "e"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "OH",
                    valence: -1,
                    coefficient: 4,
                    phaseType: "l"
                }],
                uid: 55
            }, {
                type: 1,
                E: .4,
                acid: 1,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: .98,
                    Cu: .66,
                    C: 1.09
                },
                reactants: [{
                    formula: "OH",
                    valence: -1,
                    coefficient: 4,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -4,
                    phaseType: "e"
                }],
                products: [{
                    formula: "O2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                uid: 56
            }, {
                type: 0,
                E: 1.36,
                acid: 0,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Cl",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                uid: 57
            }, {
                type: 1,
                E: 1.36,
                acid: 0,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: .25
                },
                reactants: [{
                    formula: "Cl",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }],
                products: [{
                    formula: "Cl2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }],
                uid: 58
            }, {
                type: 0,
                E: .81,
                acid: 1,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "ClO",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cl",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                uid: 59
            }, {
                type: 1,
                E: .81,
                acid: 1,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: .25
                },
                reactants: [{
                    formula: "Cl",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "ClO",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "l"
                }],
                uid: 60
            }, {
                type: 0,
                E: 1.69,
                acid: 0,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "PbO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 2,
                    phaseType: "e"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }],
                products: [{
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "PbSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }],
                uid: 61
            }, {
                type: 1,
                E: 1.69,
                acid: 0,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "PbSO4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -2,
                    phaseType: "e"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "PbO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "s"
                }, {
                    formula: "SO4",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 4,
                    phaseType: "l"
                }],
                uid: 62
            }, {
                type: 1,
                E: -3,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "CH4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -8,
                    phaseType: "e"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 2,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CO2",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 8,
                    phaseType: "l"
                }],
                uid: 63
            }, {
                type: 1,
                E: -3,
                acid: 1,
                neutral: 1,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "CH4",
                    valence: 0,
                    coefficient: 1,
                    phaseType: "g"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: -8,
                    phaseType: "e"
                }, {
                    formula: "OH",
                    valence: -1,
                    coefficient: 10,
                    phaseType: "l"
                }],
                products: [{
                    formula: "CO3",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 7,
                    phaseType: "l"
                }],
                uid: 64
            }, {
                type: 0,
                E: 1.51,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "MnO4",
                    valence: -1,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 5,
                    phaseType: "e"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 8,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Mn",
                    valence: 2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 4,
                    phaseType: "l"
                }],
                uid: 65
            }, {
                type: 0,
                E: 1.33,
                acid: 0,
                neutral: 0,
                superE: {
                    Fe: 0,
                    Zn: 0,
                    Ag: 0,
                    Cu: 0,
                    C: 0
                },
                reactants: [{
                    formula: "Cr2O7",
                    valence: -2,
                    coefficient: 1,
                    phaseType: "l"
                }, {
                    formula: "e",
                    valence: -1,
                    coefficient: 6,
                    phaseType: "e"
                }, {
                    formula: "H",
                    valence: 1,
                    coefficient: 14,
                    phaseType: "l"
                }],
                products: [{
                    formula: "Cr",
                    valence: 3,
                    coefficient: 2,
                    phaseType: "l"
                }, {
                    formula: "H2O",
                    valence: 0,
                    coefficient: 7,
                    phaseType: "l"
                }],
                uid: 66
            }]
              , Ae = {
                nobook: v,
                eqLibJson: ot,
                eqMessage: lt,
                electroReactData: ct,
                chemicalData: rt,
                reactionData: st
            };
            const ut = ":host{display:block}#ele-canvas-div{position:fixed;left:0;right:0;top:0;bottom:0}";
            let We = class {
                constructor(h) {
                    (0,
                    le.r)(this, h),
                    this.initComplete = (0,
                    le.c)(this, "initComplete", 7),
                    this.hadDestroy = !1,
                    this.listenerFuncAry = []
                }
                componentDidLoad() {
                    ae.L.setOnloadTime(),
                    this.initComplete.emit(),
                    setTimeout(()=>{
                        this.autoInit && this.initChem()
                    }
                    , 10)
                }
                initChem(h=null) {
                    return Oe(this, null, function*() {
                        return h && (this.canvas = h),
                        this.createCanvasApp(),
                        this.initListener(),
                        this.labData && this.setDataToModule(this.labData),
                        {
                            dispatch: F.a,
                            canvasMain: this.chemicalMain
                        }
                    })
                }
                createCanvasApp() {
                    this.element.querySelector("#ele-canvas-div").appendChild(this.canvas),
                    window.PIXI.settings.RESOLUTION = 1,
                    window.PIXI.settings.FILTER_RESOLUTION = 1;
                    let h;
                    window.eleFrameWork ? h = window.eleFrameWork : (h = new Ae.nobook.framework.NbFramework(this.canvas),
                    window.eleFrameWork = h,
                    h.globalConfig.cdnUrl = "assets/electro/",
                    h.modules = [Ae.nobook.electroChemistry.ElectrochemistryModule],
                    h.initModule(Ae.nobook.framework.ModuleType.CHEMICAL_ELECTRO),
                    h.currentModule.initData({
                        libData: Ae.eqMessage,
                        chemicalData: Ae.chemicalData,
                        reactionData: Ae.reactionData,
                        electroReactData: Ae.electroReactData
                    })),
                    this.chemicalMain = te.C.chemicalMain = h.service,
                    te.C.NBCommand = j.a,
                    te.C.moduleType = 1,
                    this.chemicalMain.execute(j.a.SET_STAGE_RENDER_ENABLED, !0);
                    const m = window.localStorage.getItem("soundMuteType") === "1";
                    this.chemicalMain.execute(j.a.interactive.SET_MUTE_TYPE, {
                        muteType: m
                    }),
                    window.createjs.Sound.setMute(m)
                }
                initListener() {
                    this.chemicalMain.on(j.N.communicate.angular.LOADED_RESTORE_DATA, ()=>{
                        F.a.emit(F.E.LOADED_RESTORE_DATA);
                        const n = {
                            zoom: this.chemicalMain.execute(j.a.GET_SCALE) || 2
                        };
                        F.a.emit(F.E.CHANGE_ZOOM, n)
                    }
                    );
                    const h = n=>{
                        const o = n.detail;
                        this.chemicalMain.execute(j.a.ZOOM_IN_OUT, {
                            zoomValue: o.value
                        }),
                        F.a.emit(F.E.CHANGE_PANEL_STATUS),
                        F.a.emit(F.E.SHOW_EQ_LIST, [])
                    }
                    ;
                    this.listenerFuncAry.push({
                        type: F.E.ZOOM_IN_OUT,
                        func: h,
                        isChemicalMain: !1
                    });
                    const m = ()=>{
                        this.showAllEqu()
                    }
                    ;
                    this.listenerFuncAry.push({
                        type: F.E.SHOW_ALL_EQ,
                        func: m,
                        isChemicalMain: !1
                    });
                    const f = ()=>{
                        this.showLab(this.strLatestContent)
                    }
                    ;
                    this.listenerFuncAry.push({
                        type: F.E.RESET_LAB,
                        func: f,
                        isChemicalMain: !1
                    });
                    const p = n=>{
                        te.C.setStageEnable(n.detail)
                    }
                    ;
                    this.listenerFuncAry.push({
                        type: F.E.SET_STAGE_RENDER_ENABLED,
                        func: p,
                        isChemicalMain: !1
                    });
                    const c = n=>{
                        te.C.setMuteType(n.detail)
                    }
                    ;
                    this.listenerFuncAry.push({
                        type: F.E.SET_MUTE_TYPE,
                        func: c,
                        isChemicalMain: !1
                    });
                    const l = n=>{
                        let o = n.detail;
                        !o || (o.type === "eq" && (o = {
                            type: "uid",
                            uid: o.eq.UID
                        }),
                        this.chemicalMain.execute(j.a.DELETE_EQUIPMENT, o))
                    }
                    ;
                    this.listenerFuncAry.push({
                        type: F.E.DEL_EQ,
                        func: l,
                        isChemicalMain: !1
                    });
                    const i = n=>{
                        F.a.emit(F.E.SHOW_EQ_ATTRIBUTE, {
                            eq: n,
                            main: this.chemicalMain,
                            cmd: j.a
                        })
                    }
                    ;
                    this.listenerFuncAry.push({
                        type: j.N.communicate.angular.SHOW_EQ_ATTRIBUTE,
                        func: i,
                        isChemicalMain: !0
                    });
                    const e = n=>{
                        F.a.emit(F.E.SHOW_EQ_LIST, n)
                    }
                    ;
                    this.listenerFuncAry.push({
                        type: j.N.communicate.angular.SHOW_EQ_LIST,
                        func: e,
                        isChemicalMain: !0
                    });
                    const t = n=>{
                        F.a.emit(F.E.CHANGE_PANEL_STATUS, n)
                    }
                    ;
                    this.listenerFuncAry.push({
                        type: j.N.communicate.angular.CHANGE_PANEL_STATUS,
                        func: t,
                        isChemicalMain: !0
                    }),
                    this.listenerFuncAry.push({
                        type: j.N.communicate.angular.RIGHT_MOUSE_DOWN,
                        func: t,
                        isChemicalMain: !0
                    });
                    const a = n=>{
                        F.a.emit(F.E.CHANGE_PANEL_STATUS),
                        n.zoom *= 2,
                        F.a.emit(F.E.CHANGE_ZOOM, n),
                        F.a.emit(F.E.SHOW_EQ_LIST, [])
                    }
                    ;
                    this.listenerFuncAry.push({
                        type: j.N.change.ZOOM,
                        func: a,
                        isChemicalMain: !0
                    }),
                    this.listenerFuncAry.push({
                        type: j.N.communicate.angular.EQ_DRAG_MOVE,
                        func: t,
                        isChemicalMain: !0
                    }),
                    this.listenerFuncAry.forEach(n=>{
                        n.isChemicalMain ? this.chemicalMain.on(n.type, n.func) : F.a.on(n.type, n.func)
                    }
                    )
                }
                removeListener() {
                    this.listenerFuncAry.forEach(h=>{
                        h.isChemicalMain ? this.chemicalMain.off(h.type, h.func) : F.a.off(h.type, h.func)
                    }
                    )
                }
                disconnectedCallback() {
                    this.hadDestroy || (this.hadDestroy = !0,
                    this.removeListener(),
                    this.chemicalMain.execute(j.a.DELETE_EQUIPMENT, {
                        type: "all",
                        forceClear: !0
                    }),
                    window.eleFrameWork.app.render(),
                    this.chemicalMain.execute(j.a.SET_STAGE_RENDER_ENABLED, !1),
                    this.chemicalMain = null)
                }
                showAllEqu() {
                    this.chemicalMain.execute(j.a.SHOW_ALL_EQ)
                }
                setDataToModule(h) {
                    return Oe(this, null, function*() {
                        if (typeof h == "string")
                            try {
                                h = JSON.parse(h)
                            } catch (m) {
                                console.log("\u4F20\u8FDB\u6765\u7684\u5B57\u7B26\u4E32\u65E0\u6CD5\u89E3\u6790");
                                return
                            }
                        if (h && h.id)
                            try {
                                const m = `assets/electro/resourceData/${h.id}.json`;
                                h = (yield(yield fetch(m)).json()).data
                            } catch (m) {
                                h = null,
                                console.warn(m)
                            }
                        if (!h || !h.moduleData || this.strLatestContent === h) {
                            F.a.emit(F.E.LOADED_RESTORE_DATA);
                            return
                        }
                        this.showLab(h)
                    })
                }
                getCurData() {
                    return Oe(this, null, function*() {
                        return new Promise(h=>{
                            h(JSON.parse(this.chemicalMain.execute(j.a.interactive.SAVE_DATA, {})))
                        }
                        )
                    })
                }
                showLab(h) {
                    this.chemicalMain.execute(j.a.interactive.RESTORE_DATA, h),
                    this.strLatestContent = h
                }
                render() {
                    return (0,
                    le.h)("div", {
                        id: "ele-canvas-div"
                    })
                }
                get element() {
                    return (0,
                    le.g)(this)
                }
            }
            ;
            We.style = ut
        }
    }]);
}
)()
